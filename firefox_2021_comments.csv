revision_id,revision_url,title,authorPHID,created_utc,text
134876,https://phabricator.services.mozilla.com/D134876,"Bug 1745730, disable bfcache when loading the current uri again, r=peterv",PHID-USER-7hxjutcooeszod3rg3dr,2021-12-30 18:15:07,https://treeherder.mozilla.org/#/jobs?repo=try&revision=424cfbdf119f7e5836607fa7617a77aec2469b58
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-tov74rglvoehjrhavwxp,2022-01-24 22:53:06,">>! In D134826#4444377, @jandem wrote:
> Is there a test we could add for this?

We can't add a jsapi test because the methods to create tuples/records aren't exposed in jsapi.cpp yet. (They should be eventually, but that would be a bigger change.) I'm not sure if there's another way to add a test of an internal method."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2022-01-24 13:58:56,r=me with comments addressed
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2022-01-21 14:55:09,Is there a test we could add for this?
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2022-01-21 14:54:23,"I think this is wrong for non-debug builds where `MOZ_ASSERT` is a no-op. Should be `MOZ_ALWAYS_TRUE`?

While you're here, as a style rule we don't use else-after-return"
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-tov74rglvoehjrhavwxp,2022-01-17 23:16:54,"I don't understand what's causing the ""patching file js/src/builtin/TupleObject.h / Hunk #1 FAILED at 11"" error."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-14 06:40:51,"Code analysis found 1 defect in the diff 527986:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/527986) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9302133c51f18b9e88f19bcc56aa67a845819eb0)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-10 23:47:28,"Code analysis found 1 defect in the diff 526421:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/526421) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2b6dbad5b51621ca4a034305bd5da75ea0ce9a22)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-05 08:57:02,"Code analysis found 1 defect in the diff 524766:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/524766) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ede7ee967b204768a953dafac5ce530ef05356c9)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-04 07:45:07,"Code analysis found 1 defect in the diff 524308:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/524308) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b434baa1a09c6aade3ac08b83bfd0dfc8dc7cb16)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-04 07:41:25,"Code analysis found 1 defect in the diff 524301:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/524301) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=286e44271fa144be2f7a39a34b4a6af5b485bbaa)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2022-01-04 03:33:21,"Code analysis found 1 defect in the diff 524236:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/524236) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1aad9bd2212766b37117c2b73ac5295765bfe4a9)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-6hmixvvaxxfdwf2mqi7o,2021-12-30 15:29:22,"If `allowGC` is false, we shouldn't go in any path that requires rooting (for example, in the `!v.isPrimitive()` check above we return `nullptr` because it could cause a GC run)."
134826,https://phabricator.services.mozilla.com/D134826,Bug 1744975 - 4. Handle Records and Tuples properly in js::ToStringSlow() r=jandem,PHID-USER-cje4weq32o3xyuegalpj,2021-12-30 00:26:43,"Code analysis found 1 defect in the diff 523595:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/523595) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=78a4958055b84fb8ea2665efcffe01337baed0fd)."
134776,https://phabricator.services.mozilla.com/D134776,Bug 1651527 - [devtools] Remove now unused Toolbox's switch-target event.,PHID-USER-6oeredp5pcvqrg736rdc,2022-01-03 13:00:14,"tsting-flag: removing unused event

good catch!"
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-03-28 11:34:23,This landed; see https://bugzilla.mozilla.org/show_bug.cgi?id=1760933 for the bug tracking why it wasn't automatically closed.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-23 02:52:26,Repush whole stack following rebase to central to try and make lando happy. No changes to patches.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-22 23:56:58,Add data_reviews URL for new metrics. Repushing entire stack in preparation for landing.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-22 23:28:15,Fix incorrect property being checked in tests.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-17 02:16:22,"Polish: remove stray debug info()s, fix spelling errors, clarify comments, adjust a string. Changes should be non functional (except for debug log spam)."
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-17 02:05:23,Repushing stack. Added in XML parse error case and metric. Rework tests and expand coverage.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-16 01:55:25,Thanks for the feedback. It's much appreciated. I've added the tests for the abort case into the next changeset in the stack.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-16 01:51:40,Fix comment typo.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-16 01:44:09,"Respond to reivew feedback: fix comment in setupContentSigTestPrefs, expand test cases to cover update failure due to abort error."
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-15 23:45:15,">>! In D134726#4609601, @Gijs wrote:
> LGTM but can we also test the ""abort"" case?

Sounds good, I'm not sure how to go about it, so am open to suggestions. I like the live server approach used here, but in a pinch I think I can try using the fake/mock machinery to abort the request like in `test_checkForAddons_abort`. I'll give that a go and see how I do."
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-03-15 14:53:15,Nit: this comment seems odd because the next line doesn't store an old pref value - it just returns one. So maybe update the comment to say that?
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-03-15 14:53:15,"LGTM but can we also test the ""abort"" case?"
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-15 10:04:33,Fix documentation TODO.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-15 02:00:51,Fix linting errors.
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-cje4weq32o3xyuegalpj,2022-03-15 01:41:42,"Code analysis found 3 defects in the diff 556386:
 - 3 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/556386) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3ae68d2f335ee2a52abb7851c992dc4283183145)."
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-yzgkpxbq6src7zt72e2b,2022-03-15 01:17:37,"Remove WIP, submit patches for review."
134726,https://phabricator.services.mozilla.com/D134726,Bug 1739664 - Rework existing test cases. r?gijs,PHID-USER-cje4weq32o3xyuegalpj,2021-12-28 03:20:48,"Code analysis found 1 defect in the diff 523345:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/523345) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f76c94a974dd3e85d8685ad78b89c12e4a1ef638)."
134675,https://phabricator.services.mozilla.com/D134675,Bug 1685387 - Update the text on about:restartrequired to account for private windows. r=gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-01-14 20:56:56,"Thanks, Dão!"
134675,https://phabricator.services.mozilla.com/D134675,Bug 1685387 - Update the text on about:restartrequired to account for private windows. r=gijs,PHID-USER-cje4weq32o3xyuegalpj,2022-01-14 15:13:35,"Code analysis found 1 defect in the diff 528107:
 - 1 defect found by l10n-conflicts (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/528107) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e1582aa0de6cfde26ec1b61912d3ba2806f854d8)."
134675,https://phabricator.services.mozilla.com/D134675,Bug 1685387 - Update the text on about:restartrequired to account for private windows. r=gijs,PHID-USER-cje4weq32o3xyuegalpj,2022-01-14 15:12:47,"Code analysis found 2 defects in the diff 528106:
 - 1 defect found by fluent-lint (Mozlint)
 - 1 defect found by l10n-conflicts (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/528106) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9ee7c901ee8c78037e5b12b1827abd3e3c30fefa)."
134675,https://phabricator.services.mozilla.com/D134675,Bug 1685387 - Update the text on about:restartrequired to account for private windows. r=gijs,PHID-USER-cje4weq32o3xyuegalpj,2022-01-13 10:20:29,"Code analysis found 1 defect in the diff 527494:
 - 1 defect found by l10n-conflicts (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/527494) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=86a7f457c57b0a52c364ceb17eaf77c7254dd289)."
134675,https://phabricator.services.mozilla.com/D134675,Bug 1685387 - Update the text on about:restartrequired to account for private windows. r=gijs,PHID-USER-sqfa4zdcqmocvjmh7eqa,2022-01-13 10:03:15,update copy across about:restartrequired
134624,https://phabricator.services.mozilla.com/D134624,"Bug 1737831 - Detect whether menu bar is visible at the beginning of fullscreen, and if so don't shift down by menubar height. r=#mac-reviewers",PHID-USER-sasiqhjk3rmprfyixaj6,2021-12-27 10:45:45,"Yeah not sure if there's a better way. This seems reasonable.

testing-exception-other: Requires a particular system setting."
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2022-01-14 23:05:08,https://bugzilla.mozilla.org/show_bug.cgi?id=1750304
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2022-01-14 22:53:33,"sure, I will file a followup to discuss and revisit pros and cons of this check placement in AppConstants"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2022-01-14 05:04:48,"> Nit: Related to @mkaply's comment (quoted below),  I'm wondering if this might make sense [[ https://searchfox.org/mozilla-central/source/toolkit/modules/BrowserUtils.jsm#326 | here ]] with the checks for showing VPN and Rally. 
> 

I do share @mkaply and @mviar's concern that since `AppConstants` contains almost exclusively build time substitutions, it might not be the right place for this check."
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2022-01-14 05:04:48,I think all the necessary tweaks for our repack are present. Thank you!
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2022-01-13 18:03:03,"That's definitely an option , kept in AppConstants as distribution.id here is specific to CN and similar check in https://searchfox.org/mozilla-central/source/browser/components/newtab/lib/ASRouterTargeting.jsm#583 has AppConstants available"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2022-01-13 18:03:03,"Yes, CN repack will get only simple template as default UI"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2022-01-13 18:03:03,That's correct for Fx98 simple template is the default UI that will be rolled out globally
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-hg34ogm5emdq7emqrlmh,2022-01-13 15:24:05,Want to confirm that only the simple template will be available to users with CN repack
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-hg34ogm5emdq7emqrlmh,2022-01-13 15:24:05,Are we only doing simple for now?
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-hg34ogm5emdq7emqrlmh,2022-01-13 15:24:05,"Nit: Related to @mkaply's comment (quoted below),  I'm wondering if this might make sense [[ https://searchfox.org/mozilla-central/source/toolkit/modules/BrowserUtils.jsm#326 | here ]] with the checks for showing VPN and Rally. 

> AppConstants is an great idea, but distribution ID is read dynamically so I'm not sure it fits the model. Is there some other place we put global dynamic values like that?"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-hg34ogm5emdq7emqrlmh,2022-01-13 15:24:05,"LGTM overall, just a question re: only updating for the simple template and a nit."
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-t4yzy4mbd2hzmxetsmsb,2022-01-07 17:06:08,"> I'm kind of surprised this works and doesn't get you the ""null"" branch.

I've always used null. That's a reasonably common pattern. 

https://searchfox.org/mozilla-central/search?q=getDefaultBranch%28null%29&path=&case=false&regexp=false

If """" is the correct way, we should file a cleanup bug.

Definitely should use default branch. I have a bug to make everyone use the default branch for distribution stuff, just haven't had a chance to get it in.

AppConstants is an great idea, but distribution ID is read dynamically so I'm not sure it fits the model. Is there some other place we put global dynamic values like that?"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2022-01-05 03:11:05,"Hi @Gijs regarding the 404, it looks like I only mentioned this in an earlier bug comment:


>The ... rebase (of www.firefox.com.cn onto more recent www.mozilla.org content) is not yet ready, and the two urls above are not available yet, but I'll make sure they redirect to proper alternatives.

https://bugzilla.mozilla.org/1741795#c7"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-01-04 22:01:06,This is a 404...
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-01-04 22:01:06,"Nit: use `""""` as the argument here. I'm kind of surprised this works and doesn't get you the `""null""` branch.

Note that some consumers just grab this without bothering to specify they want the default branch. Probably worth checking with @mkaply what is necessary/right, and filing a follow-up bug, perhaps? I feel like this should be accessible somewhere more convenient (Perhaps AppConstants?) rather than everyone rolling their own version of this check."
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-7kwqcpqrdv7xuk47hcvc,2022-01-04 22:01:06,code-wise this is mostly OK but the URLs and QR codes are going to need fixing still.
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2021-12-27 03:10:47,"> SVGs for QRCode points to below URLS for 'simple' and 'advanced' template:
> 
> ...
> 
> @hectorz please share what should be qrcode links for China repack thanks
> 
> 

For QR code, please use `https://www.firefox.com.cn/mobile/qrcode-redirect/` where we have a special treatment for WeChat.

Feel free to add any utm_* params should it be necessary."
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-3h6otuy64aw665igdl5x,2021-12-24 00:28:33,"SVGs for QRCode points to below URLS for 'simple' and 'advanced' template:

https://app.adjust.com/2uo1qc?campaign=firefox-desktop&adgroup=qr-modal&creative=morefrommozilla-FXVT-113-a&fallback=http://mozilla.org/firefox/mobile/


https://app.adjust.com/2uo1qc?campaign=firefox-desktop&adgroup=qr-modal&creative=morefrommozilla-fxvt-113-b&fallback=http://mozilla.org/firefox/mobile/

@hectorz please share what should be qrcode links for China repack thanks"
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2021-12-23 02:49:09,China site is solely focused on Firefox and we don't have the `/firefox/` prefix in paths.
134574,https://phabricator.services.mozilla.com/D134574,Bug 1741795 - Make More from Mozilla content customizable by partner repacks,PHID-USER-chbdyvyw5qsh7p76jx5k,2021-12-23 02:49:09,I also think separate QR codes would be necessary.
134524,https://phabricator.services.mozilla.com/D134524,"Bug 1746414 - Support specifying defaults with 'extend_parameters_schema', r?#taskgraph-reviewers!",PHID-USER-mefa72mp4kzwenywt7gj,2021-12-22 21:29:52,"thanks for the unittest, this is nice to see"
134424,https://phabricator.services.mozilla.com/D134424,"Bug 1747091 - Force CSS with moz-extension schemes to get revalidated temporarily. r=rpl,mixedpuppy",PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-21 21:57:53,"I've linked D134438 (including the test case I did mention earlier) as a child revision and pushed it to try here (only included test-verify, the push to try is mainly meant to confirm the test is stable and doesn't fail intermittently):
- https://treeherder.mozilla.org/jobs?repo=try&revision=d99cf31ee4dbbd2e5df5e954f37c175ee1173232

I already verified in local builds that the test fails without this fix and pass as expected with the changes included in this patch.

I'm setting the testing policy flag on this revision accordingly.

@emilio if the tests passes TV in the try push linked above and you want to land it along with this patch, feel free to land both (I did set a leave-open flag on that bugzilla issue, to follow up with the proper fixes). 

If you prefer to land your patch and the test case separately, that is also fine from my side (we can land it separately after this fix)."
134424,https://phabricator.services.mozilla.com/D134424,"Bug 1747091 - Force CSS with moz-extension schemes to get revalidated temporarily. r=rpl,mixedpuppy",PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-21 20:27:38,">>! In D134424#4375130, @rpl wrote:
> I'm turning the manual STR with those two test extensions into an automated tests to add to the WebExtensions tests.

@emilio I've just attached a test case derived from the manual STR in D134438, it fails as expected on an artifact build without this fix, I'm waiting a full build to confirm that it does pass with this fix as we expect."
134424,https://phabricator.services.mozilla.com/D134424,"Bug 1747091 - Force CSS with moz-extension schemes to get revalidated temporarily. r=rpl,mixedpuppy",PHID-APPS-PhabricatorHeraldApplication,2021-12-21 19:24:01,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
134424,https://phabricator.services.mozilla.com/D134424,"Bug 1747091 - Force CSS with moz-extension schemes to get revalidated temporarily. r=rpl,mixedpuppy",PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-21 19:24:01,"{nav,  icon=thumbs-up, name=praise:} @emilio Thanks a lot for taking care of this so quickly.

{nav,  icon=share, name=follow-up:} I was wondering if with the images we do have the same issue and so I double-checked that (See [Bug 1746841 comment 16](https://bugzilla.mozilla.org/show_bug.cgi?id=1746841#c16), it was definitely the case but that behavior has changed a longer time ago and so it is absolutely fine to leave that to be fixed (along with the proper fix for the CSS) as part of Bug 1746841."
134424,https://phabricator.services.mozilla.com/D134424,"Bug 1747091 - Force CSS with moz-extension schemes to get revalidated temporarily. r=rpl,mixedpuppy",PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-21 19:24:01,"lgtm 

I'm turning the manual STR with those two test extensions into an automated tests to add to the WebExtensions tests.
In the meantime I wanted to ask if you want me to confirm the behavior in a local build using the two test extension and the STR I added to Bug 1746841 comments, or if you have already done that and it is not necessary.

(and, as describe in the comment below, the issue with cached image has been introduced a way longer time ago, in Firefox 68, we can leave that for Bug 1746841)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 23:28:25,Thank you! We should get Megan's data-review+ before landing the entire stack ideally. I'll ping her about it so hopefully we can land everything before the weekend.
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-cje4weq32o3xyuegalpj,2022-01-06 09:33:52,"NOTE: Documentation was modified in diff 525278

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/8decf98a-6ed1-11ec-aa55-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2022-01-06 09:06:12,try with `--no-artifact`: https://treeherder.mozilla.org/jobs?repo=try&revision=4f59e5521404c14227d8fca56965d1e07366b99f
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2022-01-06 04:59:28,">>! In D134374#4399309, @adw wrote:
> Sorry, you'll also need to update [environment.rst](https://searchfox.org/mozilla-central/rev/6eab79ab46c362b0191c4dad919f4cea2d6efb40/toolkit/components/telemetry/docs/data/environment.rst#383) to list the new onboarding choice values, which are the same as the telemetry event objects of course.

Okay, thank you very much for letting me know!"
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2022-01-06 04:13:37,"Thanks, I will do it in the previous patch."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2022-01-06 04:13:37,Thank you very much!
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:46:13,"Sorry, you'll also need to update [environment.rst](https://searchfox.org/mozilla-central/rev/6eab79ab46c362b0191c4dad919f4cea2d6efb40/toolkit/components/telemetry/docs/data/environment.rst#383) to list the new onboarding choice values, which are the same as the telemetry event objects of course.

I'll mark this as request changes to reflect my new comments."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:39:32,"Same here, please remove `reject` and its description entirely"
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:37:32,Actually this isn't right because you added `reject` in D133467 and are (correctly) removing it here. So please remove `reject` and its description entirely.
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,"Typo: Should be ""variation"""
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,Please change to 96.0.1
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,Could you do the `toLowerCase()` here please instead of in the dialog JS? That way it's always lowercase in the `DIALOG_VERSION_PREF` pref value too.
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2022-01-06 02:22:20,"Thanks, we'll need to change all the 96.0 references in the doc to 96.0.1 since we're now planning on shipping this in a dot release (which hopefully will be 96.0.1)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-cje4weq32o3xyuegalpj,2022-01-05 11:37:53,"NOTE: Documentation was modified in diff 524834

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/2ce0d1b8-6e1b-11ec-a807-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2022-01-05 11:18:35,try: https://treeherder.mozilla.org/jobs?repo=try&revision=4c26ad61ae9c1bcf077a2f1c3a2ff8602bfad4f9
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 23:27:32,Or the value could just be straight up JSON even.
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 23:26:28,"Oh one more thing before I forget. We should probably record the variation that the user saw in addition to the dialog version. Earlier I suggested having a separate pref for that. I've been thinking it might be better to have a single char pref instead, since hypothetically we might have future versions of this dialog that also need variations, and in that case it would become unwieldy to have a separate pref for each version's variation.

So we could have a single pref whose value is something like `${version}.${variation}`. For the `variation` substring, we should use the same format/IDs that we end up using in D133993, so this will have to wait until that becomes clear."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 20:41:16,"This comment and function name are outdated. Since this task now checks `dismiss_2`, could you please update them?"
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 20:41:16,Same here
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 20:41:16,Could you please keep this list in alphabetical order by object name?
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 20:41:16,`isVisitedToMain` sounds a little awkward. How about `visitedMain`?
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-28 20:41:16,Thanks
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-25 01:00:13,"NOTE: Documentation was modified in diff 523200

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/f506d01e-651c-11ec-b3e6-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-24 07:33:11,"NOTE: Documentation was modified in diff 523133

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/253199e2-648a-11ec-839c-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-12-24 07:07:41,try: https://treeherder.mozilla.org/jobs?repo=try&selectedTaskRun=b6WqlsAuQseUVyZWNYL-yQ.0&revision=9b83f4040f625ccb366319ec50fe6e3d601f765f
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-22 01:53:30,"We'll want to track `DISMISS_1` and `DISMISS_2` separately, as I mentioned above. I think you could use `params` for that, like a `params.sectionIndex` or `params.paneIndex` integer. It would be initialized to `0`, and then when the user clicks the Next button, quicksuggestOnboarding.js would set it to 1. Then you could examine its value here to determine whether `DISMISS_1` or `DISMISS_2` should be used."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-12-22 01:53:30,"A separate ""component"" object is a little unnecessary IMO. It would be simpler to expand `ONBOARDING_CHOICE` like this:

```lang=js
const ONBOARDING_CHOICE = {
  ACCEPT_2: ""accept_2"",
  CLOSE_1: ""close_1"",
  DISMISS_1: ""dismiss_1"",
  DISMISS_2: ""dismiss_2"",
  LEARN_MORE_2: ""learn_more_2"",
  NOT_NOW_1: ""not_now_1"",
  NOT_NOW_2: ""not_now_2"",
  REJECT_2: ""reject_2"",
};
```

These are the definitions I'm thinking of:

* `CLOSE_1` - The X close button in the intro section
* `DISMISS_1` - The dialog is dismissed while the user is viewing the intro section in some way other than the X close button and the Not now link (e.g., Esc key)
* `DISMISS_2` - The dialog is dismissed while the user is viewing the main section in some way other than the Not now link (e.g., Esc key)
* `NOT_NOW_1` - The Not now link in the intro section (when enabled by Nimbus)
* `NOT_NOW_2` - The Not now link in the main section

`NEXT` doesn't really make sense for this because these values record the outcome of the dialog, and the Next button isn't a final outcome.

I know these don't quite match the names I mentioned in the other revision, sorry about that. On second thought I don't think we should include ""pane"" in these names because they are limited to 20 chars since they are used as telemetry event objects, which are limited to 20 chars."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-21 08:32:12,"NOTE: Documentation was modified in diff 521928

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6c3c832e-6237-11ec-81d6-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134374,https://phabricator.services.mozilla.com/D134374,Bug 1745026 - Part 3: Update telemetries for Firefox suggest onboarding dialog.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-12-21 08:17:35,"This patch updates the telemetries for the onboarding dialog.
try: https://treeherder.mozilla.org/jobs?repo=try&selectedTaskRun=BpvtLIPCRaWbyhs1Jr7wvg.0&revision=5e046909f0f071e327acff3d6342e9ec711908ba"
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-jp26w7fkaeadar63vok2,2021-12-21 16:25:55,Good call. Will update it.
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-6oeredp5pcvqrg736rdc,2021-12-21 16:13:23,Thanks! And I missed that `safeMode` defaults to `false`
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-6oeredp5pcvqrg736rdc,2021-12-21 16:13:23,"{nav,  icon=info-circle, name=nitpick:} I really don't mind but in the `remote/` codebase we usually don't destructure arguments in function signatures. So just in case you want to keep this consistent with the rest: 
```lang=javascript
GeckoDriver.prototype.quit = async function(cmd) {
  const { flags = [], safeMode = false } = cmd.parameters;
```"
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-6oeredp5pcvqrg736rdc,2021-12-21 16:13:23,"{nav,  icon=info-circle, name=nitpick:} Let's add the jsdoc for `safeMode`"
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-jp26w7fkaeadar63vok2,2021-12-21 10:58:18,geckodriver doesn't allow yet to pass shutdown flags to Marionette. It [uses a constant list](https://searchfox.org/mozilla-central/rev/b605f01915c5704a55e9f485101b7be7d20a55df/testing/geckodriver/marionette/src/marionette.rs#11-16) instead. That means `safeMode` will be `undefined` and set to `false` in such a case.
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-6oeredp5pcvqrg736rdc,2021-12-21 10:50:21,"{nav,  icon=question-circle, name=question:} Will this assert work when `quit` is called from an older geckodriver version?"
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-jp26w7fkaeadar63vok2,2021-12-21 05:24:47,fix for black warnings
134324,https://phabricator.services.mozilla.com/D134324,Bug 1144075 - [marionette-client] Allow to restart Firefox in safe mode.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-20 20:32:44,"Code analysis found 2 defects in the diff 521694:
 - 2 defects found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/521694) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fd5d48ae8125cbcc0b2dcf71e6a0672484582add)."
134224,https://phabricator.services.mozilla.com/D134224,Bug 1734384 - fix OTR preference reading. r=freaktechnik,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-12-20 13:03:00,"While I dislike having yet another place that creates a pref branch for the im account prefs, this fixes OTR."
134124,https://phabricator.services.mozilla.com/D134124,Bug 1744234 - Bump minimum Rust version to 1.57.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-17 08:24:36,"NOTE: Documentation was modified in diff 520798

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/9244aa62-5f10-11ec-bbd6-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
134124,https://phabricator.services.mozilla.com/D134124,Bug 1744234 - Bump minimum Rust version to 1.57.,PHID-APPS-PhabricatorHeraldApplication,2021-12-17 08:22:11,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
134024,https://phabricator.services.mozilla.com/D134024,"Bug 1746423 [Linux] Remove static XWindow setup and get it on demand, r?rmader",PHID-USER-nutfmxfwbqsgenxlpos5,2021-12-20 10:22:02,I'd rather keep it as is to make GetX11Window() universal.
134024,https://phabricator.services.mozilla.com/D134024,"Bug 1746423 [Linux] Remove static XWindow setup and get it on demand, r?rmader",PHID-APPS-PhabricatorHeraldApplication,2021-12-18 13:26:42,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
134024,https://phabricator.services.mozilla.com/D134024,"Bug 1746423 [Linux] Remove static XWindow setup and get it on demand, r?rmader",PHID-USER-szigcrvmfcbhaupsaejh,2021-12-18 13:26:42,Should IMO move into the `#ifdef MOZ_X11` block. Will need some adoption in the `GtkCompositorWidgetInitData` part.
134024,https://phabricator.services.mozilla.com/D134024,"Bug 1746423 [Linux] Remove static XWindow setup and get it on demand, r?rmader",PHID-USER-szigcrvmfcbhaupsaejh,2021-12-18 13:26:42,"LGTM, just one nit."
133973,https://phabricator.services.mozilla.com/D133973,Bug 1596518 - quoted double backslash now returns one backslash r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2022-01-04 09:07:07,">>! In D133973#4391825, @giancarlodeguzman wrote:
> To clarify, you would have a string such as ""q\tq"" when input into the console return the exact same string, ""q\tq"" without the tab evaluated?

yes, exactly, if I evaluate :

```lang=js
x = ""q\tq""
x
```

the console should display in the result: `""q\tq""` so we're consistent with what we do with quotes

```lang=js
x = ""q\""q""
x
```
prints `""q\""q""`"
133973,https://phabricator.services.mozilla.com/D133973,Bug 1596518 - quoted double backslash now returns one backslash r=nchevobbe,PHID-USER-j3xm4wtb5pxai2cw5tow,2022-01-04 04:47:38,"To clarify, you would have a string such as ""q\tq"" when input into the console return the exact same string, ""q\tq"" without the tab evaluated?

I would be happy to make the changes, although my sincere belief is that the console should evaluate the strings as closely to the way Javascript does, since my experience includes often using the console to test JS out as it interacts with the page. The further we deviate from the standard, the more it would confuse developers in my opinion."
133973,https://phabricator.services.mozilla.com/D133973,Bug 1596518 - quoted double backslash now returns one backslash r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2022-01-03 16:01:13,"Thanks GianCarlo!
One of the reason we're escaping some of the character in a quoted string is that we want the user to be able to copy the string and paste it in its editor of choice (so that's why we're escaping double quotes).
So instead of acting on backlash here, I'd rather have us fix the other cases (`\r`, `\n`, `\t`, …)
What do you think?"
133922,https://phabricator.services.mozilla.com/D133922,Bug 1539884 - Part 11: Mark HTMLFormElement::Reset as CAN_RUN_SCRIPT r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-12-15 22:50:57,"It seems that `Document::Sanitize()` is unstable from editor module owner's point of view. But not directly related, and it's not unsafe things."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-ezxge6nyolktygxmn66x,2022-01-18 15:04:00,"I'll add mention `CSSInjection` when it is done (same for `kind`, which only has the `js` choice listed so far)."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-ezxge6nyolktygxmn66x,2022-01-18 15:04:00,Patch updated with an update to the jsdoc and a TODO comment.
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-18 14:45:52,"Yes. As mentioned in my previous review, I'd like to unblock this patch quickly, so extensive tests can be moved to a follow-up. I filed a bug at https://bugzilla.mozilla.org/show_bug.cgi?id=1750765 (if you'd like, put it in a TODO)."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-18 14:45:52,"Let's add ""Derived from the ScriptInjection and CSSInjection types."" so that it's obvious what ""The details object"" means."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-ezxge6nyolktygxmn66x,2022-01-18 10:06:20,Can this be moved to a follow-up?
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,"target is common logic and should be in execute. I'm fine with this being in a follow-up, e.g. the insertCSS patch."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,"runAt isn't part of scripting.executeScript, because Chrome believes that it should not be part of executeScript - https://bugs.chromium.org/p/chromium/issues/detail?id=1166720#c18. I don't agree with forcing document_idle over documentat_start (= basically ""ASAP"").

But until that's resolved, this code here should unconditionally set runAt."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,"scripting.executeScript + activeTab needs test coverage.

For a mochitest that calls the relevant AppTestDelegate helpers to trigger the activeTab permission, see https://searchfox.org/mozilla-central/source/toolkit/components/extensions/test/mochitest/test_ext_tabs_executeScript_good.html"
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,Need test case for this error.
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,A JSDoc would be nice.
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,"For a moment I was confused because I recall that you had an implementation that introduces support for frameIds. But that will be after this patch.

To make it more obvious to see whether parts are omitted from here (relative to the original in _execute), could you add TODO comments referencing the bugs?"
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-17 22:49:45,"I posted some comments. Some can trivially be addressed in an update, othets (e.g. more tests) could be part of a follow-up if you want to unblock this patch ASAP.

Could you update the commit message to make it more helpful to whoever reads the commit message in the future (e.g. git blame to trace a bug or implementation decision)?"
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-ezxge6nyolktygxmn66x,2022-01-17 14:50:47,"I updated this patch based on our Matrix discussion. I only ""copied"" the parts of `_execute()` that are useful *now*, and other patches will add a few more code to that new `execute()` function in `parent/ext-scripting.js`. As I mentioned in the description above, more tests would certainly be a good thing but we do have a dedicated issue for the tests. The change related to `execute()` didn't break anything, so that's a good sign too.

(Note that it would be nice to land this one (when it's ready) so that I can update the other patches given that the other patches introduce new scripting functions like `insertCSS` and `removeCSS`)"
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2022-01-10 18:00:12,"The check here supports the `tabs.insertCSS` / `tabs.executeScript` / `tabs.removeCSS` methods.
The check in its current form is not relevant to the scripting API at all (e.g. see the non-sensical error message).

In your implementation so far, you're trying to translate the `scripting` interface to the `tabs` interface.
This works as long as the two have compatible requirements. This is already obviously not fully true, and the part of the `scripting` API will increasingly becomes less true in the future.

Currently, your approach is to let the caller (`parent/ext-scripting.js`) convert the ScriptInjection or CSSInjection type to the old InjectionDetails type AND add some more unsupported properties to it. This works at first, but will become less maintainable over time when the feature sets diverge (e.g. main world injection, more kinds of matching behavior).

I start to wonder whether we should continue to update `_execute` to support both `tabs.executeScript/insertCSS/removeCSS`, or whether we should copy the logic to `parent/ext-scripting.js`. The partial code duplication is unfortunate, but at least it would be very, very obvious which properties are expected to be set by the caller and in use.

Regardless of whether you're going to write a new method, it may be worth recognizing that there are common property names that may benefit from common validation:

| name | string param | file param |
| `tabs.executeScript` | code | file |
| `tabs.insertCSS` | code | file |
| `tabs.removeCSS` | code | file |
| `scripting.executeScript` | func(+args) | files |
| `scripting.insertCSS` | css | files |
| `scripting.removeCSS` | css | files |

In the `tabs.*` case, the string exec param is always called `code`, in the scripting API it varies.

Instead of `func`+`args` -> `codeToExecute` (string) -> `code`,
you could also do `func`+`args` -> `func` (string), and the error checking logic would be shared."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2021-12-15 11:52:54,">>! In D133872#4355654, @willdurand wrote:
>>>! In D133872#4355411, @robwu wrote:
>> How about `insertCSS` / `removeCSS`?
>> 
>> This logic is kind of common, but now duplicated thrice (and getting out of sync here)
> 
> I based this patch on the latest central commit so that it does not have to wait until the other patches in the stack opened in https://phabricator.services.mozilla.com/D133203 land. In other words, assuming this patch looks good, it can land before the other patches and `insertCSS`/`removeCSS` will automatically have support for multiple files (because most of the work is done in `toolkit/components/extensions/parent/ext-tabs-base.js`). Still assuming that patch lands ahead of the others, I'll update the other patches to get rid of the `TODO` comment.
> 
> About the duplicate logic (which was mentioned for `insertCSS`/`removeCSS`), that will be fixed in one of the patches for these two methods.
> 
> WDYT?

SGTM."
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-ezxge6nyolktygxmn66x,2021-12-15 11:50:33,">>! In D133872#4355411, @robwu wrote:
> How about `insertCSS` / `removeCSS`?
> 
> This logic is kind of common, but now duplicated thrice (and getting out of sync here)

I based this patch on the latest central commit so that it does not have to wait until the other patches in the stack opened in https://phabricator.services.mozilla.com/D133203 land. In other words, assuming this patch looks good, it can land before the other patches and `insertCSS`/`removeCSS` will automatically have support for multiple files (because most of the work is done in `toolkit/components/extensions/parent/ext-tabs-base.js`). Still assuming that patch lands ahead of the others, I'll update the other patches to get rid of the `TODO` comment.

About the duplicate logic (which was mentioned for `insertCSS`/`removeCSS`), that will be fixed in one of the patches for these two methods.

WDYT?"
133872,https://phabricator.services.mozilla.com/D133872,Bug 1736576 - Add support for multiple files in scripting.executeScript(). r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2021-12-15 11:16:16,"How about `insertCSS` / `removeCSS`?

This logic is kind of common, but now duplicated thrice (and getting out of sync here)"
133822,https://phabricator.services.mozilla.com/D133822,"Bug 1744477 - More from Mozilla not displaying sometimes, r?mstriemer",PHID-USER-7jimpr2bbz3ylcrk36te,2021-12-15 01:21:30,"Attached to the wrong bug, and still has one issue; abandoning here.  Will repost."
133722,https://phabricator.services.mozilla.com/D133722,Bug 1744902 - Add DistributionID string as a crash annotation. r?gsvelto,PHID-USER-2gujohlr3u3puvz4jmvz,2021-12-23 00:48:13,"#check-in_needed handled, landing queued."
133722,https://phabricator.services.mozilla.com/D133722,Bug 1744902 - Add DistributionID string as a crash annotation. r?gsvelto,PHID-USER-chbdyvyw5qsh7p76jx5k,2021-12-21 03:36:37,Marked as `testing-exception-unchanged` like in D91206.
133722,https://phabricator.services.mozilla.com/D133722,Bug 1744902 - Add DistributionID string as a crash annotation. r?gsvelto,PHID-APPS-PhabricatorHeraldApplication,2021-12-14 11:10:22,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
133722,https://phabricator.services.mozilla.com/D133722,Bug 1744902 - Add DistributionID string as a crash annotation. r?gsvelto,PHID-USER-ebebpbp2fnufsd3f2mah,2021-12-14 11:10:22,"LGTM, this can land as soon as the data review's in."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-12-14 18:39:07,"Code analysis found 1 defect in the diff 519293:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p dom/events/EventStateManager.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Duc9NRrGRgOpgwyM1Q7swA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-3uzeucqjzsf5adxdvgdj.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/519293) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9adfc9a439b073d031c928b737630b90fa5098a9)."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-14 18:22:57,meta viewport
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-12-14 15:51:42,"Code analysis found 1 defect in the diff 519214:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p dom/events/EventStateManager.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/CXWtBtV_RGm_FfzyUFjBWg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-zkk3aqngx4enxpjlypyj.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/519214) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a5713ac727711692808cbc3aa619b09a986845a0)."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-14 15:32:58,reset
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-12-14 04:06:30,"I'd be nicer if you put readable name for `deltaMode`, but up to you."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-12-14 04:06:30,"For the developers who will add new tests, the `overflow` style should be cleaned up here."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-12-14 04:06:30,Thank you very much especially for making the test simpler!
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-12-14 01:44:04,"Code analysis found 1 defect in the diff 518960:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p dom/events/EventStateManager.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/dRyjM7QZTqW35dDg6pqqOg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-ijnmswwwwu3ytbw57i34.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/518960) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8e01151fa1e4b5436d0b00c0977288f74ffae488)."
133671,https://phabricator.services.mozilla.com/D133671,Bug 1745529 - Use default action target to compute scroll amount. r=masayuki,PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-14 01:20:57,Update test
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-12-16 05:44:33,"err, I think we can split the tiny-lookup part out of `ParserAtomsTable::internUtf8` to make it testable.
will fix the patch."
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-12-16 03:56:58,"passing invalid UTF-8 sequence crashes here

https://searchfox.org/mozilla-central/rev/667224045f6e624ac4e730171c75c21945f1b336/js/src/util/Text.h#243
```
MOZ_ASSERT(cp.isSome(), ""input code unit sequence required to be valid"");
```

in the following backtrace:
```
js::InflatedChar16Sequence<mozilla::Utf8Unit>::next
js::InflatedChar16Sequence<mozilla::Utf8Unit>::computeHash
js::frontend::SpecificParserAtomLookup<mozilla::Utf8Unit>::SpecificParserAtomLookup
js::frontend::ParserAtomsTable::internUtf8
```

UTF-8 code path expects the consumer already validated the input.
I'll add the valid side of the boundaries."
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-feptxo7ei2kymsj45spd,2021-12-15 11:11:39,"nit: These are verifying that a valid latin1 encoded as utf8 is correctly converted to a valid latin1. (confirmation bias)
Can you also verify the boundaries such that value which are not convertible do not convert to latin1."
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-cje4weq32o3xyuegalpj,2021-12-14 21:56:39,"Code analysis found 1 defect in the diff 519367:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/519367) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=07f4d0ba9dfc351a43894f5b0c3809c63f42255e)."
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-12-14 21:45:07,"Added special case for non-ASCII single character case,
and also added testacse."
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-12-14 16:44:23,"rebased, and addressed review comments"
133620,https://phabricator.services.mozilla.com/D133620,Bug 1745664 - Part 1: Extend Length1StaticParserString to non-ASCII range. r?nbp!,PHID-USER-feptxo7ei2kymsj45spd,2021-12-13 14:42:48,"nit: `mozilla::Range<const Latin1Char>(content, 1)` ?"
133520,https://phabricator.services.mozilla.com/D133520,WIP: Bug 1725495 part 3 - Implement layout for 'column-rule-image-repeat/slice/source'.,PHID-USER-cje4weq32o3xyuegalpj,2021-12-10 19:35:53,"Code analysis found 21 defects in the diff 518286:
 - 1 defect found by file-whitespace (Mozlint)
 - 13 build errors and 2 defects found by clang-tidy
 - 5 defects found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p layout/generic/nsColumnSetFrame.h layout/generic/nsColumnSetFrame.cpp layout/generic/nsIFrame.cpp layout/painting/nsCSSRendering.cpp layout/painting/nsCSSRenderingBorders.cpp`
 - `./mach lint --warnings --outgoing`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/B1V-2QT9Q5i4UP2I78sEGg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-yfxbh24bl5rkcndkhmnb.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/518286) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3fdcc94094dee8136514150909d437f3a65c0f7a)."
133420,https://phabricator.services.mozilla.com/D133420,Bug 1745226 Update bundled libva headers to 1.13 in order to allow VA-API playback of AV1 r?alwu,PHID-USER-ylrjjugid56tj3jy4vlz,2021-12-10 01:09:17,No need to test external lib.
133370,https://phabricator.services.mozilla.com/D133370,Bug 1729499 - Choose a minimum pixelsPerMinute based on the timebar. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-12-13 09:13:37,Works nicely.
133320,https://phabricator.services.mozilla.com/D133320,Bug 1745118 - double-conversion: update double-conversion to version 3.1.6 (upstream revision 60e08d0). r=glandium,PHID-USER-cje4weq32o3xyuegalpj,2021-12-12 08:34:12,"NOTE: Documentation was modified in diff 518507

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a9a54fac-5b25-11ec-ac79-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
133320,https://phabricator.services.mozilla.com/D133320,Bug 1745118 - double-conversion: update double-conversion to version 3.1.6 (upstream revision 60e08d0). r=glandium,PHID-USER-4luhah4uevkii74nweu4,2021-12-12 08:05:29,Abandoning this revision because I squashed it into a different revision.
133320,https://phabricator.services.mozilla.com/D133320,Bug 1745118 - double-conversion: update double-conversion to version 3.1.6 (upstream revision 60e08d0). r=glandium,PHID-APPS-PhabricatorHeraldApplication,2021-12-10 06:39:25,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
133320,https://phabricator.services.mozilla.com/D133320,Bug 1745118 - double-conversion: update double-conversion to version 3.1.6 (upstream revision 60e08d0). r=glandium,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-12-10 06:39:25,"while you're here, would you mind converting to moz.yaml?"
133270,https://phabricator.services.mozilla.com/D133270,"Bug 1711258 - Adding contrast to checkboxes in about pages. r=mhowell,mtigley",PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-12-14 10:34:38,"So this rule sets `color` to change the border, then overrides `border` anyway. Something doesn't add up here. I suspect border stopped using the text color because you overrode border in the previous rule."
133270,https://phabricator.services.mozilla.com/D133270,"Bug 1711258 - Adding contrast to checkboxes in about pages. r=mhowell,mtigley",PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-12-14 10:34:38,"I don't think `--gray-60` is the right value to use here? Note that `prefers-contrast` doesn't imply a specific color scheme; e.g. Windows offers both white and black high-contrast themes.

I expect `color: inherit` (and leaving the border color at `currentColor`) would provide better contrast across the board."
133220,https://phabricator.services.mozilla.com/D133220,Bug 1745032 - Enable dFPI login shims on mobile. r=#anti-tracking!,PHID-USER-j4abn3dl2ddinwh6ihpo,2021-12-09 09:08:31,"Currently, we don't have test infrastructure to test shims for real sites. Bug we are working on that."
133220,https://phabricator.services.mozilla.com/D133220,Bug 1745032 - Enable dFPI login shims on mobile. r=#anti-tracking!,PHID-USER-xjz55dyhhufbz6byzuyt,2021-12-08 18:52:00,I've tested all 3 shims on the GeckoView example browser with dFPI enabled.
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-12-10 03:07:21,"> r=me with nits, though feel free to re-request review if you'd like a review of the post-nits version.

Thanks. Request review for another quick look :)"
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-12-10 03:05:39,Addressed review comments.
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-12-08 23:26:32,"r=me with nits, though feel free to re-request review if you'd like a review of the post-nits version."
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-12-08 23:09:03,"""the container's bidi direction"" is a little confusing & easy to misinterpret here, in part because ""bidi direction"" is a broad/somewhat-overloaded term.  e.g. if you have some english and hebrew/arabic text side-by-side in the same element I can't recall (definitionally) whether ""the bidi direction"" is considered to change or not as you cross between languages, in some sense.

""line-relative left"" would be a less ambiguous term, I think? And it happens to be [what the spec uses](https://drafts.csswg.org/css-align-3/#valdef-justify-content-left)  (it abbreviates to 'line-left' but then [defines that as 'line-relative left'](https://www.w3.org/TR/css-writing-modes-3/#line-left).  And that's the term we use in our [documentation for the WritingMode `BidiLTR` APIs.](https://searchfox.org/mozilla-central/rev/1674b86019a96f076e0f98f1d0f5f3ab9d4e9020/layout/generic/WritingModes.h#156,183)

Maybe this is a bit clearer (and easier to map to the spec-text):
""If we get here, we're operating on the flex container's inline axis.  So, we map 'left' to whichever of 'start' or 'end' corresponds to the *line-relative* left side; and similar for 'right'."""
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-12-08 19:48:34,"Can we fold this together with the IsColumnOriented check above?

Feels a bit awkward to have
```
if (A && !B) {
  return foo;
}
if (A) {
  return bar;
}
```

Seems instead like we should have something like:
```
if (A) {
  if (!B) {
    return foo;
  }
  return bar;
}
```

(This requires moving the `isJustifyLeft` assignment up before any of the if-checks, which seems fine.)"
133168,https://phabricator.services.mozilla.com/D133168,Bug 1744895 Part 2 - Fix justify-*:{left|right} mapping for vertical row-oriented flex containers. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-12-08 19:48:34,"Commit message nit:
```
Currently, we use IsPhysicalLTR() to query whether the start side of the
physical left <-> right axis.
```
s/whether the/which is the/"
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 19:42:23,"testing/web-platform/meta/cookies/schemeful-same-site/schemeful-websockets.sub.tentative.html.ini @ 09bb592b6ad2485799c721ac502fad0bbf1d4d4e

--- schemeful-websockets.sub.tentative.html.ini
+++ schemeful-websockets.sub.tentative.html.ini"
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 19:41:50,I just rebased that patch since we had a merge conflict on lando last time around :-(
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 19:40:26,"Updating D133118: Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!"
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-12-09 12:43:35,nit: see if you can get away with removing these NOTRUN lines.
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-12-09 12:43:35,Excellent! Thank you!
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 12:20:25,"Sorry, I was wrong, because it could also be the triggeringPricnpal scheme - all good."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 12:18:59,"nitty nit: rename `otherScheme` to `channelScheme`, that way it's easier to follow along."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-09 12:18:59,"that looks good now - please incorporate my nit though!
r=ckerschb"
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-09 12:13:50,i accidentally pushed changes to an extension test that should not have been included
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-12-09 10:42:18,"The code here seems correct, but I'm worried about it being maintainable.
If we start using rv in these two blocks it will introduce a subtle bug here.
Instead, let's save the channelScheme/triggeringScheme to another variable, and after the `if (NS_FAILED(rv)` condition below we can do the IsSameSiteSchemeHttpAndEqual check and return true if it fails."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-12-09 10:42:18,Let's move the entire block after the `if (NS_FAILED(rv)` part and just return true here.
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-nuepobnv4pvugt3cop6w,2021-12-09 09:27:44,"Should ""NOTRUN"" continue to be an acceptable outcome here?"
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-nuepobnv4pvugt3cop6w,2021-12-09 09:27:44,Nit: would it not be easier to check if firstScheme is http or https and return false if not?
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-nuepobnv4pvugt3cop6w,2021-12-09 09:27:44,"My main worry with this patch is that https://searchfox.org/mozilla-central/source/dom/base/ThirdPartyUtil.cpp#272 ends up doing multiple ""third party"" checks, including for the parent of the channel for instance, and also accounts for things like about:blank in special ways, which this does not end up mimicking. So we fix the testcase, but I suspect we don't fix the bug.

I'm not able to judge whether this is sufficient for a v1."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-08 16:15:31,switched to using the channel uri from the beginning of the function.
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-08 12:32:16,"better to rename it to something like
IsSameSiteSchemeHttpAndEqual(

please also expland the comment that this function should only be used for same site cookies and that we only deal with http and https schemes.

Maybe we can file a follow up bug and link to that inlcuding the part of the spec."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-08 12:32:16,though rare it's technically possible that NS_GetFinalChannelURI() returns a null channelURI. Let's play it safe and do an explicit nullcheck.
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-08 12:32:16,"Before doing anything else, please check the pref explicitly
if (!!StaticPrefs::network_cookie_sameSite_schemeful()) { ..."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-cje4weq32o3xyuegalpj,2021-12-07 20:12:11,"Code analysis found 1 defect in the diff 516434:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/516434) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=05bd4f319127d28f5b7fa0783567b0a83fc8674d)."
133118,https://phabricator.services.mozilla.com/D133118,"Bug 1744945: Add scheme checks to CookieCommons::IsSameSiteForeign for ""Schemeful SameSite"". r=ckerschb,valentin!",PHID-USER-cje4weq32o3xyuegalpj,2021-12-07 20:11:20,"Code analysis found 1 defect in the diff 516429:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/516429) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=430df366b38bb3a84bb0a84d0fbf3bc69f7c609c)."
133067,https://phabricator.services.mozilla.com/D133067,Bug 1719543 - Part 2: Unify Bidi in TextTrackCue.cpp.,PHID-USER-hch2p624jejt4kddoqow,2021-12-07 15:58:09,Thanks for the unification!
133017,https://phabricator.services.mozilla.com/D133017,Bug 1744520: Fix OOM handling for variadic instructions r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2021-12-07 11:39:24,Testing exception: hard to test these OOM conditions reliably.
132967,https://phabricator.services.mozilla.com/D132967,Bug 1744548: Fix default manifest version for page load tests,PHID-USER-cje4weq32o3xyuegalpj,2021-12-06 17:17:17,"NOTE: Documentation was modified in diff 515889

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/97779e1a-56b7-11ec-9971-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
132967,https://phabricator.services.mozilla.com/D132967,Bug 1744548: Fix default manifest version for page load tests,PHID-USER-cje4weq32o3xyuegalpj,2021-12-06 16:59:57,"Code analysis found 10 defects in the diff 515882:
 - 10 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/515882) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2d37e68dbdc61c9c18b1da9826e954d9fed5fb26)."
132967,https://phabricator.services.mozilla.com/D132967,Bug 1744548: Fix default manifest version for page load tests,PHID-USER-ik3udhghaju55ac3zgcr,2021-12-06 16:50:35,https://treeherder.mozilla.org/#/jobs?repo=try&revision=4d9e861ebf189918f10d1f6cc90b374b27723638
132917,https://phabricator.services.mozilla.com/D132917,Bug 1739382 - [devtools] Display a console warning instead of throwing error (causing a debugger crash) r=nchevobbe,PHID-APPS-PhabricatorHeraldApplication,2021-12-06 17:00:56,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
132917,https://phabricator.services.mozilla.com/D132917,Bug 1739382 - [devtools] Display a console warning instead of throwing error (causing a debugger crash) r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-12-06 17:00:56,"Looks good to me, thanks Hubert!"
132867,https://phabricator.services.mozilla.com/D132867,Bug 1744435 - Give the HTML buttons a padding-inline on Windows. r=emilio,PHID-USER-bkk3wvyguprvwyp3jp4x,2021-12-06 11:54:54,This would make the HTML button 5px taller. Locally from 27px to 32px.
132867,https://phabricator.services.mozilla.com/D132867,Bug 1744435 - Give the HTML buttons a padding-inline on Windows. r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-06 10:09:41,"Can we just remove the whole `IsXULElement()` special-case? This is not used for content nowadays so it should not cause compat issues or anything, which was probably the concern when it was introduced."
132817,https://phabricator.services.mozilla.com/D132817,Bug 1744287 - More from Mozilla section shows up below the fold,PHID-USER-3h6otuy64aw665igdl5x,2021-12-03 17:58:05,"Thanks, Filed followup https://bugzilla.mozilla.org/show_bug.cgi?id=1744296"
132817,https://phabricator.services.mozilla.com/D132817,Bug 1744287 - More from Mozilla section shows up below the fold,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-12-03 17:48:20,Can you file a follow-up to add an automated test?
132817,https://phabricator.services.mozilla.com/D132817,Bug 1744287 - More from Mozilla section shows up below the fold,PHID-USER-3h6otuy64aw665igdl5x,2021-12-03 17:44:52,@Gijs will be great to get your review to land this fix in 96 and if possible request uplift thanks!
132767,https://phabricator.services.mozilla.com/D132767,"Bug 1743714 - Set fission defaults in each test's profile settings,",PHID-USER-b567qwxved23xbtlnn6y,2021-12-03 18:47:18,r+ thanks!
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 20:16:28,remove unecessary change
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 20:14:41,"If I didn't want to get this into 96 before uplift, I'd probably go the route of adding the filter.  Filtering on step and validating just the extra fields reduces extraneous data in the test file."
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 20:14:41,"I limited to the install method, and FAKE_INSTALL_TELEMETRY_INFO is used in this file in update tests, so the explicit addition for install is fine here."
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 20:05:55,only include for install method
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-eixhsnpzpzu5ezloexjr,2021-12-02 17:54:06,"(non-critical piece of feedback)

Do you really need to filter by `extra.step`? If not, then you could replace the whole body with this (which provides more readable/debuggeable assertion messages):
```lang=js
  await TelemetryTestUtils.assertEvents([expectTelemetry], {
    category: ""blocklist"",
    method: ""install"",
  });
```

If you do need a filter for `extra` AND want to somehow reuse this `TelemetryTestUtils` helper, then you'd have add `extra: filterExtra` and `matches(filterExtra, extra)` at https://searchfox.org/mozilla-central/rev/3d03a3ca09f03f06ef46a511446537563f62a0c6/toolkit/components/telemetry/tests/utils/TelemetryTestUtils.jsm#150-154,173-178 in order to unlock

```lang=js
  await TelemetryTestUtils.assertEvents([expectTelemetry], {
    category: ""blocklist"",
    method: ""install"",
    extra: extra => extra.step === expectedTelemetry.step,
  });
```"
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-eixhsnpzpzu5ezloexjr,2021-12-02 17:54:06,"Rather than duplicating this everywhere, just put `install_origins: ""0""` in `FAKE_INSTALL_TELEMETRY_INFO`. Then it's even more obvious that it's merely a dummy value that is insignificant to the test itself."
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-eixhsnpzpzu5ezloexjr,2021-12-02 17:54:06,"Aside from the comments on matrix, this looks reasonable.

Could you clearly state where the data-review+ comes from, e.g. in the commit message? A reference to another bug is good enough."
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 17:45:49,fix pref check
132717,https://phabricator.services.mozilla.com/D132717,Bug 1743900 add add-on telemetry for install_origins,PHID-USER-udrckg4snwyg3bct4zkg,2021-12-02 17:17:42,https://treeherder.mozilla.org/#/jobs?repo=try&revision=04ccaf318ff1e6f53a8bc7cccda27e1b8f2efbc5
132667,https://phabricator.services.mozilla.com/D132667,"No Bug, mozilla-release repo-update remote-settings - a=repo-update",PHID-USER-j75qnhkwr6bffeig5tnt,2021-12-06 21:26:26,Obsoleted by D132919.
132617,https://phabricator.services.mozilla.com/D132617,Bug 1743849 - Part 1: Remove pinning from some debugger atoms r?jandem,PHID-USER-ir4emeapesorzd6nq5ut,2021-12-02 08:12:57,"I had this one in my local patches too, I'll start posting it today..."
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-09 16:00:41,Setting the flag here was also required for this to work with fission.
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-7hxjutcooeszod3rg3dr,2021-12-09 14:51:41,"Ah yes, non-Fission code paths do still use nsSHEntry that way.

Test is in the other patch."
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-09 14:46:00,For this to work i also needed to this into `nsSHEntry::CreateLoadInfo`
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-7hxjutcooeszod3rg3dr,2021-12-02 16:14:07,"This feels a bit unexpected place to modify loadstate.
Could we possibly do this in https://searchfox.org/mozilla-central/rev/3d03a3ca09f03f06ef46a511446537563f62a0c6/docshell/shistory/nsSHistory.cpp#2219 ?

(and please test both with and without Fission.)"
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-01 15:40:46,Test: https://phabricator.services.mozilla.com/D132581
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-01 14:39:20,"FWIW, we are working on an automated testcase."
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-hvjw2anoq2st4rvqlvij,2021-12-01 14:38:26,"As discussed, this looks like a valid approach to me.

@smaug do all history loads (I think that's the bf cache go through `LoadHistoryEntry`? I assume it does, but worth asking explicitly - thank you!"
132566,https://phabricator.services.mozilla.com/D132566,"Bug 1742899: Exempt history entry loads from https-first mode. r=ckerschb!,smaug!",PHID-USER-h4bargnzbsxkqxqvh4yi,2021-12-01 13:35:12,"I did not figure out exactly why this messes with history navigation but history entry loads will be upgraded by https-first mode.

History before back button click:
```
[Parent 21441: Main Thread]: D/SessionHistory nsSHistory 1450e3880
[Parent 21441: Main Thread]: D/SessionHistory  +- 0 SH Entry 13de95650 4 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = about:sessionrestore
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Restore Session
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory  +- 1 SH Entry 13e4a4b50 23 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = http://bitsavers.org/pdf/
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Index of /pdf
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory  +- 2 SH Entry 13dd38d30 26 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = http://bitsavers.org/pdf/3Com/
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Index of /pdf/3Com
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory >+- 3 SH Entry 13014c150 29 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory         URL = http://bitsavers.org/pdf/3Com/3+Open/
[Parent 21441: Main Thread]: D/SessionHistory         Title = Index of /pdf/3Com/3+Open
[Parent 21441: Main Thread]: D/SessionHistory         Name =
```
History after back button click:
```
[Parent 21441: Main Thread]: D/SessionHistory  +- 0 SH Entry 13de95650 4 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = about:sessionrestore
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Restore Session
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory  +- 1 SH Entry 13e4a4b50 23 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = http://bitsavers.org/pdf/
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Index of /pdf
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory  +- 2 SH Entry 13dd38d30 31 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = https://bitsavers.org/pdf/3Com/
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = https://bitsavers.org/pdf/3Com/
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory  +- 3 SH Entry 13014c150 29 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory  |      URL = http://bitsavers.org/pdf/3Com/3+Open/
[Parent 21441: Main Thread]: D/SessionHistory  |      Title = Index of /pdf/3Com/3+Open
[Parent 21441: Main Thread]: D/SessionHistory  |      Name =
[Parent 21441: Main Thread]: D/SessionHistory >+- 4 SH Entry 1451b1970 32 {6a0ba906-846d-4330-9824-acbcc658558c}
[Parent 21441: Main Thread]: D/SessionHistory         URL = http://bitsavers.org/pdf/3Com/
[Parent 21441: Main Thread]: D/SessionHistory         Title = http://bitsavers.org/pdf/3Com/
[Parent 21441: Main Thread]: D/SessionHistory         Name =
```

Notice how in the second log the SH Entry 2 has an https scheme. https-first mode tried to upgrade the history load but failed (https is not available for bitsavers.org).

This patch disables https-first mode for history entry loads."
132516,https://phabricator.services.mozilla.com/D132516,Bug 1737405 - Remove superfluous wasm cache stream check. r?valentin,PHID-APPS-PhabricatorHeraldApplication,2021-11-30 21:41:49,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
132466,https://phabricator.services.mozilla.com/D132466,Bug 1741596 - Fix nsMapiHook::BlindSendMail for offline mode and add tests. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-30 10:50:28,Fix a typo in a comment
132466,https://phabricator.services.mozilla.com/D132466,Bug 1741596 - Fix nsMapiHook::BlindSendMail for offline mode and add tests. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-11-30 10:45:53,Thanks! r=mkmelin
132466,https://phabricator.services.mozilla.com/D132466,Bug 1741596 - Fix nsMapiHook::BlindSendMail for offline mode and add tests. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-30 10:33:37,test_mapisendmail.js is skipped since the time it was introduced https://searchfox.org/comm-central/rev/79d2504137747f6d0e61ddd815adcfc496644ddb/mailnews/mapi/test/unit/xpcshell.ini#7
132416,https://phabricator.services.mozilla.com/D132416,Bug 1743441 - Missing nullptr check in TypedArray_base::fromObject,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-11-29 22:56:23,Missing nullptr check in TypedArray_base::fromObject
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-or4wqoxtk6qaerrbbjxa,2021-11-30 01:46:29,">>! In D132316#4306779, @morgan wrote:
> Gotcha, so ideally we'd want something like `mTaskDelay = 1000` where that gets applied for every callback instead of `aStartDelay` which applies to just the first callback?

I actually forgot about it only applying to the first callback, so there's that issue too. But more than that, if the callback has been scheduled but not actually called yet, we want to be able to delay it further into the future. I don't see a way to do that either without cancelling and reconstructing."
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-lmegrwffx67e2xxsnkfv,2021-11-29 21:07:55,">>! In D132316#4306106, @Jamie wrote:
> Scenario:
> 
> 1. There's no callback scheduled.
> 2. A single id gets released. A callback gets scheduled for a minimum of 1 second from now.
> 3. A second id gets released after 980 ms.
> 4. The callback scheduled in 2) might run 20 ms from now. We don't want that, since it might cause the id from 3) to get reused too quickly. We want to push it another 1 second (minimum) into the future.
> 
> With IdleTaskRunner, as far as I can see, there's no way to achieve that without cancelling and reconstructing. With a timer, calling SetDelay resets the timer.

Gotcha, so ideally we'd want something like `mTaskDelay = 1000` where that gets applied for every callback instead of `aStartDelay` which applies to just the first callback?

>> How does creating an IdleTaskRunner with `aStartDelay = kReleaseDelay = 1000` differ from what you're doing here? 
> 
> If the above weren't a problem, the advantage of using an IdleTaskRunner is that if there is more important work to do, the callback can be delayed more than 1 second. We don't really care if it's 1 second or 60; we just care that it runs at some point. In contrast, the timer will try to honour the 1 second delay even if there is more important work to do.
> 
> In practice, I don't think this will matter because releasing ids should be pretty fast. I think the advantage of idle scheduling is probably outweighed by the disadvantage of continually reconstructing the runner.

Yep that makes sense. Thanks for explaining! :)"
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-or4wqoxtk6qaerrbbjxa,2021-11-29 18:22:03,">>! In D132316#4305981, @morgan wrote:
> When would we want to reschedule the callback?

Scenario:

1. There's no callback scheduled.
2. A single id gets released. A callback gets scheduled for a minimum of 1 second from now.
3. A second id gets released after 980 ms.
4. The callback scheduled in 2) might run 20 ms from now. We don't want that, since it might cause the id from 3) to get reused too quickly. We want to push it another 1 second (minimum) into the future.

With IdleTaskRunner, as far as I can see, there's no way to achieve that without cancelling and reconstructing. With a timer, calling SetDelay resets the timer.

> How does creating an IdleTaskRunner with `aStartDelay = kReleaseDelay = 1000` differ from what you're doing here? 

If the above weren't a problem, the advantage of using an IdleTaskRunner is that if there is more important work to do, the callback can be delayed more than 1 second. We don't really care if it's 1 second or 60; we just care that it runs at some point. In contrast, the timer will try to honour the 1 second delay even if there is more important work to do.

In practice, I don't think this will matter because releasing ids should be pretty fast. I think the advantage of idle scheduling is probably outweighed by the disadvantage of continually reconstructing the runner."
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-APPS-PhabricatorHeraldApplication,2021-11-29 17:55:30,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-lmegrwffx67e2xxsnkfv,2021-11-29 17:55:21,"I trust there's a reason we can't do this with IdleTaskRunner, even if it isn't clear to me right now :) r+'ing for timezones, in case you want to land this today

testing exception: no framework for testing this on windows"
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-lmegrwffx67e2xxsnkfv,2021-11-29 17:53:03,">>! In D132316#4303393, @Jamie wrote:
> I looked at using IdleTaskRunner for this, but IdleTaskRunner doesn't seem to have a way to reschedule the callback if it's already running but you want to delay it further. I think you'd have to destroy the runner and then recreate it. If a whole bunch of ids were being released in quick succession (which happens a lot), we'd be continually destroying and recreating the runner, which seems bad.

Can you explain this a bit more? 
When would we want to reschedule the callback? How does creating an IdleTaskRunner with `aStartDelay = kReleaseDelay = 1000` differ from what you're doing here?"
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-cje4weq32o3xyuegalpj,2021-11-29 01:08:49,"Code analysis found 1 defect in the diff 513061:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/513061) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=eb4aec29e6541fbb08cfaac9b4dbbb2c7a4beb2b)."
132316,https://phabricator.services.mozilla.com/D132316,"Bug 1743064: When the cache is enabled, release MSAA ids after a short delay.",PHID-USER-or4wqoxtk6qaerrbbjxa,2021-11-29 00:50:41,"I looked at using IdleTaskRunner for this, but IdleTaskRunner doesn't seem to have a way to reschedule the callback if it's already running but you want to delay it further. I think you'd have to destroy the runner and then recreate it. If a whole bunch of ids were being released in quick succession (which happens a lot), we'd be continually destroying and recreating the runner, which seems bad."
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-01 16:03:41,"sigh, python"
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-12-01 14:49:22,"Don't use designated initializers, oh well"
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-autti2wxdumepz7idru4,2021-11-30 16:51:14,AIUI there are tests that will cover this once bug 137688 lands.
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-27 19:06:52,nits
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 03:48:56,"nit: since this format is now quite far from the template, it might be better to use keyword to make it clearer, i.e. using `{indices}` and `{entries}` in the template and `indices="", "".join(indices)` etc. here. Type checking may ultimately catch any mismatch, though."
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 03:48:56,"""can be enabled"" sounds a bit too complicated. Maybe something around ""exposed"" would be better? It would also be good to have a comment on the corresponding field about what it is for."
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 03:48:56,If you move this up before `mGetter` it may save a word for each entry.
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 03:48:56,"nit: maybe something like
```
properties.sort(key=order_key)
properties = filter(lambda p: p.type() != ""alias"", properties)
for i, p in enumerate(properties):
  # ...
```"
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 03:48:55,"Generally looking good. I'm still a bit concerned that each longhand split would become a behavior change, but if the working group decided it's fine then it's fine I guess. Some nits below.

Also, is there any test update?"
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-27 01:59:58,clang-format + missing mCanBeEnabled check
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-27 01:51:40,"Aliases have never been enumerated, we handle that in LookupProperty and via BinaryName in the idl.

Shorthands will not be enumerated even if they used to be longhands. That's a behavior change but I it's the right thing to do per spec and matches other browsers. We'll enumerate the individual longhands anyways."
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-g6zdcylnkx6tkkmpjll5,2021-11-27 01:09:53,"How do we handle the case where a single longhand is split and becomes a shorthand itself? e.g. `text-decoration` was a longhand, but becomes a shorthand later. IIRC this will likely happen to several other properties going forward. Would we consider this to be a breaking change?

Also I recall that we use shorthand to handle some aliases. Is it still the case? Would that matter?"
132266,https://phabricator.services.mozilla.com/D132266,"Bug 1743150 - Shorthands in computed style shouldn't be enumerable. r=#style,#layout-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-11-26 18:58:15,"Code analysis found 1 defect in the diff 512815:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p layout/style/nsComputedDOMStyle.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/IyF405hXQ7qtoJchP6sF9Q/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-3xk4utchmxakzcakdj3v.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/512815) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f52bb18aac1d88565879aa0147fa4bb85ca78eb8)."
132216,https://phabricator.services.mozilla.com/D132216,Bug 1742959 - Do not ref-count MediaEventForwarder. r?mjf!,PHID-USER-4rvmwem4wnzs5s7sfimj,2021-11-29 19:55:31,tsan tests already cover this code.
132216,https://phabricator.services.mozilla.com/D132216,Bug 1742959 - Do not ref-count MediaEventForwarder. r?mjf!,PHID-USER-5imfqbjzbqyocyfuyykx,2021-11-26 08:41:29,Looks good so far: https://treeherder.mozilla.org/jobs?repo=try&revision=44dc72daaffbb94144c2aa8cfaee1a301a606cb2
132166,https://phabricator.services.mozilla.com/D132166,"Bug 1733957, tweak inline-style-cache-1.html to depend less on how the page is loaded (perf numbers are expected to change a bit), r=emilio",PHID-USER-7hxjutcooeszod3rg3dr,2021-11-25 18:01:12,https://treeherder.mozilla.org/#/jobs?repo=try&revision=210520c0eb99f91453bde4c616f1f0a45642e7bd
132166,https://phabricator.services.mozilla.com/D132166,"Bug 1733957, tweak inline-style-cache-1.html to depend less on how the page is loaded (perf numbers are expected to change a bit), r=emilio",PHID-USER-b567qwxved23xbtlnn6y,2021-11-25 17:13:24,"Can you provide a try run with perf-reftest-singleton?

r+ conditional on a green try run"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-12-02 08:35:21,rebase and fix test failures
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-30 09:57:37,"> > `isPausedDebuggerOverlayVisible` seems to only be used by tests which uses `isPausedDebuggerOverlayVisible`:
> > https://searchfox.org/mozilla-central/search?q=isPausedDebuggerOverlayVisible%28&case=true&path=
> 
> I'm not sure I get what you wanted to say here?
> 

Oops I meant to say:
`isPausedDebuggerOverlayVisible` seems to only be used by tests which uses `clickPausedDebuggerOverlayButton()` (and they never use `resume(dbg)`:
https://searchfox.org/mozilla-central/search?q=isPausedDebuggerOverlayVisible%28&case=true&path=
So that we never verify that the overlay disappear when resuming from the frontend."
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-30 09:32:00,address review comments
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-30 09:05:19,sure
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-30 09:05:19,"> {nav,  icon=pencil, name=suggestion:} Actually, It might be nice to fork the test into two test tasks.
> One resuming via the debugger frontend (as before) and another one clicking on the overlay.
> As I'm not sure we have one test asserting that the overlay disappear when using the debuger frontend?

I think you're right. I'll add a test case in !!devtools/client/debugger/test/mochitest/browser_dbg-paused-overlay.js!!

> `isPausedDebuggerOverlayVisible` seems to only be used by tests which uses `isPausedDebuggerOverlayVisible`:
> https://searchfox.org/mozilla-central/search?q=isPausedDebuggerOverlayVisible%28&case=true&path=

I'm not sure I get what you wanted to say here?"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-30 09:05:19,"yeah I think you're right.
I'll investigate in the same bug as the one I'll file to not wait to display inspector-related highlighters"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-30 09:05:19,">>! In D132116#4305813, @ochameau wrote:
>> For now we only use it for the paused debugger overlay as the other highlighters might need
>> an inspector front, which may require the dom to be ready.
> 
> I do not see this relationship from the server point of view, which should be the one relevant here?

I may have jumped to conclusion, but not waiting in markup.js for all document resulted in blank inspector panel. So maybe there's something that waits for the highlighter as a way to check that the document is ready?
I'll try to have a look, but I think I'll file a dedicated bug for it"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-29 17:21:06,"It would be nice to add a comment with a mention of the current bug number.
To state that force=true helps inserting the anonymous content on a still loading page.

We might pass force=true only when this.waitForDocumentToLoad=false if we want to be super conservative."
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-29 17:21:06,"Given that `_insert` also checks for document load status by calling `waitForContentLoaded` first, and calls `this._initialized` at its very end... I'm wondering if we can do this:
```
initialize() {
  return this._insert();
}
```
But may be I'm missing something. Do not hesitate to followup on this."
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-29 17:21:06,"{nav,  icon=share, name=follow-up:} Do you think we can followup and insert the highlighter even if the document is still loading? It sounds like we could now, not only for the paused overlay...?"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-29 17:21:06,"{nav,  icon=pencil, name=suggestion:} Actually, It might be nice to fork the test into two test tasks.
One resuming via the debugger frontend (as before) and another one clicking on the overlay.
As I'm not sure we have one test asserting that the overlay disappear when using the debuger frontend?

`isPausedDebuggerOverlayVisible` seems to only be used by tests which uses `isPausedDebuggerOverlayVisible`:
https://searchfox.org/mozilla-central/search?q=isPausedDebuggerOverlayVisible%28&case=true&path="
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-29 17:21:06,"Thanks for looking into this, it looks good to me given that you fork the test in two.

> For now we only use it for the paused debugger overlay as the other highlighters might need
> an inspector front, which may require the dom to be ready.

I do not see this relationship from the server point of view, which should be the one relevant here?"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-29 15:00:12,"_really_ ready for review now :) (I confirmed the test fails without emilio's fix, and passes with it)
TRY push: https://treeherder.mozilla.org/jobs?repo=try&revision=c8a80f136aafc6fed113320997da4e419c2122f5"
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-26 16:12:44,ready for review
132116,https://phabricator.services.mozilla.com/D132116,Bug 1580394 - [devtools] Don't wait for document to be ready to show PausesDebuggerOverlay. r=ochameau.,PHID-USER-cje4weq32o3xyuegalpj,2021-11-25 07:51:12,"Code analysis found 2 defects in the diff 512134:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/XrmVggXYSeWgmS8N1akL5g/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-jvgw457oomfxfxtqmmjz.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/512134) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b3cf454408eb027c468bdffac20ed138d13187ca)."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-11-24 16:56:10,"The analysis task [tests-flake8](https://treeherder.mozilla.org/#/jobs?repo=taskgraph-try&revision=0eeed8bbf4c4b21232aaf7edc28c937a26ce372d&selectedTaskRun=HRlZZEWCTO67RXqX8C76uw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [tests-black](https://treeherder.mozilla.org/#/jobs?repo=taskgraph-try&revision=0eeed8bbf4c4b21232aaf7edc28c937a26ce372d&selectedTaskRun=QbyQmsz_TdWScRja95x87A-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-smfssgbgqxky32oixjbg,2021-11-24 16:41:53,">>! In D132016#4293935, @ahal wrote:
>>>! In D132016#4293294, @sclements wrote:
>> Changes from the feedback here https://phabricator.services.mozilla.com/D131416. I  know... this is not the cleanest way to do it but at the time it seemed easier to just unstage my changes and shelve/drop the requirements files instead of going through rebase merges. :) 
> 
> For future reference if you have `evolve` installed you can:
> ```
> $ hg uncommit -I requirements
> $ hg revert -a
> ```
> 
> But no problem. You may want to mark that other revision as abandoned so it stops showing up in people's dashboards.

Thanks! That's what I was looking for :)"
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-smfssgbgqxky32oixjbg,2021-11-24 16:37:09,"There is a link to it in the ""Adding taskgraph to a project"" section, but I guess I could add it here too."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 14:55:06,"{nav,  icon=share, name=follow-up:} This is fine here for now. In the future I think I'd like to keep this landing page as generic as possible and only mention things like `scriptworker` in a more detailed page (perhaps about release tasks)."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 14:55:06,"{nav,  icon=pencil, name=suggestion:} Can we add a link to https://taskcluster.net on `Taskcluster`?"
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 14:55:06,"{nav,  icon=pencil, name=suggestion:} Can we add a link to https://docs.taskcluster.net/docs/reference/integrations/github/taskcluster-yml-v1 on `.taskcluster.yml`?"
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 14:55:06,"Thanks, great start! Let's get this landed and continue iterating on it from there. I'll try and get my readthedocs PR landed shortly after."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 14:44:26,">>! In D132016#4293294, @sclements wrote:
> Changes from the feedback here https://phabricator.services.mozilla.com/D131416. I  know... this is not the cleanest way to do it but at the time it seemed easier to just unstage my changes and shelve/drop the requirements files instead of going through rebase merges. :) 

For future reference if you have `evolve` installed you can:
```
$ hg uncommit -I requirements
$ hg revert -a
```

But no problem. You may want to mark that other revision as abandoned so it stops showing up in people's dashboards."
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-smfssgbgqxky32oixjbg,2021-11-24 11:30:31,Changes from the feedback here https://phabricator.services.mozilla.com/D131416. I  know... this is not the cleanest way to do it but at the time it seemed easier to just unstage my changes and shelve/drop the requirements files instead of going through rebase merges. :)
132016,https://phabricator.services.mozilla.com/D132016,No Bug - Make changes to taskgraph docs r=#releng-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-11-24 11:27:44,"The analysis task [tests-flake8](https://treeherder.mozilla.org/#/jobs?repo=taskgraph-try&revision=7d7b7a696069f58ffdd7835f731ef299f5d35f7e&selectedTaskRun=V0qYfhZDQ2iCH7OvWDiEWw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [tests-black](https://treeherder.mozilla.org/#/jobs?repo=taskgraph-try&revision=7d7b7a696069f58ffdd7835f731ef299f5d35f7e&selectedTaskRun=cTRZUBAoQHeh65jptcn2hw-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
131914,https://phabricator.services.mozilla.com/D131914,Bug 1709267 - [devtools] Fix duplicated transports when detaching the top target.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-11-26 13:04:37,rebase
131914,https://phabricator.services.mozilla.com/D131914,Bug 1709267 - [devtools] Fix duplicated transports when detaching the top target.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-23 15:02:46,"{nav,  icon=info-circle, name=nitpick:} This line should go before the first `@param` one"
131914,https://phabricator.services.mozilla.com/D131914,Bug 1709267 - [devtools] Fix duplicated transports when detaching the top target.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-23 15:02:46,"{nav,  icon=keyboard-o, name=typo:} s/a commands for/commands for"
131914,https://phabricator.services.mozilla.com/D131914,Bug 1709267 - [devtools] Fix duplicated transports when detaching the top target.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-23 15:02:46,"{nav,  icon=thumbs-up, name=praise:} oh, good catch"
131914,https://phabricator.services.mozilla.com/D131914,Bug 1709267 - [devtools] Fix duplicated transports when detaching the top target.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-23 15:02:46,"That looks good to me, thanks for fixing this and adding a test Alex.
The test does fail if I revert the fix, so it's all good"
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-12-03 11:13:38,This has to stay where it is so the `onEndBatch` call in the provider unit test is called at the right time. Otherwise it will end too late.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-12-03 11:13:38,Fixing some typos and reverting one change for test failures.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-12-02 07:29:26,Looks good to me.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-12-01 22:18:53,Actually this whole method could be made async. Forgot to do it in the next patch.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:58,Huh? Why's the `Promise.resolve` there?
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:58,"This could go immediately before `return item;`. I'm not //entirely// sure why the batch calls are here, but I must've had a reason when I put them there."
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:58,This could stay here which would simplify things.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:57,"No need for the `callback` variable, just assign it directly."
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:57,This outer `then` needs a second callback that calls `_onError` if the `addItem` call fails. You could rearrange these Promises into a chain which I think looks tidier although slightly more confusing if you're not used to it. (This is what the world looked like before async/await came along.)
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-11-30 23:23:57,Here's the problem with the catch method again.
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-11-28 15:46:12,"This may or may not cause issues, does not seem to at the moment. The code before had no interest in providing a listener to wait on this result but I am unsure if it was written from the perspective of the memory calendar always being synchronous.

Which would be a bad assumption given that the method takes a callback."
131864,https://phabricator.services.mozilla.com/D131864,Bug 1693873 - Part 3: Convert addItem() adoptItem() to Promises. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-11-28 15:46:12,"Originally I had turned the whole of the calCachedCalendar and CalDavCalendar to use promises but ran into a lot of difficulty because of the way they call into each other and the web request handlers which call into the caldav calendar.
The handling of the observer events were also painful. 

For now, I just scaled things back to use promises publicly but keep most of the internal methods as is. Much of these two calendars seems unnecessarily complicated the syncing design could be more elegant too, but for another time."
131712,https://phabricator.services.mozilla.com/D131712,Bug 1738853 - New Azure images using robutcheckout r=#releng-reviewers,PHID-USER-pffl6tdsfwurm6tc65ge,2021-11-20 01:45:13,NOTE: Will land this tomorrow when I'll be around for a while.
131712,https://phabricator.services.mozilla.com/D131712,Bug 1738853 - New Azure images using robutcheckout r=#releng-reviewers,PHID-USER-mefa72mp4kzwenywt7gj,2021-11-20 01:44:14,rubber stamp r+
131612,https://phabricator.services.mozilla.com/D131612,Bug 1742102 - Part 3: Clean-up includes for JitScript. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-11-22 11:17:28,Update part 1 to use vm/Opcodes.h instead of vm/BytecodeUtil.h (see bug 1742142)
131612,https://phabricator.services.mozilla.com/D131612,Bug 1742102 - Part 3: Clean-up includes for JitScript. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-11-19 15:05:05,"Now that ""TrialInlining.h"" is no longer transitively included through ""vm/JSScript-inl.h"", I had to add this missing include for `icScript()->inliningRoot()->owningScript()` in `BaselineFrame::outerScript()`."
131561,https://phabricator.services.mozilla.com/D131561,Bug 1741997 - DMABufSurface::FenceDelete should not require GL context to close mSyncFd handle.,PHID-USER-cje4weq32o3xyuegalpj,2021-11-18 23:41:23,"Code analysis found 1 defect in the diff 509836:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/509836) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=738cf5f7f0a7f0502a927bc6073953fd8aabff6c)."
131510,https://phabricator.services.mozilla.com/D131510,Bug 1741742 - Put the window ID in the composite profile marker name. r=#gfx-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-11-18 16:12:38,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-18 23:12:47,Rebased and addressed review comments
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-18 22:54:56,I assume the test added in `property_database.js` looks good ;)
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-18 22:53:27,Agree. A change like `stable` to `stable both-edges` can affect the percentage resolution of the children. Will change to `nsChangeHint_ReflowHintsForScrollbarChange`
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-18 22:53:27,Sure. Will do.
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-APPS-PhabricatorHeraldApplication,2021-11-18 07:11:00,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-18 07:10:59,nit: unnecessary semicolon
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-18 07:10:59,r=me with the change hint fixed or justified in a code comment.
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-18 07:08:58,Maybe assert that STABLE is in the bit field? Otherwise we've messed up parsing.
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-18 07:08:58,Is this hint enough? I would expect we need at least https://searchfox.org/mozilla-central/rev/bc5e79f3ae0f42cb4a6ebd05fc32f48a3829059d/layout/base/nsChangeHint.h#410
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-18 07:08:58,">>! In D131460#4273964, @TYLin wrote:
> {nav,  icon=question-circle, name=question:}  Is it reasonable to use `bitflag!` as the specified/computed value to implement the syntax `stable && both-edges?` ? I'm willing to change if there's a simpler way. (I'd love to have this reviewed before hacking the layout part.)

Yeah that seems totally fine."
131460,https://phabricator.services.mozilla.com/D131460,Bug 1741774 - Support scrollbar-gutter in the style system.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-18 02:32:57,"{nav,  icon=question-circle, name=question:}  Is it reasonable to use `bitflag!` as the specified/computed value to implement the syntax `stable && both-edges?` ? I'm willing to change if there's a simpler way. (I'd love to have this reviewed before hacking the layout part.)"
131360,https://phabricator.services.mozilla.com/D131360,Bug 1687973 - Part 6: Remove ParseTask::scripts. r?tcampbell!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-11-19 00:59:48,rebased and addressed review comments
131360,https://phabricator.services.mozilla.com/D131360,Bug 1687973 - Part 6: Remove ParseTask::scripts. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-11-18 16:48:34,I'm glad this sort of thing is gone. It was always very subtle.
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-dd4lplzdz2vzfhjyu5ql,2021-11-17 16:59:11,Moved previous cleanup that was in test function to here.
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-dd4lplzdz2vzfhjyu5ql,2021-11-17 16:59:11,"Just updated the cleanup to address comment from @gijs.  
New try push just in case: https://treeherder.mozilla.org/jobs?repo=try&revision=da78e8460a3f671118cd56c949f0d07d35432f51"
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-sjb23lkvqglp6kixwyq2,2021-11-17 15:09:47,Nice test! Thanks for working on this :)
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-17 11:23:16,"This now gets run 4 times, once for each invocation of `testPdfFilePicker`, which you invoke in the loop.

Let's move it to the `setup()` function so that we only run it once."
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-17 11:23:16,Nice work! Just one issue I noticed with the cleanup of the test.
131310,https://phabricator.services.mozilla.com/D131310,"Bug 1738129 - fix Save Link As... for PDF files to show save dialog with downloads improvements pref enabled. r=gijs!,mtigley!",PHID-USER-dd4lplzdz2vzfhjyu5ql,2021-11-17 00:18:44,Current try push: https://treeherder.mozilla.org/jobs?repo=try&revision=d0b48a5936df7afa533d25796b7cf98e9649d639
131260,https://phabricator.services.mozilla.com/D131260,Bug 1735589 Part 1 - Respect flex item's aspect-ratio when measuring its main size in block-axis.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-11-22 18:40:57,Revise extended commit message
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-5zrvxiuhmrwvh6kwlruw,2021-11-17 16:50:05,LGTM
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-4jlttcsengdawi5jugb4,2021-11-17 14:55:50,"Try is green, except for known intermittents: https://treeherder.mozilla.org/jobs?repo=try&tier=1%2C2%2C3&revision=85c5d16b8ded1c6f958abe4b1bd55d922ec9ee71"
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-52tll3zmlcopd5aoarnv,2021-11-16 20:58:12,The string changed: https://mozilla-l10n.github.io/documentation/localization/making_string_changes.html
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-5zrvxiuhmrwvh6kwlruw,2021-11-16 20:08:49,Why was `2` added to the end of the id?
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-5zrvxiuhmrwvh6kwlruw,2021-11-16 20:08:49,Why was `2` added to the end of the id?
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-11-16 17:23:57,Thanks for the more targeted tests!
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-11-16 17:23:57,"Note: this is important: so that we fully test some internal equality function, the count of threads before/after the change should be the same.
(I'm highlighting this because the function had a bug before, that wasn't caught by tests because of that).

I'll be happy enough if you split this in 2 different tests for more clarity and more future-proofness: first changing the thread value to this value, and then change it again to another value with as many threads."
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-11-16 17:23:57,"I'm not 100% sure about this label yet, when I see ""Nightly"" alone in the dropdown I feel like something is missing, I don't understand it right away.

last minute nitpicking: `{ -brand-shorter-name } internals`

If you like it, feel free to change it (as well as in `perftools.ftl`)

(this is optional)"
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-11-16 17:23:57,nit: this comment needs updating too
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-11-16 17:23:57,"Thanks, this looks good to me and I hope this will make our presets less confusing!

Please note that the test `devtools/client/aboutdebugging/test/browser/browser_aboutdebugging_profiler_dialog.js` needs to be updated for the new strings too. (Note: I tested the remote debugging path manually and this is working well, so no worries about the behavior)

I added also a few comments, only the one marked ""optional"" is optional (but I'd very much like to get your feedback on this last minute suggestion). r=me with these changes!"
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-4jlttcsengdawi5jugb4,2021-11-16 09:45:10,"Thanks for asking!

Short answer: Yes.

Longer answer: It's a tradeoff. One problem we currently have is that engineers who are using Nightly or local builds give instructions to Firefox bug reporters to profile, and then the profiles are disappointing because what can be captured in release builds is not as detailed as what can be captured in Nightly. I'm hoping that having a different name here might act as a nudge for Firefox engineers to consider requesting that the bug reporter uses a Nightly to profile. And at the same time I'm afraid this different name might cause some slight confusion. Overall, I think it's worth trying."
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-52tll3zmlcopd5aoarnv,2021-11-15 19:23:19,Are you OK with this changing across different branches (i.e. Nightly vs Firefox)?
131158,https://phabricator.services.mozilla.com/D131158,"Bug 1741235 - Merge the 'Firefox Front-End' and 'Firefox Platform' profiler presets, r=julienw.",PHID-USER-nlulagzxcxzordsbcw42,2021-11-15 19:15:44,Adding Niklas and Katherine as optional reviewers to help them gain l10n review experience.
131108,https://phabricator.services.mozilla.com/D131108,Bug 1733854: Remove unused onItemMoved function.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-12-19 23:09:00,"Okay, thanks :)"
131108,https://phabricator.services.mozilla.com/D131108,Bug 1733854: Remove unused onItemMoved function.,PHID-USER-erxup3oqd7if4an5l7ut,2021-12-17 13:45:37,"I'm sorry, my review queue is just my fault, you should not feel shy to ask for review and nag me :)"
131108,https://phabricator.services.mozilla.com/D131108,Bug 1733854: Remove unused onItemMoved function.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-12-07 23:12:14,"Yeah, this patch is ready.
I think I am requesting reviews too much to you, wanted to ask after waiting for other reviews.
But, yes, let me request now.
Thanks!"
131108,https://phabricator.services.mozilla.com/D131108,Bug 1733854: Remove unused onItemMoved function.,PHID-USER-erxup3oqd7if4an5l7ut,2021-12-06 15:46:51,@daisuke Is this not ready for review?
130958,https://phabricator.services.mozilla.com/D130958,Bug 1738418 - Testcase r?ckerschb,PHID-APPS-PhabricatorHeraldApplication,2021-11-15 08:40:09,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-12-07 15:04:06,All comments done
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-12-03 18:26:46,Why is there an early return in this one but not in the `GetDiskSpaceAvailable`? Seems odd to not be somewhat aligned. Can you remove it to align better with the other caller?
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-12-03 18:26:46,Please remove this partial comment.
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-12-03 18:26:46,r+ with the two changes I requested.
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-12-02 10:41:16,"- Error changed to NS_ERROR_FAILURE
- Callbacks & helper reverted as suggested
- When if comes to fallback, I think it's better to return an error here because next we will be passing this path-like to an external API which expects a directory, [getdiskfreespaceexw](https://docs.microsoft.com/en-us/windows/win32/api/fileapi/nf-fileapi-getdiskfreespaceexw). On a good day, the error handling of this API should cover also our case but on a bad day, if it's for example an executable file, it could open up a way to some other issues."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-12-01 16:41:52,"Why `NS_ERROR_INVALID_POINTER`? The error we'd be returning here seems to have little to do with that.

I think I'd prefer to keep this call to `GetParent` in the call-site like it was before as it's more clear, and we can fall-over in the same was as we did before, by attempting to call `GetDiskSpaceAttributes` directly on the current path without using `GetParent`, if we can't get the parent but we think it's a `PR_FILE_FILE` for some reason."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-11-25 08:49:22,"The ticket [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1742928 | 1742928 ]] was created to keep track of this test. When enabled, the test fails in a counterintuitive way and someone should take a look."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-11-24 15:32:21,"Hmm, good catch. It seems the test was not enabled accidentally. The test was added in D96889."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-11-24 15:14:59,This (unrelated) test appears to be disabled. Should it be enabled?
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-11-24 15:14:59,"In this layer, it's not clear to me why the errors should be squashed. I think it might be better to do it in an upper layer where it is more obvious from the context."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-11-23 15:46:06,A gtest is added for this in the previous/parent patch.
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-11-23 15:42:13,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-11-23 15:42:13,"Looks good to me, except the change of error propagation. It seems that `GetDiskSpaceAvailable` was trying to always return zero and `NS_OK` if there were any errors. I'll let someone from xpcom-reviewers to decide the change of error propagation.

BTW, I just realized there's xpcom/tests/unit/test_localfile.js which contains a test for `diskSpaceAvailable`.
@jari  Can you add a similar test for `diskCapacity` as part of this patch ?
Thanks."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-11-18 06:18:17,"Hm, it seems that the original implementation of `GetDiskSpaceAvailable` doesn't propagate errors."
130908,https://phabricator.services.mozilla.com/D130908,Bug 1740212 - Get disk capacity on Windows. r=#dom-storage-reviewers,PHID-USER-4b5kycm6obt7loobvrat,2021-11-10 18:55:25,This kind of validity checks are actually common for most public methods.
130858,https://phabricator.services.mozilla.com/D130858,Bug 1739539 - Rename titlebar pref and add migration from old pref. r=Gijs,PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-11-10 21:08:31,"This looks good to me, thanks!"
130858,https://phabricator.services.mozilla.com/D130858,Bug 1739539 - Rename titlebar pref and add migration from old pref. r=Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-10 17:23:14,"I'm out sick, maybe Jared or Mike can review."
130858,https://phabricator.services.mozilla.com/D130858,Bug 1739539 - Rename titlebar pref and add migration from old pref. r=Gijs,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-10 12:59:50,clang-format
130858,https://phabricator.services.mozilla.com/D130858,Bug 1739539 - Rename titlebar pref and add migration from old pref. r=Gijs,PHID-USER-cje4weq32o3xyuegalpj,2021-11-10 12:10:59,"Code analysis found 1 defect in the diff 506662:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p toolkit/xre/nsAppRunner.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/FoUSc0gASzaGMmw6_MSLsw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-fgiedpn3srsgfp7cqpey.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/506662) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5b353a89a6a35685b163021f86bb8ac2306f7265)."
130808,https://phabricator.services.mozilla.com/D130808,Bug 1739443: Don't include nsis or mozmake in package,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-11-10 06:12:45,"Might be worth upgrading nsis for the mozillabuild installer itself (although it would be good to double check that mozillabuild's script doesn't do things that would be affected by nsis changes (we did have to adapt for Firefox, see https://phabricator.services.mozilla.com/D124163#4055039 and bug 1730290)"
130808,https://phabricator.services.mozilla.com/D130808,Bug 1739443: Don't include nsis or mozmake in package,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-11-10 06:12:45,fetching -> fetched? (in summary)
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-14 17:59:09,Tests that cover this patch are part of D130757.
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-APPS-PhabricatorHeraldApplication,2021-12-14 13:20:13,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-12-01 20:17:42,"@baku this should now be ready for a new review pass, D130757 does now also cover the bug due to the typo fixed in the previous update."
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-30 15:49:14,Fixed listener counts update in ExtensionEventWakeupMap::DecrementListeners.
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-25 13:13:36,"It should be -1 for sure (me facepalming here)

honestly I wasn't sure yet if this ExtensionEventWakeupMap class would have been a reasonable solution for this tracking need also from your perspective and so I did not yet cover it with enough tests (I added only a couple locally to verify the scenarios with no listener ever registered and with only one registered, I'll add one for a listener removed right after have been added which would have caught also this stupid mistake / typo I did here)."
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-ppexvnh4ahku2ypgjpmd,2021-11-24 07:58:31,why +1? Should it be -1?
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-09 17:54:24,Minor tweak to handle clang-tidy 'readability-simplify-boolean-expr' warning.
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-09 16:10:27,"@baku as I briefly described in the patch description, this patch includes a proposed approach to keep track of the event listeners that can wake up the background worker script (as opposed to any arbitrary WebExtensions API event listener that may have been subscribed at a runtime time during the entire time the worker has been running), and I'd like to get a preliminary feedback on the proposed approach (which is mainly based on the `ExtensionEventWakeupMap` class, which extends`nsTHashMap<nsStringHashKey, uint64_t>`).

As a side note, in D130756 there is the initial prototype of the `nsIServiceWorkerManager.wakeForExtensionAPIEvent` method that will be using this tracking data (through a call to the `ExtensionBrowser::HasWakeupEventListener` method)."
130758,https://phabricator.services.mozilla.com/D130758,Bug 1728327 - Track ExtensionEventListener a background service worker registered by the time it is fully loaded. r?baku!,PHID-USER-cje4weq32o3xyuegalpj,2021-11-09 16:06:31,"Code analysis found 1 defect in the diff 506238:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/506238) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f3090109615d325f5228ae05cbdc777dc5850ad2)."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-cje4weq32o3xyuegalpj,2021-11-16 19:39:38,"Code analysis found 1 defect in the diff 508557:
 - 1 defect found by code coverage analysis

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f60749ddee03d8f1108dd128edd1c91ea86e1f5f&selectedTaskRun=HlmpqucjRuSuIQGo0hp9og-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/508557) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f60749ddee03d8f1108dd128edd1c91ea86e1f5f)."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-cje4weq32o3xyuegalpj,2021-11-16 19:39:07,"Code analysis found 1 defect in the diff 508556:
 - 1 defect found by code coverage analysis

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=412e979d7d9d9f33a0b45a1f671b759ab2d84a9a&selectedTaskRun=dKaYBoOzQGOPtPJLM7voKA-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/508556) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=412e979d7d9d9f33a0b45a1f671b759ab2d84a9a)."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-16 19:10:27,Minor change
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-16 19:01:28,Done. Also fixed the bug that the returned `listener` was actually never used in the previous code.
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-16 19:01:28,"Done - Didn't know this existed, but this is much better!"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-16 19:01:28,Alrighty -- Hopefully that does it!
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-16 18:58:00,Address review comments from Nika
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-16 00:06:15,"My preference is vaguely towards using a smart pointer, but if we're going to be doing manual free calls, this is fine."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-16 00:06:15,"As I noted earlier, this shouldn't be moved out of line as it changes the semantics of the listener in-out parameter for doContentSecurityCheck."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-16 00:06:15,"The reason why this function takes a `nsCOMPtr<nsIStreamListener>&` is because it may replace the listener when it is called. This function needs to be called with a reference as well so that the listener in the call-site can be changed.

Let's not factor this out into a separate function."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-16 00:06:15,Might be worth checking the return value here.
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-16 00:06:15,"I think this could be simplified using `SyncRunnable` (https://searchfox.org/mozilla-central/rev/674b6582bafedc11fba6dc537769c88e9ed921d3/xpcom/threads/SyncRunnable.h#98), like this:

```
  nsCOMPtr<nsIRunnable> task =
      NS_NewRunnableFunction(""GetIconHandleFromURLBlocking"", [&rv] {
        rv = GetIconHandleFromPathInfo(iconPathInfo, aIcon);
      });
  RefPtr<nsIEventTarget> target = DecodePool::Singleton()->GetIOEventTarget();
  SyncRunnable::DispatchToThread(target, task);
```"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-cje4weq32o3xyuegalpj,2021-11-12 01:56:50,"Code analysis found 1 defect in the diff 507508:
 - 1 defect found by code coverage analysis

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5693f13f9149492be9d876ca316279fabdf4831a&selectedTaskRun=F5wW5bCyQB6MJCCS7s-4ww-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/507508) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5693f13f9149492be9d876ca316279fabdf4831a)."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,Oof good catch -- Boneheaded move on my part. I put the error handling code back.
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,Yeah you're right haha -- I probably went a bit overboard on this one. I put it back.
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"TBH I'm surprised that `CoTaskMemFree()` allows one to pass in a NULL pointer -- Most other Windows APIs like `CloseHandle()`, `DeleteDC()`, `VirtualFree()` etc don't allow it, and I've always considered it a bit of a code smell.

I changed it to initialize the pointer to NULL, but if it's okay with you I'd rather keep the new behavior of not calling `CoTaskMemFree()` if the allocation failed."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"Now I ensure that if `AsyncOpen()` returns a success code, the pump has been started on the input end of the async pipe, and the output end of the pipe will have a promise queued up to dump data into it."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"Yep! It's now handled by the `GetIconHandleFromURLAsync()` below, which will fulfill the promise either from the Decode I/O thread if it has to use the Windows Shell, otherwise it just uses `GetStockHIcon()`. Either way, it's async now!"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"I've never done anything in Mozilla code with `MozPromise` before, but I liked it! Makes the caller code look much better too IMO."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"I ended up using promise syntax instead, and so I just give the promise target whatever thread called `AsyncOpen()`. I think that's likely the behavior that would be expected from any caller anyhow."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:48:29,"Hey Nika,

I think this addresses all your comments. I actually got to create a `MozPromise` for the first time (I've only ever been on the `->Then()` side of it), and it was pretty awesome😎

Anyway I hope you like these changes better. I think both the Async path and the Sync path have been cleaned up quite a lot.

Cheers!"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-12 01:33:02,Address review comments from Nika
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"Could we perhaps keep that code around, and make it satisfy the async nature by dispatching a runnable to the listener target to directly call `FinishAsyncOpen`?"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"This could be simplified if we continue creating the input stream this late, but I'd like us to create it earlier as I mentioned before."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"`MOZ_ALWAYS_TRUE` is only a `MOZ_DIAGNOSTIC_ASSERT` (https://searchfox.org/mozilla-central/rev/7241c1f9e94377b70b49cf702264269779c5c322/mfbt/Assertions.h#601), so in release builds with this change we'd not handle an OOM condition here, which seems bad.

We should handle the error fully by either calling `NS_ABORT_OOM(iconSize)` if it fails, or by making the return value `nsresult` and returning `NS_ERROR_OUT_OF_MEMORY` as we did before."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"Why inline this function in the 2 callers? It's not a huge deal either way, but it is duplicating a magic number a bit."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"Previously in this code path we were calling `CoTaskMemFree(idList)`, but after your changes we aren't anymore. I suppose that shouldn't be an issue if an error code was returned, but it might be nice to make sure it's called anyway & initialize `idList` to nullptr by default.

I suppose we could potentially also use the helper from widget/ (https://searchfox.org/mozilla-central/rev/7241c1f9e94377b70b49cf702264269779c5c322/widget/windows/WinHeaderOnlyUtils.h#723) + UniquePtrExtensions.h and write it like:

```
UniquePtr<ITEMIDLIST, CoTaskMemFreeDeleter> idList;
HRESULT hr = ::SHGetSpecialFolderLocation(nullptr, aFolder, getter_Transfers(idList));
```"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"I was going to make a concerned comment here about how we're now delaying creating the nsPipe until `FinishAsyncOpen`, as it would mean that an attempt to call `Cancel` after the channel has `AsyncOpen` called, but before `FinishAsyncOpen` would not work correctly, as the pump wouldn't be cancelled properly, but I've realized that this bug actually also exists in the old code. I don't quite know how well `nsInputStreamPump` handles being cancelled before `AsyncOpen`. It appears as though it won't ever actually close the underlying input stream, potentially leaving the underlying channel in a bad state and not calling the callbacks quite as required.

I suppose you're not technically making it any worse in this patch, but it might be nice to fix this issue by starting the pump in `AsyncOpen` and only writing to the output stream when the open has completed.

(do note that you'll need to make sure to keep the output stream alive and open until the data is sent to it at which point you'll need to close it. I think the current code is closing the output stream by destroying the last reference to it)"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 17:01:17,"The `mTarget` being used in this case is probably actually the old Quantum DOM main thread event target, so no matter what `mTarget` was always the main thread. AFAIK channels can only have their events retargeted to non-main threads if they implement `nsIThreadRetargetableRequest` (https://searchfox.org/mozilla-central/rev/7241c1f9e94377b70b49cf702264269779c5c322/netwerk/base/nsIThreadRetargetableRequest.idl#34).

The quantum DOM stuff is somewhat unused nowadays, so I suppose it's probably OK to drop it these days, but I think we should either fully support it in `nsIconChannel` or not at all. Perhaps check-in with #necko-reviewers about that?"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-cje4weq32o3xyuegalpj,2021-11-09 00:25:22,"Code analysis found 1 defect in the diff 505904:
 - 1 defect found by code coverage analysis

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ad4889335b9facd2f1606dfa43918c158ca23dbe&selectedTaskRun=L86cWWTbQnmZoq4b8Sp9DQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/505904) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ad4889335b9facd2f1606dfa43918c158ca23dbe)."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-09 00:02:29,"Q: I changed this to `NS_DispatchToMainThread` because `FinishAsyncOpen()` asserts that it can only run on the main thread.

But there's probably an argument out there that perhaps it should run on whatever thread made the original call to `AsyncOpen()`? I don't know if that makes sense or you think that's something worth changing?"
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-09 00:02:29,"These are just here to avoid actually moving these functions yet, as it makes the diff quite unreadable.

In the next change in the stack, I actually move the functions here."
130708,https://phabricator.services.mozilla.com/D130708,Bug 1721850 - Refactor of nsIconChannel (Part 1),PHID-USER-ymojm4vyzvjjqni4aooi,2021-11-09 00:02:29,"Hey Nika,

This is part 1 of the change to make nsIconChannel remoting work. This is a fairly substantial refactor, but mostly it serves to make almost all of the ""sync stuff"" into static free functions the same way they are on Linux.

It also introduces a break between ""Getting a buffer with the icon data"" and ""Creating a stream with the contents of that buffer"" so that I can later piggyback on the Linux remote-ing change that uses a `ByteBuf` to send the data from parent to child.

Thanks!
Chris"
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-09 11:41:25,"Add a comment to lineReader. It is not specific to UIDL, any multi-line data block can span multiple ondata event"
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-11-09 11:30:30,"Thanks for the explanation! Please add a code comment that ""_actionUidlResponse may be called multiple times for a single UIDL request"""
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-09 10:36:36,"The key point is `_actionUidlResponse` may be called multiple times for a single `UIDL` request. If as you suggested,

```
_actionUidlResponse() {
  this._lineReader(...);
  this._actionRetr();
}
```
`_actionRetr` will be called before the end of response (`\r\n.\r\n`)"
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-11-09 09:42:14,"Yes I understand you want something for when stuff is done. I just don't understand why it should be a callback for it.

Why not make it so that 
await this._lineReader(...);
this._actionRetr();

Or well, doesn't actually look  like there is any async functionality there, so just
this._lineReader(...);
this._actionRetr();"
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-09 07:44:24,"Take `_actionUidlResponse` for example

```
C: UIDL
S: UIDL response 1
S: UIDL response 2
S: UIDL response n
```

For one request, the response may be broken to several chunks by the server or TCPSocket. `_actionUidlResponse` (and _lineReader) will be called multiple times until we receive the `\r\n.\r\n`, we usually need to execute something different when it really ends, that's why doneCallback is needed."
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-11-09 07:26:25,"Ok, but how about just `async _lineReader(data, lineCallback)` ? What is the advantage of the second callback?"
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-11-08 23:19:11,"Seems to me two callbacks are more suitable. When handling responses of many commands, we can reuse the code to handle stuffed dot and leftover data. If this is an async function that consumes one line at a time, then every caller needs to use `while` and store leftover data."
130608,https://phabricator.services.mozilla.com/D130608,Bug 1738175 - Load popstate.dat to decide which messages to fetch in Pop3Client.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-11-08 10:57:26,"Maybe better/clearer to make it async?

And would it make sense to just have this read one line at the time?"
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-12-01 15:32:34,">>! In D130557#4267997, @nilsirl wrote:
> I am interested however I doubt I will have the time until Christmas. If this is urgent, someone else should probably work on this instead.

OK, yeah, I think ideally this should be fixed sooner, so I made some time and put up a separate patch. Thank you for helping keep this issue on our radar and for your contribution!"
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-ymenwsduyzw6fr7oglix,2021-11-16 20:18:11,"I am interested however I doubt I will have the time until Christmas. If this is urgent, someone else should probably work on this instead."
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-15 17:52:26,">>! In D130557#4248222, @Itiel wrote:
> With that being said, now that there's a possibility of having the minimum number of visible characters being reduced by 7px, do you think the minimum width of tabs can be increased by ~7px? Or does it require UX approval first?
> Not in this patch of course.

I think that'd be a separate bug that would probably need at least a sign-off from UX, less sure about discussion. Feels a bit strange to have a different minimum tab size for RTL, and 7px probably means fewer tabs for a number of users which will then upset other people etc. etc. Can't win.

@nilsirl are you interested in working on the suggestion from my previous comment, ie making this hover/non-hover juggling of the width not apply to tabs where the title is start-aligned to the side with the close button?"
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-sqzi3myw3ybsofxmewmp,2021-11-09 05:15:35,">>! In D130557#4247130, @Gijs wrote:
> The only other alternative I can think of is having the text have a fade-out near the [x] in addition to the end-side-fade-out, when hovered, such that the [x] and text can be closer together in those cases, too... but that seems very non-trivial to implement, likely to have annoying edgecases, and a level of complexity that's probably not justified by the issue.

Agreed. Also, having the fade-out to apply on the start side of LTR (or RTL, for the LTR UI case) text seems.. wrong.
Also also, this will have ""colliding"" masks for the minimum tab width case (ie when the tabbar is overflowing).

With that being said, now that there's a possibility of having the minimum number of visible characters being reduced by 7px, do you think the minimum width of tabs can be increased by ~7px? Or does it require UX approval first?
Not in this patch of course."
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-08 22:13:17,">>! In D130557#4246244, @Itiel wrote:
>>>! In D130557#4245956, @Gijs wrote:
>> I suspect what is broken here is the RTL direction of the tab label and the browser.xhtml document is not necessarily the same, so perhaps we just need to duplicate the inline rule here for `-moz-locale-dir` and use `padding-left` and `padding-right` or something like that.
> 
> tbh I'm not sure what you would consider a ""fix"" for this issue- AFAICT there's no fix for this that will do all of the following:
> 1. fix the actual text jumping issue
> 2. leave no padding in the inilne-start side of the close button, when the tab is not hovered
> 3. retain the same number of visible characters in the tab label, as it is in LTR

Right, I think in the case where the tab label is aligned to the side where the [x] button is, we should not use the hover/non-hover-specific styles. That indeed reduces the available space for text on those tabs slightly (ie will not do (3) in your list), but that's better than not doing (3) anywhere and thus reducing that space everywhere, which is what the attached patch does, I think?

The only other alternative I can think of is having the text have a fade-out near the [x] in addition to the end-side-fade-out, when hovered, such that the [x] and text can be closer together in those cases, too... but that seems very non-trivial to implement, likely to have annoying edgecases, and a level of complexity that's probably not justified by the issue."
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-sqzi3myw3ybsofxmewmp,2021-11-08 18:21:12,">>! In D130557#4245956, @Gijs wrote:
> I suspect what is broken here is the RTL direction of the tab label and the browser.xhtml document is not necessarily the same, so perhaps we just need to duplicate the inline rule here for `-moz-locale-dir` and use `padding-left` and `padding-right` or something like that.

tbh I'm not sure what you would consider a ""fix"" for this issue- AFAICT there's no fix for this that will do all of the following:
1. fix the actual text jumping issue
2. leave no padding in the inilne-start side of the close button, when the tab is not hovered
3. retain the same number of visible characters in the tab label, as it is in LTR

Unless you mean to NOT reset the padding specifically for these RTL UI + LTR tab text (or vice versa) cases?
Something like this?
```
.tabbrowser-tab > .tab-stack > .tab-content > .tab-label-container[labeldirection=""ltr""] + .tab-close-button:-moz-locale-dir(rtl) {
  padding-right: 7px;
  width: 24px;
}

.tabbrowser-tab > .tab-stack > .tab-content > .tab-label-container[labeldirection=""rtl""] + .tab-close-button:-moz-locale-dir(ltr) {
  padding-left: 7px;
  width: 24px;
}
```"
130557,https://phabricator.services.mozilla.com/D130557,Bug 1701394 - Remove rules for when tab is hovered. r?jaws,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-08 16:54:17,"> This seemed to not work. So by removing the rules, it doesn't prevent more of the table title from being shown. Now when the tab is hovered more is actually visible.

This doesn't really make sense to me. What does ""seemed to not work"" mean? Does the close button not change size when the rule is applied?

Here is what I see with this rule in place in LTR:

{F3135439}

You can clearly see the ""stu"" of the alphabet I dumped in the tab label for testing.

And with the rules that you're removing here removed (using the devtools inspector), I see this:

{F3135442}

where clearly the ""u"" has completely disappeared and the ""t"" is faded.

A similar effect appears when the tab is compressed.

So I don't think just removing the rule is the right fix - it fixes the bug but it regresses tab label elision for LTR users.


I suspect what is broken here is the RTL direction of the tab label and the browser.xhtml document is not necessarily the same, so perhaps we just need to duplicate the inline rule here for `-moz-locale-dir` and use `padding-left` and `padding-right` or something like that."
130507,https://phabricator.services.mozilla.com/D130507,Bug 1739652 - Upgrade cmdline-tools to 5.0.,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-08 15:49:20,This might be a #firefox-build-system-reviewers review? I'm not actually sure.. Oh well.
130457,https://phabricator.services.mozilla.com/D130457,Bug 1739545 - part 1: Get rid of `mozInlineSpellChecker::DidJoinNodes()` and `mozInlineSpellChecker::DidSplitNode()` r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-11-08 14:12:37,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-24 20:05:51,"Code analysis found 133 defects in the diff 511945:
 - 1 defect found by clang-format
 - 132 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -p dom/html/HTMLInputElement.cpp`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/fWhnRYy2TtepRwn_S2ktnA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-7gucwwu6226w7dcqjsxg.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/511945) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=aef2e8f3bc54355063ae2d3654c7854f1ff59640)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-24 19:48:52,">>! In D130407#4280542, @bgrins wrote:
> I am of the opinion that ""land the code"" and ""make a decision to turn on in nightly"" should be decoupled to give space for a deliberate decision about each. I don't have an objection to the former (and will defer to Gijs' code review and suggestions about that). I'll be away next week so as long as the patch is updated to be disabled by default you can remove me from the reviewer list and land.

Removing @bgrins as per the above (on the current revision, pref is off by default)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-24 19:47:02,Disable by default. Fix accesskey. Remove comment. Remove special focus handling on click which seems broken-ish and was untested.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-24 19:46:41,"@mats is on PTO, and I was planning on landing this preffed off soonish. Phabricator doesn't let me update the revision without doing this unfortunately."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-23 13:50:46,"I don't think this comment adds anything. It's also marked up as a section comment (two `#`), but there's only 1 item here so that doesn't really make sense. It's also slightly misleading given that there are other password context menu items that aren't listed here (the stuff handled by `initPasswordManagerItems`).

Let's move the string next to the other password-related items and drop the comment."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-23 13:50:46,"This access key is already in use in the same menu when we offer ""Suggest Strong Password"", cf. https://jsbin.com/tiwivakexa/edit?html,output .

This is a little unfortunate because `P` is used for `Paste`. `o` is used for the ""use saved password / use saved login"" item, `h` for ""This frame"" submenu, `w` for ""Switch Text Direction"" (if bidi UI is enabled), and ""a"" for ""Select All"". AFAICT the items using ""r"" or ""d"" can't show at the same time as this one, so perhaps that's our best bet?"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-23 13:50:46,"Moving the string made some pre-existing issues more obvious to me.

I'll also add that it's a bit unfortunate we now have both `initPasswordItems` and `initPasswordManagerItems` in the context menu frontend code, but this isn't technically a pwmgr-related item and renaming and making that method even longer than it is already also doesn't seem attractive - follow-up fodder, I guess."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-22 19:33:28,Still looks good to me though as per @bgrins feedback let's perhaps land this disabled for now and enable in a separate bug?
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-22 01:21:24,">>! In D130407#4274894, @Gijs wrote:
> ... though really we might as well merge all those changes into the second part of the patch and then you don't need my review here.

Sure, I've merged part 2 into this part."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-22 01:16:09,"OK, I moved it to browser/locales/en-US/browser/browserContext.ftl"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-tdko64rmgjnotjezaqsa,2021-11-19 18:17:09,I also agree with Gijs' suggestion at https://phabricator.services.mozilla.com/D130407#4274894 to fold the remaining patches together to avoid the incomplete context menu state.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-tdko64rmgjnotjezaqsa,2021-11-19 18:14:27,"I am of the opinion that ""land the code"" and ""make a decision to turn on in nightly"" should be decoupled to give space for a deliberate decision about each. I don't have an objection to the former (and will defer to Gijs' code review and suggestions about that). I'll be away next week so as long as the patch is updated to be disabled by default you can remove me from the reviewer list and land."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-tdko64rmgjnotjezaqsa,2021-11-18 21:02:30,"Whoa, friendly fire! No one is trying to misrepresent the situation or be dishonest. I was using ""ship"" (I guess colloquially) to mean new functionality will be exposed to users and site authors - which then would create follow on work for teams in the list after."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-18 11:50:28,"Given that (unlike the spellcheck and ""select all"" items by which it's surrounded) there are no toolkit consumers, I think this should live in the `browser/` context menu locale file, with the relevant prefix (instead of `text-action`)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-18 11:50:28,"I mean, rubberstamp on the frontend bits I guess, with the FTL quibble addressed, given they all get replaced in the next part of the patch - though really we might as well merge all those changes into the second part of the patch and then you don't need my review here.

Given the disagreements about whether this should land enabled-on-nightly or disabled-on-nightly, adding in bgrins as a reviewer to make sure everyone's on the same page there."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-17 13:11:32,"> I wouldn't want to ship something to the web (even in nightly only) until we have confidence in its accessibility.

Well, you shouldn't use the term ""ship something to the web"" for features that are enabled in Nightly only. That's not how we define that term for web platform features. The ship/unship terms refers to Firefox Release: https://wiki.mozilla.org/ExposureGuidelines
(Franky, I find it slightly dishonest to mince words like that to misrepresent the situation here.)

> it needs further consideration based on the discussion in https://github.com/whatwg/html/issues/7293.

Sure, I'll monitor the feedback on that issue, but the sentiment seems to be positive so far, so I feel that's good enough to land this in Nightly for testing purposes. How else are we going to find out if this causes web-compat issues and the nature of those issues?"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-17 00:58:44,"Code analysis found 4 defects in the diff 508715:
 - 4 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/508715) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5c337562b76b1b72bd6b5ad13a748262b2b94cd3)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-17 00:17:50,"It seems I copied a bad test to use as a template, sigh."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-nlulagzxcxzordsbcw42,2021-11-15 19:16:25,Adding Niklas and Katherine as optional reviewers to help them gain l10n review experience.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,"nit: no need for `type`, here and below."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,You need to await this.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,async function runTest() {
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,nit: Could be const.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,"Can we actually use it as an async functions? So:

```
async function click_show_password(aId) {
    var wu = SpecialPowers.getDOMWindowUtils(window);
    var element = document.getElementById(aId);
    element.focus();

    await new Promise(resolve => setTimeout(resolve, 0));
      var rect = element.getBoundingClientRect();
      var x = rect.right - 8;
      var y = rect.top + 8;
      wu.sendMouseEvent(""mousedown"", x, y, 0, 1, 0);
      wu.sendMouseEvent(""mouseup"", x, y, 0, 1, 0);

    await new Promise(resolve => requestAnimationFrame(resolve));
  }
```"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-15 18:41:12,"Please rewrite the two mochitests to use `async` properly. With that, r=me"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-15 06:00:20,"Code analysis found 4 defects in the diff 507791:
 - 4 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/507791) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=389cb3237a4ad28617b2f616947f6ebfe5dc3cfe)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-14 21:30:02,"Code analysis found 4 defects in the diff 507749:
 - 4 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/507749) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e72f651539a180f3dbd424376081abf009d01575)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-14 21:22:04,"So, your changes looks good to me, except that we now fail an assertion:
https://searchfox.org/mozilla-central/rev/e99e0a1bbc126a0715b6eb75c41567e37c715cdb/editor/libeditor/TextEditor.h#200
in this test: browser/extensions/formautofill/test/mochitest/test_address_level_1_submission.html

This is for the `-moz-text-control-preview` which doesn't seem to have the `eEditorPasswordMask` bit set (mFlags is 3).
https://searchfox.org/mozilla-central/rev/e99e0a1bbc126a0715b6eb75c41567e37c715cdb/editor/nsIEditor.idl#52-60"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-14 21:08:20,"FYI, I added the `!= InputFile` condition here since we got assertions in GetNonFileValueInternal:
https://searchfox.org/mozilla-central/rev/e99e0a1bbc126a0715b6eb75c41567e37c715cdb/dom/html/HTMLInputElement.cpp#1518
Apparently one shouldn't call `IsValueEmpty()` on file inputs..."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-14 21:08:20,"I've folded our patches together as part 1.  Can you rebase the context-menu part on top of this one (and add ""part 2"" to its commit message)?
(I changed the author to you, since the salient bits are from your patch I think.)"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-13 12:40:51,"I don't know if you saw https://phabricator.services.mozilla.com/D130661, but I think that's much preferrable to this hard-coding in the frame class, wdyt?"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-13 12:40:51,Ticking request changes mostly so that you see the question.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-13 12:35:59,"I sent a patch for this in https://phabricator.services.mozilla.com/D130661 where instead I use a state bit, does it make sense to you?"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 23:49:02,"So, the remaining piece here is to hook up the context menu item and write a test for that."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-12 23:02:11,"Code analysis found 1 defect in the diff 507668:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p dom/html/HTMLInputElement.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/DARjau9RS1KTiSPIBh4iBg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-gvlb365okepalng5z7po.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/507668) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8cf84abdbbee993e2354b60f09e5c4150376e1d9)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 22:45:51,"I copied the styles from `-moz-search-clear-button`, but yeah I don't think
it's needed anymore.  I think the intention was to prevent the button from
stretching, which could make it unintelligible.

(I'll file separate bugs on a few `<input type=search>` things that we should fix there too.)"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 22:45:51,"Yeah, I'd like to avoid that if possible."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 22:45:51,"Agreed, I moved it to TextControlState so it survives reframing now."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 22:45:51,"This function is reached from the frame's Destroy method so this checks
for that and avoids calling the frame's method in that case.

> Can we instead null check root node in UpdateShowPasswordButtonState?

I think in general that methods should never themselves check if `this`
is alive - that's the responsibility of the caller IMO."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-12 22:45:51,"No, the caret remains in its original position when clicking the button,
so it seems to work fine AFAICT."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-4ad5hkiqgxt56m6j7xd6,2021-11-06 22:10:04,"From a product standpoint, I agree with bgrins.  Let's land this pref'd off.

> I'm not in favor of enabling this by default in nightly based on
> - the a11y concerns in https://bugzilla.mozilla.org/show_bug.cgi?id=502258#c76. I wouldn't want to ship something to the web (even in nightly only) until we have confidence in its accessibility.
> - enabling this will create follow on work for a number of other teams like frontend (i.e. the context menu issue), webcompat (i.e. handling reports that will presumably come in from authors who filed bugs when Chrome attempted this), and a11y.
> - we'd need a decision on if/how web authors would disable this which would be a new web-exposed behavior and feels like it needs further consideration based on the discussion in https://github.com/whatwg/html/issues/7293.
> 
> Feels safer to land off by default to make it testable for a small group of interested people, and then make a separate decision on how/when to expose this to the web."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-tdko64rmgjnotjezaqsa,2021-11-05 22:35:12,"I'm not in favor of enabling this by default in nightly based on
- the a11y concerns in https://bugzilla.mozilla.org/show_bug.cgi?id=502258#c76. I wouldn't want to ship something to the web (even in nightly only) until we have confidence in its accessibility.
- enabling this will create follow on work for a number of other teams like frontend (i.e. the context menu issue), webcompat (i.e. handling reports that will presumably come in from authors who filed bugs when Chrome attempted this), and a11y.
- we'd need a decision on if/how web authors would disable this which would be a new web-exposed behavior and feels like it needs further consideration based on the discussion in https://github.com/whatwg/html/issues/7293.

Feels safer to land off by default to make it testable for a small group of interested people, and then make a separate decision on how/when to expose this to the web."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-05 20:17:34,">>! In D130407#4238367, @emilio wrote:
> ni? me on the bug or something if you want me to fix the context menu bits, I've poked at that code relatively recently.

Thanks, that would be very helpful.

> Of course needs tests :-)

Yeah, I'll look into that..."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,"Does align-self do anything here? Guess it's copied from the `spin-box` thing, but that can probably be removed (it used to be inside a flex container but isn't anymore)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,Either null-check or `Text::FromNodeOrNull(mRootNode->GetFirstChild())` or `MOZ_ASSERT` IsText.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,I wonder if it's worth creating a password-specific subclass like search and co do... Probably not/
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,Just `SetShowPassword(!mIsShowingPassword)`?
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,"Storing this state on the frame seems fairly unfortunate. That means reframing it makes it lost, right? The way I would've probably gone about it is making it just a state change / pseudo-class. That way we don't need to hardcode and re-parse the url() background image over and over."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,It's unclear why this is needed here? Can we instead null check root node in `UpdateShowPasswordButtonState`?
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,"This looks a bit odd, doesn't this restore the caret position? Feels a bit unfortunate. This also loses the ""last element was focused by*"" bits on the window and such."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-05 00:07:20,"Looks generally good, though I have some comments. I guess since this is only toggle-able by the user making it persist reframes may be unnecessary, but still would feel weird that it doesn't.

ni? me on the bug or something if you want me to fix the context menu bits, I've poked at that code relatively recently.

Of course needs tests :-)"
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-04 22:40:38,"Code analysis found 4 defects in the diff 504759:
 - 4 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/504759) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1e6676a24850af920df92d51b13f05f13ac7341d)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-04 22:40:18,
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-cje4weq32o3xyuegalpj,2021-11-04 22:27:50,"Code analysis found 6 defects in the diff 504749:
 - 6 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/504749) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f89fa42590ef62c6d4e65274fec04eddd3592fc6)."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-04 22:24:34,Fixed the indentation. The commented code are intentional to indicate what's left to do for the context menu item to work. Happy to remove them if you don't find them useful.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-hdoh7wiodycud62xg7r6,2021-11-04 22:17:28,"So, the remaining part to fix here is to connect the context menu item actions here so that it set/get the `showPassword` on the password element the context menu was opened for.  I couldn't figure out how to do that though, there doesn't seem to be any easy way to get to that element...

I'll leave that for the Toolkit folks to fix, I don't think it should block us from landing this in Nightly so we can test this out."
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-04 22:12:38,You're going to need to pass this info from the child.
130407,https://phabricator.services.mozilla.com/D130407,"Bug 502258 - Add a Show Password button to <input type=password> controls.  r=emilio,mats",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-11-04 22:12:38,"This looks unfinished; there's commented-out code in the JS files, the indenting there is wonky, and it looks like there's bits missing for the IPC side of things."
130357,https://phabricator.services.mozilla.com/D130357,Bug 1738636 - Return true if the browsing context is not available for a document in AntiTrackingUtils::IsThirdPartyWindow(). r?pbz,PHID-USER-xjz55dyhhufbz6byzuyt,2021-11-04 16:25:17,"Testing exception: We don't know the exact circumstances in which this happens, so it's not feasible to write a test. After landing the patch we can see if it fixes the crash issue."
130307,https://phabricator.services.mozilla.com/D130307,Bug 1739222 - Update jsoncpp to version 1.9.5. r=gsvelto,PHID-APPS-PhabricatorHeraldApplication,2021-11-03 23:16:00,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
130307,https://phabricator.services.mozilla.com/D130307,Bug 1739222 - Update jsoncpp to version 1.9.5. r=gsvelto,PHID-USER-ebebpbp2fnufsd3f2mah,2021-11-03 23:16:00,LGTM
130257,https://phabricator.services.mozilla.com/D130257,WIP: Bug 1311726 - WIP Merged Patch stack for reusing scriptLoadRequest in worker script loader,PHID-USER-cje4weq32o3xyuegalpj,2021-11-03 12:41:22,"Code analysis found 4 defects in the diff 503930:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a2f8c9de46b141a2a5ebfc7d8ba3a322bd12af9f&selectedTaskRun=e9cxtOZ3RSmLc2eKQuunzA-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/503930) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a2f8c9de46b141a2a5ebfc7d8ba3a322bd12af9f)."
130207,https://phabricator.services.mozilla.com/D130207,Bug 1738809 - Remove EV Treatment for Expiring Cybertrust Global Root. r?rmf,PHID-USER-2gujohlr3u3puvz4jmvz,2021-11-09 09:26:18,"#check-in_needed handled, landing queued."
130207,https://phabricator.services.mozilla.com/D130207,Bug 1738809 - Remove EV Treatment for Expiring Cybertrust Global Root. r?rmf,PHID-USER-gib5nguoak7cnsiscn2n,2021-11-08 23:01:00,Looks good to me. Thanks!
130207,https://phabricator.services.mozilla.com/D130207,Bug 1738809 - Remove EV Treatment for Expiring Cybertrust Global Root. r?rmf,PHID-USER-jctf3fzk75vb7qsmgnhw,2021-11-05 09:10:38,"@keeler Dana, could you land this?"
130207,https://phabricator.services.mozilla.com/D130207,Bug 1738809 - Remove EV Treatment for Expiring Cybertrust Global Root. r?rmf,PHID-USER-ners37ntg76ccfm27mev,2021-11-04 15:09:27,lgtm
130207,https://phabricator.services.mozilla.com/D130207,Bug 1738809 - Remove EV Treatment for Expiring Cybertrust Global Root. r?rmf,PHID-USER-bkdjhhr4wcpesbxy35oi,2021-11-02 18:45:03,This will need manual verification.
130056,https://phabricator.services.mozilla.com/D130056,Bug 1725249 - Update telemetry notification emails to use screenshots-dev@ alias. r=sfoster!,PHID-USER-pro4mobntabgfr6q6kqu,2021-11-01 23:45:24,"Perfect thanks. I don't think we should need data-review here, but please hold off on landing until I confirm"
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-13 12:37:38,Tests in following patches.
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-hdoh7wiodycud62xg7r6,2021-11-13 02:29:36,"Because `SetScope` may mark the list as dirty, but this code is specifically recalculating everything so clearing `mDirty` at the end is the correct way to do it."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-hdoh7wiodycud62xg7r6,2021-11-13 02:29:36,"Sure, that makes sense."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-11 17:19:36,"So rather than doing this, can we remove this chunk of code, and propagate the dirtiness from SetScope in `AddCounterChanges`? That seems to be what we do ~everywhere else and seems a bit nicer to be consistent."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-11-11 17:19:36,Why moving this to the bottom?
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-hdoh7wiodycud62xg7r6,2021-11-10 17:22:50,"(FYI, the proposal in that last issue was just accepted, https://github.com/w3c/csswg-drafts/issues/6797#issuecomment-965557608)"
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-hdoh7wiodycud62xg7r6,2021-11-04 23:22:53,"FYI, the csswg resolved in favor of ignoring zero-valued increments (as we already do) in:
https://github.com/w3c/csswg-drafts/issues/6738
but filed a new issue to resolve which of the first/last increments to use:
https://github.com/w3c/csswg-drafts/issues/6797
This patch implements that proposal (i.e. using the last increment (before any counter-set))."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-10-30 17:47:46,"Code analysis found 2 defects in the diff 502496:
 - 1 defect found by clang-format
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -p layout/base/nsCounterManager.cpp`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/WaVK8_3MRsCkOR6qn-JNbA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-evn2jdi4wv3arzot56kn.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/502496) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c62b71546fb111511d4326f80512debddda8ad03)."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-10-30 01:37:38,"Code analysis found 2 defects in the diff 502473:
 - 1 defect found by clang-format
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -p layout/base/nsCounterManager.cpp`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/OcXHR44MRP-IsjcXb4Ehdg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-kdmtuvsxhfck2gcueh77.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/502473) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=edfe244a6b820cf9bd90f7a97047b4a56cee2bd0)."
129956,https://phabricator.services.mozilla.com/D129956,Bug 1706346 part 2 - [css-lists] Implement the counter value calculations for 'reversed(<counter-name>)'.  r=emilio,PHID-USER-hdoh7wiodycud62xg7r6,2021-10-30 01:08:23,"FYI, I'm still waiting for a final resolution in https://github.com/w3c/csswg-drafts/issues/6738 but this implements what I think is the consensus so far: last increment dictates the end value + zero-valued increments are ignored."
129856,https://phabricator.services.mozilla.com/D129856,Bug 1738315 - Return to default test value instead of default system value for mail.addr_book.useNewAddressBook. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-10-28 22:05:16,"Okay, thanks. Sorry about the screw-up, I got fooled by the Try server."
129856,https://phabricator.services.mozilla.com/D129856,Bug 1738315 - Return to default test value instead of default system value for mail.addr_book.useNewAddressBook. r=darktrojan,PHID-USER-4wdjal4tjyfedkowehzk,2021-10-28 21:33:47,"Feedback from Geoff:

> that windows test which relies on the old AB window should probably just have the pref hard-wired to false, and the value removed from the manifest, but I didn't think of that at the time"
129806,https://phabricator.services.mozilla.com/D129806,Bug 1738240 - Move division routine out of arena_run_reg_dalloc r=glandium,PHID-APPS-PhabricatorHeraldApplication,2021-11-16 07:44:39,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
129806,https://phabricator.services.mozilla.com/D129806,Bug 1738240 - Move division routine out of arena_run_reg_dalloc r=glandium,PHID-USER-memvjbe2jtpqvootbc2z,2021-11-08 04:41:55,"I think you mean the multiplication on line 2290, yes I can remove that and it simplifies the next patch a lot since the condition can be removed easily.
I'm not sure what you mean by ""invert thing"". And I'm worried you want to remove `q` from the `divide` code above.  I'm fairly certain that code needs `q` to reduce the possible divisions into the small lookup table."
129806,https://phabricator.services.mozilla.com/D129806,Bug 1738240 - Move division routine out of arena_run_reg_dalloc r=glandium,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-11-05 07:00:47,"This comment is not useful anymore because the S option is not supported anymore to change small_max.

So I think we can change this to not use a number multiplied by kQuantum, but just invert thing and use kMaxQuantumClass and check that the array is large enough for that."
129806,https://phabricator.services.mozilla.com/D129806,Bug 1738240 - Move division routine out of arena_run_reg_dalloc r=glandium,PHID-USER-cje4weq32o3xyuegalpj,2021-11-03 06:05:13,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=18a9571dc255762396eb23ffbe20c15ecccea068&selectedTaskRun=T_R67eCBTgWRFt_ZQKuu8A-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
129806,https://phabricator.services.mozilla.com/D129806,Bug 1738240 - Move division routine out of arena_run_reg_dalloc r=glandium,PHID-USER-cje4weq32o3xyuegalpj,2021-10-28 12:07:47,"Code analysis found 1 defect in the diff 501871:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501871) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0f29259d6ec1913775344397db8d3ce33484bfd1)."
129756,https://phabricator.services.mozilla.com/D129756,Bug 1731700 - Port TestEventResult to use MockHitTester. r=hiro,PHID-USER-cje4weq32o3xyuegalpj,2021-10-28 02:18:22,"Code analysis found 2 defects in the diff 501702:
 - 2 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501702) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=defedc50b63f65da1c33dd2ea75319a138c384c7)."
129706,https://phabricator.services.mozilla.com/D129706,Bug 1667913 - discard ephemeron table when resetting incremental GC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-11-15 21:12:42,Updated revision.
129706,https://phabricator.services.mozilla.com/D129706,Bug 1667913 - discard ephemeron table when resetting incremental GC,PHID-APPS-PhabricatorHeraldApplication,2021-10-28 10:31:20,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
129706,https://phabricator.services.mozilla.com/D129706,Bug 1667913 - discard ephemeron table when resetting incremental GC,PHID-USER-ursddouwkmzhineuaj7s,2021-10-28 10:31:19,"Looks good. Is there are test case that can trigger this?

It's possible that we don't do this soon enough if we reset a collection in the Sweep state but I'm not sure."
129706,https://phabricator.services.mozilla.com/D129706,Bug 1667913 - discard ephemeron table when resetting incremental GC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-10-27 18:39:11,Thanks Jon for pointing me directly at this problem. Hopefully it is what caused the latest backout.
129656,https://phabricator.services.mozilla.com/D129656,Bug 1529581 - Add gtests for the race between the same-frame-timer and the pacing-timer. r?bwc!,PHID-USER-cje4weq32o3xyuegalpj,2021-11-03 11:47:32,"Code analysis found 3 defects in the diff 503920:
 - 3 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/503920) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ab8b3e40564c6117eaa797c0e1fb2bb65edaba64)."
129606,https://phabricator.services.mozilla.com/D129606,[devtools] Migrate MDN docs into Sphinx (import images III.),PHID-USER-cje4weq32o3xyuegalpj,2021-10-27 08:08:14,"Code analysis found 1 defect in the diff 501204:
 - 1 defect found by license (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501204) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4c64709688cd7f7770cd382ec22df26b37f9273e)."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-28 13:41:21,Oh that's an interesting suggestion. I don't think design will want that as the `<summary>Learn more</summary>` wants to be inline with the original text instead of a new block. Also the layout-changing aspect of showing/hiding `<details>` is actually undesired in this case as we don't want the modal content's height to change.
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-28 09:14:58,"I looked at how Github has the ""Watch v (123)"" button implemented. Looks like the default caret is hidden and a CSS one is used instead. I was hoping it was just a property value that we could use to switch it around.
{F3105479}"
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-28 09:07:40,"I was wondering if we could instead use `<details>` element here, would that make the code simpler and remove the need to set aria attrs roles ourselves? Or handling the > v < arrows.
Just a suggestion, if it's somehow tricky to get the right behavior I'm ok with this."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-28 09:07:40,r+ with our without the suggestion
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-28 08:49:30,Bump spotlight schema to 1.1.0
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-28 08:28:28,"yes, it's not enforced in any way but I hope Experimenter will be able to help soon."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-28 08:28:28,awesome 👌
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-28 08:23:35,Rebase on central. Correctly size modal accounting for padding
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:48:41,Should I bump this version?
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:48:41,Do we want this backwards compatibility? I suppose safer for any messages that overlap into 95 and we can clean up later.
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:48:41,"I think I understood your comment to mean keep `body` as the 4 main text elements, so I separated out optional/`extra` stuff. Refactoring out a `setText` to use for expanded."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:48:41,Oh.. somehow I've never run into this before. Thanks. Reworking to dynamically append a sub paragraph works around this issue.
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:48:41,">>! In D129556#4213836, @morgan wrote:
> If I launch the dialog and then hit tab, focus lands on ""Not now"", is this expected or should focus first land on the preferred button?

The focus seems to be on the primary button as pressing <enter> without <tab> triggers the automatically focused item."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-27 22:39:56,Rework to expanded to a separate extra object. Also add some size configuration.
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-lmegrwffx67e2xxsnkfv,2021-10-27 15:56:41,"Tested this on MacOS with increase contrast, everything looks good.
One odd thing: If I launch the dialog and then hit tab, focus lands on ""Not now"", is this expected or should focus first land on the preferred button?"
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-27 15:24:31,"maybe we could have some ""extra"" key (in body or maybe elsewhere) where we put all style/interaction related elements that don't serve to the content and we skip just that one. that way we can keep everything in body as this is rendered and is relevant to the content."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-27 15:18:06,"I think that's expected. From MDN

> Paragraphs are block-level elements, and notably will automatically close if another block-level element is parsed before the closing </p> tag. See “Tag omission” below."
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-26 19:05:30,Still WIP. Probably need to actually `await document.l10n.translateElements(nodes)` as it shows scrollbars right now…
129556,https://phabricator.services.mozilla.com/D129556,Bug 1735841 - Update template with hidden text that is shown on a link click for Total Cookie Protection r?andreio,PHID-USER-5tyh6lu2ycegxsjx6542,2021-10-26 19:05:30,"@andreio Not sure if I was doing something wrong with templates, but if this `<span>` was a `<p>` or `<div>`, it would end up outside of the parent `<p>` ?"
129506,https://phabricator.services.mozilla.com/D129506,"Bug 1735484 - avoid crashing in nsRefreshDriver::RemoveImageRequest when mPresContext is null, r=emilio.",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-26 15:47:40,Thanks!
129506,https://phabricator.services.mozilla.com/D129506,"Bug 1735484 - avoid crashing in nsRefreshDriver::RemoveImageRequest when mPresContext is null, r=emilio.",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-26 15:10:35,Can we move the nullcheck into GetDocShell? There are various other callers of `GetDocShell(mPresContext)` that are probably similarly affected.
129506,https://phabricator.services.mozilla.com/D129506,"Bug 1735484 - avoid crashing in nsRefreshDriver::RemoveImageRequest when mPresContext is null, r=emilio.",PHID-USER-cje4weq32o3xyuegalpj,2021-10-26 12:51:24,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ae29a52516d1a517563a1542f205e25609fd0838&selectedTaskRun=CmT2vN8VQhy6BmqzQSLSLQ-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-APPS-PhabricatorHeraldApplication,2021-10-26 02:18:59,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-26 02:18:59,same here
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-26 02:18:59,"Could be
```
#if defined(_WIN32) && !defined(WASM_DONT_EXPORT_FUNCS)
# define FUNC_EXPORT  __declspec(dllexport)
#else
# define FUNC_EXPORT
#endif
```"
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-26 02:18:59,I don't think it's possible to fail this check in the RLBOX_USE_STATIC_CALLS case.
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-26 02:18:59,"I think I've seen this already and asked, but I'll ask again because I don't remember the answer: why not remove the wasm_module_name argument in that case?"
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-cje4weq32o3xyuegalpj,2021-10-26 02:02:00,"NOTE: Documentation was modified in diff 500611

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/d1ea6b38-35fe-11ec-9611-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7o4uq7nynrbbbq2wn2yh,2021-10-26 01:38:00,Undo Interdiff version
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7o4uq7nynrbbbq2wn2yh,2021-10-26 01:36:29,Interdiff version
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-26 01:02:00,"Same as D129455, can you refresh with 95b0e954c9d140a22dfe1755e747ddc132ae82ac and 551fd0e7d8f0349562d4402bc626a689e7ecde4f?"
129456,https://phabricator.services.mozilla.com/D129456,"Bug 1737700 - Update rlbox_wasm2c for fallible sandbox, static linking support r=glandium,bholley",PHID-USER-cje4weq32o3xyuegalpj,2021-10-26 00:26:58,"NOTE: Documentation was modified in diff 500597

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6d6c5b42-35f1-11ec-8d05-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-11-02 18:07:44,Add additional non-Mac bailout in browser.js to avoid window leak on Windows and Linux.
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-11-02 15:08:32,https://treeherder.mozilla.org/jobs?repo=try&revision=7d0c42bbdf4d099a4f366e1cadbd4a73bec9df11
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-11-02 15:08:13,Change setIsEligibleForHandoff to setEligibleForHandoff. The first one was wrong and was causing build issues.
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-11-02 14:26:04,https://treeherder.mozilla.org/#/jobs?repo=try&revision=81126fae54a3f6981b99342b1008a6902126fbe4
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-11-02 14:23:15,Fix lint
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-27 20:31:53,">>! In D129406#4215142, @mstange wrote:
> I'm fine with holding this off until 96, fwiw.

I agree. I was planning on holding off landing this until after the soft freeze. There's no Product requirement that this be in 95 as far as I know."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-27 20:29:39,"I'm fine with holding this off until 96, fwiw."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-27 20:28:10,"OK, if Safari does this per scroll change then I guess this should be OK?

>  If it really is a performance problem, I think we'll find out pretty soon - it should show up pretty clearly in the profiler.

Right, but it's the day before soft freeze and I imagine we want this in 95? :-)

Updating the same activity instead of overwriting it with a new one each time does sound slightly better, but I dunno how much difference it would end up making and I don't want to overcomplicate things if it's not needed.

If you wanted to test this locally with the profiler to see how it compares to the rest of the function (which sadly is already not amazing for perf), the trivial way of doing this is holding down ctrl-tab in a window with a bunch of tabs, and then checking the resulting profile to see where we end up spending time."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-cje4weq32o3xyuegalpj,2021-10-27 20:06:31,"Code analysis found 1 defect in the diff 501534:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/nsMacUserActivityUpdater.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/QSSdpo0HTrSBQntQwUQSVA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-nydbytzrxf6deb2smsdz.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501534) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b4449bcf7c1696dfbad44d80bbf35fda75c5899f)."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-27 19:58:07,">>! In D129406#4214661, @Gijs wrote:
> I don't have an iDevice so can't test this myself (and don't really know much about how ""handoff"" is meant to work).

With this patch, if the user enters the app switcher on their iPhone (e.g. by double-pressing the home button), the handoff URL is shown at the bottom of the app switcher screen and can be tapped to open the iPhone browser.

>>! In D129406#4214817, @harry wrote:
>>>! In D129406#4214661, @Gijs wrote:
>> I do particularly want to note that the `onLocationChange` code is potentially hot and can impact our perf tests, so anything we can do to ensure this is as light-touch as possible (can we perhaps just fetch the current URL info when someone attempts handoff?) is great.
> 
> Unfortunately the Apple APIs don't have an affordance for ""attempting handoff"".

I think `updateUserActivityState` is the API for this. The docs don't say when it is invoked, other than ""AppKit automatically saves user activities it manages at appropriate times."", but my guess is that a handoff attempt will invoke it.

I got the impression that lazily-updated activities are only necessary for things that change *really* frequently, such as scroll positions. My intuition is that creating a new NSUserActivity is lightweight enough to do on every URL change (even hash changes).
If it really is a performance problem, I think we'll find out pretty soon - it should show up pretty clearly in the profiler."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-27 19:43:40,Move schema handling to Cocoa code; change MacUserActivityUpdater to singleton. No performance improvements yet
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-27 18:48:48,">>! In D129406#4214661, @Gijs wrote:
> I do particularly want to note that the `onLocationChange` code is potentially hot and can impact our perf tests, so anything we can do to ensure this is as light-touch as possible (can we perhaps just fetch the current URL info when someone attempts handoff?) is great.

Unfortunately the Apple APIs don't have an affordance for ""attempting handoff"". Handoff is supposed to be this sort of always-present thing that is available instantly despite being synced across devices. That is, there's no wait time for the sync. This is done by Apple constantly updating your iCloud account/Bluetooth data being sent to other devices with the latest Handoff events. Handoff is ready as soon as you pick up those devices.

I'm inclined to think NSUserActivities are pretty lightweight. Some other apps update it much more frequently than location changes. For instance, Safari updates it with your scroll position as you scroll through a page.

With that said, we could maybe improve perf by creating once instance of NSUserActivity when a window is created and then update that instance on every location change, rather than destroying and creating new NSUserActivities.

@mstange, what do you think?"
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-27 18:10:51,"Putting the early return here seems wrong. This will mean that we don't call `updateLocation`, so `MacUserActivityUpdater` and thus the OS keep the ""old"" notion of what the current page was (before the location change). Thus, if I open `https://www.example.com/` and then load a data, blob, about or other non-http/https URI as the toplevel page (or even just switch tabs to such a URI) and then try to hand off, it'll try to hand off the `example.com` URI still. That seems wrong."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-27 18:10:51,"I don't know enough about the Cocoa APIs. I'm looking at this side of things because the `onLocationChange` code this is being added into is effectively hot (it runs for/during page loads, including hash changes and other same-document updates). Do we need to create a new instance of this every time? Can we debounce this in some way to reduce the perf impact? And/or is all of this already super cheap?"
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-27 18:10:51,"If this is intended as a singleton you don't want to call `createInstance`, you want `getService`. (Yes, both appear to work but you really don't want to `createInstance` singletons repeatedly because bad things happen.)

As it is we'll create 1 of these for each window (plus one for the hidden window) if/when the getter is invoked in them. And maybe some other cases (e.g. `webext-panels` loads `browser.js`, too...)

I expect that because you pass a window as an argument into the widget/cocoa code, it'll want to be a singleton/service."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-27 18:10:51,"I noted a few things that don't seem quite right to me. I'll also add that I don't have an iDevice so can't test this myself (and don't really know much about how ""handoff"" is meant to work).

I do particularly want to note that the `onLocationChange` code is potentially hot and can impact our perf tests, so anything we can do to ensure this is as light-touch as possible (can we perhaps just fetch the current URL info when someone attempts handoff?) is great."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-27 14:03:46,"> Does it? I don't really see it. It says ""which lists all the activity types your app supports"" but this could mean ""supports for receiving"", it's not really explicit.

Yeah, fair enough.

> Yes, that would be an option, but it would also mean that handoff won't work at all if Firefox is not installed on the other device. Let's leave that for a future bug.

I think what would happen is that we'd configure Firefox Desktop and Firefox iOS to receive user activities with the ID `com.mozilla.firefox.browsing.webpage`. If no app can receive that ID  (i.e. Firefox is not installed), the system would fall back to apps that can receive `NSUserActivityTypeBrowsingWeb`, which would be any web browser."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-27 14:01:12,"Gijs, could you please take a look at the browser.js changes?"
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-26 21:18:47,"Looks good!

It would probably be good form to request additional review from a browser.js peer for the browser.js change.

testing-exception-other: macOS to iPhone hand-off is not a scenario we can create in a testing environment."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-26 21:13:42,"> Apple's docs suggest that an ID is required to send: https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/Handoff/AdoptingHandoff/AdoptingHandoff.html#//apple_ref/doc/uid/TP40014338-CH2-SW3 (""Specifying an Activity Type"").

Does it? I don't really see it. It says ""which lists all the activity types your app supports"" but this could mean ""supports for receiving"", it's not really explicit.

> but we'll have to re-add one if we ever want to do special handling for Firefox. For example, always opening handed-off links in Firefox on other devices, even if Firefox is not the default browser on that device.

Yes, that would be an option, but it would also mean that handoff won't work at all if Firefox is not installed on the other device. Let's leave that for a future bug."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-cje4weq32o3xyuegalpj,2021-10-26 20:54:33,"Code analysis found 1 defect in the diff 501017:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/nsMacUserActivityUpdater.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/G4hjyydlTTKndRI-aHX7_A/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-frk4diranyg5qrkaaosx.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501017) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6daf09f2f6c4387397e128709c159cdbd95751e0)."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-26 20:29:29,"Apple's docs suggest that an ID is required to send: https://developer.apple.com/library/archive/documentation/UserExperience/Conceptual/Handoff/AdoptingHandoff/AdoptingHandoff.html#//apple_ref/doc/uid/TP40014338-CH2-SW3 (""Specifying an Activity Type"").

However, it looks like we're in a unique situation as a web browser. Receiving devices first look to see if any apps can handle the ID in the sending app's activity. If there are no apps that can handle the sent ID, but the user has an app with the ID `NSUserActivityTypeBrowsingWeb`, then the system will open the user activity in that app. Since we're just sending web pages, we can always use that fallback on `NSUserActivityTypeBrowsingWeb`. So we don't strictly need an ID here, although it's maybe poor form. I'll remove it, but we'll have to re-add one if we ever want to do special handling for Firefox. For example, always opening handed-off links in Firefox on other devices, even if Firefox is not the default browser on that device."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-26 20:29:29,"Looks like it's necessary when using `becomeCurrent`, but not when we just assign userActivity to the window. Looks like I was using two separate ways to activate handoff: assigning it to the window and letting the system handle it based on window focus, and using `becomeCurrent`/`invalidate`. I'm updating this patch to use the automatically managed way."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-26 20:29:10,Address review comments
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,Is the `becomeCurrent` call necessary?
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,"`Get` -> `Update`

also maybe add `for the given window`?"
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,"I think this whole thing could become:

```
  NSUserActivity* userActivity = [[NSUserActivity alloc] initWithActivityType:kBrowsingActivityType];
  userActivity.webpageURL = pageUrl;
  userActivity.title = pageTitle;
  cocoaWin.userActivity = userActivity;
  [userActivity release];
```

The userActivity property setter will release the old property value and retain the new one. And the extra ref  from the alloc should be dropped in this function, with a release once the activity has been assigned to the property."
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,The property holds a strong reference to the NSUserActivity. This is not the right place for an extra release. More on that below.
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,Is the invalidate call needed?
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,Could this be cached with `defineLazyGetter`?
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-sasiqhjk3rmprfyixaj6,2021-10-25 22:50:13,"Is this needed? Could it be in a separate patch, so that this patch is only about ""sending"" and a different bug is about ""receiving""?"
129406,https://phabricator.services.mozilla.com/D129406,Bug 1525788 - Support sending Handoff. r?mstange!,PHID-USER-cje4weq32o3xyuegalpj,2021-10-25 16:25:14,"Code analysis found 1 defect in the diff 500351:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/nsMacUserActivityUpdater.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/FghO1tXSSe63CvI8PbXXEQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-6mzp73frqmfxg2i4wc6i.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/500351) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d171b5b3b27c136029b18ddfbd691b907718bb2f)."
129255,https://phabricator.services.mozilla.com/D129255,"Bug 1737032 - Removed traces of ""remote XUL"". r?gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-25 11:00:24,"This looks great, thanks very much!"
129205,https://phabricator.services.mozilla.com/D129205,Bug 1736017 - Replace MozLocale with Locale in nsLineBreaker.cpp; r=#platform-i18n-reviewers!,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-10-28 14:15:55,"You're right, thanks for catching that!"
129205,https://phabricator.services.mozilla.com/D129205,Bug 1736017 - Replace MozLocale with Locale in nsLineBreaker.cpp; r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-10-28 09:47:24,The old code also compared the script when it's already present. Is this no longer needed?
129205,https://phabricator.services.mozilla.com/D129205,Bug 1736017 - Replace MozLocale with Locale in nsLineBreaker.cpp; r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-10-22 19:30:03,Seems reasonable to me.
129155,https://phabricator.services.mozilla.com/D129155,Bug 1737037 - Switch an assert in FFmpegAudioDecoder from a diagnostic assert to a regular assert. r?bryce,PHID-USER-cje4weq32o3xyuegalpj,2021-10-21 13:06:07,"Code analysis found 134 defects in the diff 499228:
 - 134 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/499228) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5450aec9efca4e32fa3cb855c91b0da534c8f0fa)."
129155,https://phabricator.services.mozilla.com/D129155,Bug 1737037 - Switch an assert in FFmpegAudioDecoder from a diagnostic assert to a regular assert. r?bryce,PHID-APPS-PhabricatorHeraldApplication,2021-10-21 12:56:23,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-17 17:31:01,A minor tweak in requirements in this last change.
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-17 17:30:25,support an empty array as a failure case
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-17 16:13:16,Thank you! Renewing my sign-off.
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-17 16:03:24,nits
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-17 15:44:05,"would you mind to also add the following invalid cases:
- urls with wildcard (given that we already don't accept a path, I think we may need to only test a wildcard added as part of the hostname)
- urls with a user (and password) components
- urls with a search component and no path
- urls with an hash component and no path

I think that these cases should all be already covered by the current version of the `origin` formatter, and so it should be only a matter of adding some additional invalid values to this array, e.g. like the following ones:
```
  for (let invalid of [
    ...
    ""https://user:pass@example.com"",
    ""https://*.example.com"",
    ""https://example.com#test"",
    ""https://example.com?test"",
  ]) {
 ...
```"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-17 15:44:05,"Nit (I'm not going to block this revision on this), I see ""file:/foo/bar"" hasn't been changed into ""file:///foo/bar"""
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-17 15:44:05,"@mixedpuppy Thanks, this revision looks good to me, I'm signing this off as r+wc and adding the testing-approved tag.
The ""with comments"" is mainly about adding the additional invalid values described below 
(the other one is a nit related to the file url, but that is just a nice to have)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-16 20:43:01,review feedback
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 15:50:12,"Before I forget again, I'm reporting back here the comment related to taking the punycode into account that Mat mentioned over Matrix:
> mat: are you handling punycode ? I originally had string != url.origin logic but had to make it slightly more complicated, because URL().origin always return punycode regardless of the original input
> so I had to do this https://github.com/mozilla/addons-linter/pull/4018/files#diff-d2d44630a0f3ec6da29f758240e275b0f7f66c9e1d37aefe84a6b1522f10d99dR130-R134"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 15:09:41,"`Errata Corrige`: @mixedpuppy I just saw your point from todays' standup meeting:
> [shane] read-only: no new logic in any addon manager wrapper class.  Using get/set to pass through is fine.  We want to remove these classes, adding logic in them will cause more effort.

Based on that I would say that instead of what I described in the previous review comment above, we may leave ""validInstallOrigins"" here and instead add an inline comment right above `class AddonWrapper {...}` to mention that we don't want to add any additional methods there and instead we should define them on the `AddonInternal` class and expose them through `AddonWrapper` through this array of properties (maybe also mention a newly filed bugzilla issue that will track removing `AddonWrapper` as a separate future follow up)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"Nit, would you mind to move line 281-287 into a separate test task? (just to make it even more clear that it is meant to test the behavior on MV3 addons and that pref flipped to false)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"I think we may also want to explicitly set this pref to true to make sure this test will still be able to pass if we have to uplift to beta a change to flip it off as a last resort (either at the start of this method, or even better at the start of this test file nearby line 20 along with the MV3 pref)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"It looks that `validInstallOrigins` is the only one in this array that isn't actually a property or getter in the `AddonInternal` object, in practice this still works but it may be surprising because none of the other is a method and our future selves may not be looking here to figure our how the method is exposed.

At a first glance it looks that we may be able to just move `validInstallOrigins` to the `AddonWrapper` class as it is (the only properties of the `AddonInternal` class seems to be `installOrigins` and `manifestVersion` which are both exposed also on the `AddonWrapper` here), and it seems a reasonable change to keep consistency with the other `AddonWrapper`/`AddonInternal` methods."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"Nit, `@param {Object} origins origins ...` => `@param {object} origins A map of origins to validate using the addon installOrigins (keys are arbitrary strings meant to briefly describe the kind of source being validated, values are nsIURI)`."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"{nav,  icon=pencil, name=suggestion:} `@returns {Promise} Rejected when the installation should not proceed.`"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"It looks that @param ... <...> is used only in java docs https://searchfox.org/mozilla-central/search?q=%40param+%3C&path=

for the jsdoc instead the type is inside curly brackers and it comes before the property name: https://searchfox.org/mozilla-central/search?q=%40param++.*+%5C%7B&path=&case=false&regexp=true

And so `@param install <AddonInstall> ...` should be `@param {AddonInstall} install`."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"{nav,  icon=pencil, name=suggestion:} given that we do only really care about the addon property we could make it explicit with something like:
```
* @param {object}       info
* @param {AddonWrapper} info.addon
```"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"{nav,  icon=question-circle, name=question:} I'm not sure I understand the `and checking against site permissions and enterprise policy`

{nav,  icon=pencil, name=suggestion:} I think we may spell the values actually used (given that we didn't change them in a long long time, they may stay in sync over a reasonable amount of time) by adding something like `(expected to be set to ""AMO"", ""local"" or ""other"")` at the end of this inline comment."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"Nit, `URI associated to the principal of the installing source`."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"I can't recall anymore if we discussed this over Matrix and you already told me that in the long run the addons with install_origins in the manifest should bypass or not the third party install prompt even when they are not recommended. 

If they will not bypass the third party install prompt, this inline comment is still slightly our of sync with what the method actually does, and so if that is the case then I feel that we may want to tweak the inline comment a bit more to match that, e.g. something like:
```
Verify whether the addon is allowed to be installed from the given triggering `url` and `install.sourceURI` and if the 3rd party install prompt should be shown.

- Validates `url` and `install.sourceURI` based on the addon install_origins manifest property (optional in MV2 and mandatory in MV3 manifests)
- Bypass the third party install prompt if the addon is recommended 
```

Ignore this comment if they instead should bypass the third party install prompt and `addon.canBypassThirdParyInstallPrompt` is expected to be changed accordingly."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"Nit, technically ""file:/foo/bar"" should actually be ""file:///foo/bar"" (but to be fair `new URL(""file:/foo/bar"")` and `new URL(""file:///foo/var"")` return the same result, on the contrary ""file://foo/bar"" does not).

It does not really make any particular difference for the purpose of this test, in the end any file url would be invalid because of the file protocol (not using the expected syntax for a file url may mainly be confusing for someone looking for file urls all over searchfox)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"Nit, for the sake of helping extension developer that may not be fully aware of the subtle differences between a valid url and a valid origin to fix their manifest.json files, I think it may be helpful if we would include the expected origin string in the validation error, e.g.:
```
  throw new Error(`""${string}"" is not a valid origin, should be set to ""${url.origin}""`);
```

or something like that."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"@mixedpuppy I think @willdurand will mention this in the Ops meeting scheduled for today, but in the meantime I though to report back here what Will replied over Matrix this morning:

> hello, re: https://phabricator.services.mozilla.com/D129105#inline-719959, I am reading that an origin should not have a trailing slash (like, never)? If we stick to this definition, it shouldn't be a problem. The linter uses the URL class for validation, similar to FF. The only thing we'd need is to make sure we never validate an origin in addons-server using the URL validator. There is no extended validation currently, so we're good.

If I'm reading this correctly, that would mean that we may want to strictly check that `string === url.origin` inside this `origin` formatter (which you already did at line 1061-1063).

(I did mention to Will that we were also thinking of hostnames instead of origins or urls, and that we will be discussing and evaluating also that option in the Ops and Team standup meetings today)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-16 14:28:59,"@mixedpuppy follows a new review pass on this patch (just some more small changes requested, plus a few nits that we could also cover while we are here).

Besides these comments (and the pending discussion about hostnames vs. origins), this looks pretty near to be completed and signed off."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-15 21:36:04,add pref and test case
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-15 21:34:26,"This is only required for mv3, and optional for mv2.  I think the right thing is to treat them all the same.  I gave stuart a heads up."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-15 19:23:53,"one more test cases entry with the same xpiUrl, installPrincipal set to PRINCIPAL_COM and expectedState still set to AddonManager.STATE_INSTALLED."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-15 18:55:51,some review comments addressed
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"should we add also one more test for the scenario where ""a test addon with 2 install_origins one for the triggering pricipal and one for the source URI principal and the install succeed from both those principals""?"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"Not related to the patch, just to the communication that will follow it: 

do you know if (besides the blogpost) are we going to explicitly ask recommended extensions authors to update their addon to include the install_origins property?"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"Nitpick (it is just a small typo in a comment, I don't really care too much): typo Otheriwse => Otherwise"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"As I did mention in another review comment, I think that we should make sure that the string the ""origin"" format returns is still exactly the one that can be seen in the manifest (and not the origin that correspond to a full url that may have been set in the manifest)

I'm absolutely open to discuss about that if you have reasons for not agree on that point (I provided my motivations in that comment), but if we agree on that behavior then:
- https://example.com/testing"" would not be a valid value for the origin
- if root.testing.format returns the result of calling ""origin"" formatter on the string, then this could be a good place to assert that the return value for a valid origin string is strictly equal to the original string.

On the contrary ""https://example.com/"" vs. ""https://example.com may still be valid, but we should double-check if we should take that linter issue that I linked in the other comment into account or if we agree that it does not apply to this property."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"as an additional side note, I'm wondering if we should require the string in the `install_origins` property to require the final `/`, apparently for homepage_url Firefox doesn't require that (and the linter doesn't neither) but the AMO frontend does not, see https://github.com/mozilla/addons-linter/issues/4038

In this case it is explicitly an origin even per its manifest key name, and so technically not having a '/' would still make it a valid origin, but there may be technical or practical reasons to keep similar conventions for manifest values that looks like an url.

We have been discussing about this today with Rob and Will, and so I'm also mentioning @willdurand to double-check this for his additional perspective (and in case I'm misinterpreted our future intention for manifest property similar to the homepage_url)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"This is not strictly validating that the string is a valid origin, it is going to turn any url with that origin into the related origin string, which will be technically making an url invalid for the linter to work just fine in Firefox.

To make sure that Firefox will consider invalid what the linter would also consider invalid, I think that we should at least check also that `string === url.origin` and throw otherwise.

As additional nit:
I'm not thrilled of the `url` binding changing type from URL to string, we may avoid that by just do something like:
```
if (!context.checkLoadURL(url.origin)) {
  throw new Error(`Access denied for URL ${string}`);
}

return url.origin;
```"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-11 19:34:53,"@mixedpuppy it looks that the last round of updates have addressed the previous round of review comments, I do have still one doubt related to the behavior of this new ""origin"" format which I like to agreed on. 
(and also one point to double-check if an addons-linter issue we discussed today with Will and Rob does apply or not to this new manifest property).

Besides that, there is a couple more questions (one is actually about communication plans, I'm asking mainly because one detail of the patch make me wonder that)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-11 18:35:07,address review comments
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"it may be worth to also have some more test cases to verify some more corner cases (not strictly in this test task, and only if we think that adding that coverage would allow us to catch regression or to ensure that the behavior is the expected one also in those unlikely corner case, independently from the current actual implementation).

e.g. this comes to my mind at the moment (but I haven't double-checked if they are actually useful to cover something not covered elsewhere):

- a null principal as the triggering principal (e.g. about:blank, which technically is currently blocked earlier in the installation flow, if decide to add it here then in `testAddonInstall` we should take into account that `install.addon` is going to be undefined in that scenario )
- an extension with an invalid install_origin along with one that is valid and match the triggering principal and install source uri
- verify that having an extension with valid install_origins does not make a difference when installing from AMO"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"Nit:

All these calls looks the same besides the actual parameters values.

If it helps to keep the list of test case easier to read (and to add more entries if necessary), maybe we could refactor into an array of test cases and a for look that calls testAddonInstall with the parameters got from the array entry."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"to make this test slightly more realistic, I think that we should also pass `installPrincipal` to AddonManager.getInstallForURL call (as part of the second options parameter):

```
async function testAddonInstall(xpiUrl, installPrincipal, expectState) {
  let expectInstall = expectState == AddonManager.STATE_INSTALLED;
  let install = await AddonManager.getInstallForURL(xpiUrl, {
    triggeringPrincipal: installPrincipal,
  });
  ...
}
```"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,Question: should the install_origins restriction also apply to recommended addons or only to non-recommended unlisted addons?
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"This comment does seem to be stating that an unverified addon may bypass the third party install prompt if it is being installed from one of the install_origins, but looking to the [canBypassThirdParyInstallPrompt](https://searchfox.org/mozilla-central/rev/88cd13997fb0747cdcd78638fc762ff2d75e1fc5/toolkit/mozapps/extensions/internal/XPIDatabase.jsm#955-964) getter that doesn't seem to be the case.

The behavior is actually the one I was expecting ([1]), and so in my opinion we should just adjust the inline comment to state what is the expected behavior for this case.

----

[1]: personally I don't think that arbitrary unverified unlisted addons should bypass the third party install prompt, that would make harder for the users to block the website from keep doing that because, instead of getting a prompt to do it right away with just one click, they would need to go the other way around (by manually adding an expection from about:preferences)"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"Nit, we should update this inline comment to also mention this flow is also going to be used to validate install_origins for unlisted non-recommended extensions"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"Before the call to `install.cancel()` it would be good to emit a log (e.g. using logger.warn), as it may be become useful to investigate future issues that extension developers (or users) may be facing and reporting to us once the addons will start to be using this new manifest property (and its related new install flow).

In general, I think it would be good to also check if there are other part of this ""post download third party checks"" install flow (both for this new scenario and for the pre-existing one related to the recommended extensions) that may use some more logs to make it easier to trace the install flow while investigating issues (e.g. I think it would be good to have a call to logger.info [here where we choose to go for the ""post download third party install checks""](https://searchfox.org/mozilla-central/rev/88cd13997fb0747cdcd78638fc762ff2d75e1fc5/toolkit/mozapps/extensions/AddonManager.jsm#2357)). 

In my opinion the new logs should answer questions like:
- which was the triggering principal that initiated the installation flow?
- is the installation going through the post download thirdy party verification flow?
- which are the url of the installing source and xpi install source URI?"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"Nit, how about passing the url and install.sourceURI as URI instances to `validInstallOrigins` and leave that method to do call `uri.resolve(""/"")` on the URIs?"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"Along with the change to the manifest validation of this ""install_origins"" manifest property, it would be good to add a separate unit test that does just install some test extension temporarily and then assert that the expected manifest validation errors or warnings have been collected."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"NOTE: `FirefoxSpecificProperties` does not allow unrecognized additional properties that are not explicitly listed in this JSONSchema entry.

In practice that means that an addon using this new `install_origins` manifest property is going to be invalid for any Firefox versions that doesn't have the ""install_origins"" definition as part of the JSONSchema data.

And so we may want to also evaluate what we may do about that, e.g.:

- enforce a `strict_min_version` on AMO submission when an addon does have the `install_origins` property in their manifest (e.g. from the addons-linter)

- evaluate if we should do more for older releases that would be around for a longer time (e.g. ESR), e.g. maybe evaluating to uplift to ESR a schema only change to make sure that on ESR FirefoxSpecificProperties manifest validation will not be complain about ""install_origins"" and instead just ignore it"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"I'm thinking that using a new ""format"" value for `install_origins` may be useful to report invalid values that are not going to work in practice to the extension developers that may be installing the extension temporarily.

As an example: ""about:blank"" would be valid from a schema validation perspective, but in practice that is blocked by [this null principal check](https://searchfox.org/mozilla-central/rev/88cd13997fb0747cdcd78638fc762ff2d75e1fc5/toolkit/mozapps/extensions/AddonManager.jsm#2270,2291) from inside `installAddonFromWebpage`, and before we actually get to validate the manifest and get to `_verifyThirdPartyInstall`.

To make sure we should an manifest validation error when the extension developer may be installing the addon temporarily from about:debugging (and also useful to more easily ensure we also do a similar addons-linter validation using an ajv custom formatter specific to this particular manifest field), I propose to change ""format"" here to a new ""installOriginUrl"" method in the FORMAT map defined in Schemas.jsm, which may look more or less like the following:

```
// In Schemas.jsm...

const FORMATS = {
   ...
   
   installOriginUrl(string, context) {
    const valid_url = FORMATS.url(string, context);
    const uri = Services.io.newURI(valid_url);
    if (![""http"", ""https""].includes(uri.scheme)) {
      throw new SyntaxError(`String ${JSON.stringify(string)} must be an http or https url`);
    }
    if (uri.spec !== uri.resolve(""/"")) {
      throw new SyntaxError(`String ${JSON.stringify(string)} must be a origin base url: ${uri.resolve(""/"")}`);
    }
    return valid_url;
  },

  ...
}
```

This formatter would also:
- explicitly check that the install origin urls have an http or https scheme
- explicitly check that the origin url listed in the manifest does not include any url component other than the clean origin url (and suggest what the expected value should be)

how that sounds to you?"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"do we expect to pass more than the two origins we are going to pass to this method?

I'm thinking that instead of an array, this method could get an object as a map of the origins we want to validate (where the key may be used to make it clear to us what that origin represents).

I'm basically picturing either something like this:

```
validInstallOrigins({ triggeringURI, installSourceURI }) {
  ...
}
```

or

```
validInstallOrigins(origins = {}) {
  let { installOrigins, manifestVersion } = this;
  if (!installOrigins) {
    // Install origins are mandatory in MV3 and optional
    // in MV2.
    return manifestVersion < 3;
  }
  for (const [name, url] of Object.entries(origins)) {
     if (!installOrigins.includes(url)) {
       logger.warn(`Addon ${...} Installation not allowed, ${name} ""${url}"" is not included in the Addon install_origins`);
       return false;
     }
  }

  return true;
}
```"
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-11-04 16:48:57,"@mixedpuppy follows a more complete round of review comments related to this revision, along with some questions and details we may want to discuss and agree on to consider this revision fully finalized.

Some of the questions may be easier to discuss synchronously (e.g. over slack/matrix/zoom), and to be honest I think that it may not be unlikely that I may also be missing some context from some other meeting or spec document on this topic where some of them may have been already discussed."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-03 18:26:21,address review comments
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-03 18:25:05,"Yeah and those wont work anyway, since it needs to be an explicit match."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-11-03 18:25:05,"> I think we want a maxItems

We discussed this, it isn't really necessary.  AMO will have a very small limit, like 5, and if we need to expand we can, or we can choose to flag for review if it is more.  Due to that, we decided to leave AMO as the gatekeeper on what the apropriate limit is."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-10-28 18:45:07,can we turn abstract this kind of checks away from AddonManager.jsm e.g. by turning them into a getter or method exposed by AddonWrapper instead?
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-10-28 18:45:07,"wouldn't `url.resolve(""/"")` return us the same without doing string interpolation?

(same for `xpi_origin` with `install.sourceURI` below)."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-10-28 18:45:07,"If I'm not mistaken, [DB_SCHEMA version number](https://searchfox.org/mozilla-central/rev/a9e0a3f5e5f7cde941d419db967997aaa1f06b0f/toolkit/mozapps/extensions/internal/XPIProvider.jsm#130) should be bumped along with changes to the json fields listed here.

+1 on using camel case also for the manifest version field."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-5fjyseoxs2dahs7ryywh,2021-10-28 18:45:07,"@mixedpuppy I haven't looked the test case and the logic behind the checks that are currently in the changes applied to AddonManager.jsm, but I have collected a first round of review comments and some questions and so I'm submitting this part of comments in the meantime."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 11:39:41,I see that public suffix list entries are now allowed and the punycode isn't mandatory anymore so I guess it's just about forbidding wildcards now?
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 11:39:41,Just updated a comment about the restrictions as I learned about recent changes.
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 09:06:21,nit: looks like most if not all other values here are in camelcase so maybe it should be `manifestVersion` (it should be possible because this prop has been added in `XPIInstall.jsm` in this patch)
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 09:06:21,"The specs I am aware of mention the following restrictions:

- wildcards are forbidden
- forbid entries in the public suffix list
 -values should be in punycode version and lowercase

Not sure we need to have all these restrictions here, though."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 09:06:21,"I think we want a `maxItems` here as well, even if the value is high like 50 or 100 (or more). The linter will have a limit as well (very likely smaller than that) but I feel like having some restrictions here would make sense too."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-ezxge6nyolktygxmn66x,2021-10-22 09:06:21,I have a couple comments on the json schema validation and a nit.
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-10-21 20:38:09,Thanks @mkaply
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-t4yzy4mbd2hzmxetsmsb,2021-10-21 19:45:33,">>! In D129105#4195172, @mixedpuppy wrote:
> @mkaply as an FYI sorta...primarily for enterprise policy.  AFAIK, policy should already shortcut before we ever hit this code, but it may be useful if you know more on that.

We have tests so hopefully it will just work. I'll keep an eye on things and test after it goes in."
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-10-21 02:42:57,We'll need a better match here to enforce a scheme+host format
129105,https://phabricator.services.mozilla.com/D129105,Bug 1736902 implement distribution control for 3rd party addon installs,PHID-USER-udrckg4snwyg3bct4zkg,2021-10-21 02:42:57,"@mkaply as an FYI sorta...primarily for enterprise policy.  AFAIK, policy should already shortcut before we ever hit this code, but it may be useful if you know more on that."
129054,https://phabricator.services.mozilla.com/D129054,Bug 1731821: Make NativeLayerRootCA refuse to isolate video layers while mouse is moving.,PHID-USER-wgwiclrzncjlwloxt6mj,2021-10-20 17:10:10,I'm going to associate this with a different bug.
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-cje4weq32o3xyuegalpj,2021-10-21 09:29:25,"Code analysis found 1 defect in the diff 499147:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p toolkit/xre/nsAppRunner.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Ju3BSSMURJKlU5-1petFNg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-e6pjmnt2veuqffkys5pr.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/499147) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d5eef182a773977b5f9bf47f9242d627064b3910)."
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-21 08:46:26,rebase
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-20 18:04:34,Keep skipping test when TabsInTitlebar isn't supported
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-20 10:53:57,Remove media query remmants
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-zp4gy3jjzfehipsktf6x,2021-10-20 10:50:00,">>! In D129004#4192198, @Gijs wrote:
> Oh, and one more thing: can the default we provide on Linux (when the pref isn't overridden by the user) change at runtime (seems like the commit implies the answer is ""yes""), and if so, do we need some kind of notification to frontend when that happens? I don't see one in this patch.

No it doesn't, it depends on window manager, so we can't hard-code it in the binary, but it shouldn't change while Firefox is running."
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-20 10:40:32,"Oh, and one more thing: can the default we provide on Linux (when the pref isn't overridden by the user) change at runtime (seems like the commit implies the answer is ""yes""), and if so, do we need some kind of notification to frontend when that happens? I don't see one in this patch."
129004,https://phabricator.services.mozilla.com/D129004,"Bug 1736518 - Make browser.tabs.drawInTitlebar a tri-state. r=stransky!,Gijs!",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-20 10:39:33,"Code changes look fine; I'm assuming you've done manual testing on the 3 main OSes to doublecheck this doesn't break anything?

It looks like https://searchfox.org/mozilla-central/search?q=moz-gtk-csd-hide-titlebar-by-defaul&path=layout&case=false&regexp=false may need updating in addition to what you have here as you're removing the csd media query?"
128854,https://phabricator.services.mozilla.com/D128854,Bug 1735551 - [devtools] Add a timeout to findNodeFrontFromSelectors. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-04 08:45:00,rebase and address review comments
128854,https://phabricator.services.mozilla.com/D128854,Bug 1735551 - [devtools] Add a timeout to findNodeFrontFromSelectors. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-11-03 07:21:14,rebase and address review comments
128854,https://phabricator.services.mozilla.com/D128854,Bug 1735551 - [devtools] Add a timeout to findNodeFrontFromSelectors. r=ochameau.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-10-21 08:18:56,rebase
128854,https://phabricator.services.mozilla.com/D128854,Bug 1735551 - [devtools] Add a timeout to findNodeFrontFromSelectors. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-10-19 13:45:54,"{nav,  icon=info-circle, name=nitpick:} Note that instead of introducing yet another iframe, you might actually use `findNodeFrontFromSelectors` timeout argument to a low value in order to cover this.
This would actually justify why it is a function argument and not a constant ;)"
128854,https://phabricator.services.mozilla.com/D128854,Bug 1735551 - [devtools] Add a timeout to findNodeFrontFromSelectors. r=ochameau.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-10-19 13:45:54,"Sounds reasonable, even in case some iframes never finished loading. I can easily see that happening!"
128804,https://phabricator.services.mozilla.com/D128804,"Bug 1733631 - [ci] Stop setting 'variants' in the 'job-defaults' section, r?jmaher",PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-10-19 03:26:44,Created a dupe instead of overwriting by accident.
128804,https://phabricator.services.mozilla.com/D128804,"Bug 1733631 - [ci] Stop setting 'variants' in the 'job-defaults' section, r?jmaher",PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-10-19 02:21:26,">>! In D128804#4185921, @jmaher wrote:
> isn't this the opposite of what you are doing in the other revisions?  Or is this the root change and the other revisions depend on this?

Yeah, this is the base change and others will follow that depend on it. It's just getting rid of `variants` in the `job-defaults` section by moving it into every suite that previously didn't have any variants defined. I think defining variants in `job-defaults` is kind of dangerous since it is too easy to add unintended tasks. We should have to spell it out every time."
128804,https://phabricator.services.mozilla.com/D128804,"Bug 1733631 - [ci] Stop setting 'variants' in the 'job-defaults' section, r?jmaher",PHID-USER-mefa72mp4kzwenywt7gj,2021-10-18 21:32:21,isn't this the opposite of what you are doing in the other revisions?  Or is this the root change and the other revisions depend on this?
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-a4fd6usoyx75n6ewpcff,2021-10-20 16:43:57,"do we want a property definition for `type`, or is that omitted intentionally?"
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-t4yzy4mbd2hzmxetsmsb,2021-10-19 18:49:24,"Oh you mean this. Yeah, we should really get this into fluent."
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-t4yzy4mbd2hzmxetsmsb,2021-10-19 18:49:24,"Per the pine rules, connect and connected need to go in a Fluent file.

You should be able to put them in browser/locales/en-US/browser/companion.ftl"
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-t4yzy4mbd2hzmxetsmsb,2021-10-19 18:47:49,Add login.microsoftonline.com to this list as well as www.office.com.
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-t4yzy4mbd2hzmxetsmsb,2021-10-19 18:47:49,">>! In D128754#4188737, @mstriemer wrote:
> This isn't localised unfortunately, I like the idea of us just having strings for the base UI components, but I think it might make sense to look into some better fluent support for those elements first.
> 
> There's also an optimization we can do for once the user clicks the Connect button. The tab we open gets a `pinebuild-oauth-flow` attribute, so we could always show the card when that tab is in focus. But I think that makes sense to be a follow up, or come later in this stack.

These are brand names, so I'm not sure localization is needed."
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-cje4weq32o3xyuegalpj,2021-10-19 16:10:14,"For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/X-YIuI96R8O53EvAscQjmA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-w3jkjzjwhszvzubgrbxi.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

NOTE: Documentation was modified in diff 498245

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/226fee06-30ec-11ec-a0a3-0242ac110004/index.html) for one week.

---

NOTE: Tasks were added or removed in diff 498245.

The following parameter set has differences:

  * [mc-onpush](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/OPsjn5rUTWis2vcWabhmiw/runs/0/artifacts/public/taskgraph/diffs/diff_mc-onpush.txt)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128754,https://phabricator.services.mozilla.com/D128754,"MR2-724 - Part 3: Show a ""connect"" card on domains that we support integrations r?mkaply,hjones",PHID-USER-aeohsr3uj3t3lnpxj4i7,2021-10-19 14:46:15,"This isn't localised unfortunately, I like the idea of us just having strings for the base UI components, but I think it might make sense to look into some better fluent support for those elements first.

There's also an optimization we can do for once the user clicks the Connect button. The tab we open gets a `pinebuild-oauth-flow` attribute, so we could always show the card when that tab is in focus. But I think that makes sense to be a follow up, or come later in this stack."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 09:56:11,"There's [an interesting reftest](https://searchfox.org/mozilla-central/rev/489e82dcc1e5afbe691ff3b1c982382914637e38/layout/reftests/scrolling/scroll-behavior-6.html#120-123) that is scrollBy(0,0) don't clobber previous async scrolls.  Using `|=` operator regresses the reftest. So I did introduce a new flag which is set in the case where of of ShouldCancelAnimationForScrollUpdate calls returns true.  As far as I can tell it won't regress the reftest.

Anyways, I really appreciate the reftest. Thank you kats!"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 06:39:17,"Because out Xray wrapper disallow accessing the member.  I get errors without the wrap()

```
Silently denied access to property ""layersId"": Access to privileged JS object not permitted
```

It seems it happens because I use Array filter function since it comes from [here](https://searchfox.org/mozilla-central/rev/489e82dcc1e5afbe691ff3b1c982382914637e38/js/xpconnect/wrappers/FilteringWrapper.cpp#152) in FilteringWrapper. I don't know other workarounds other than using wrap()."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-21 05:49:41,Thanks! I think another reason to prefer plain mochitests where possible is that they involve less boilerplate code.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-21 05:49:41,"{nav,  icon=question-circle, name=question:} Why is wrap() necessary?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-21 05:49:41,Thanks for investigating. I think it makes sense to be cautious and keep the condition.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 03:56:22,"> I was just thinking the former case.  But yeah, interesting. There are two race conditions where `shouldCancelAnimatino=true` case I can think of;
> 
> 1) the user still keeps touching the touchpad during scrolling

I was confused by the return value of `ShouldCancelAnimationForScrollUpdate`. :)  It returns false if the user keeps touching.  So it runs through this code path.

I also tested in autoscrolling case that is I did expect sholdCancelAnimation=true due to [this CanHandleScrollOffsetUpdate call](https://searchfox.org/mozilla-central/rev/489e82dcc1e5afbe691ff3b1c982382914637e38/gfx/layers/apz/src/AsyncPanZoomController.cpp#5722), but in fact autoscrolling generates an animation, to shouldCancelAnimation is false too.

So my conclusion here at this moment is I am not sure whether we should tweak the sampled offset in the case of `shouldCancelAnimation=true`."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 01:33:19,It worked as expected. I.e. it fails without this fix.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 01:33:19,"Building on mac is still in progress, I will check the behavior once after it finished."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 01:31:17,rewrote the test as a plain mochitest
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:26:10,Not yet ready to be reviewed.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:25:46,Addressed a couple of comments
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,Thanks! Will do.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,"I was just thinking the former case.  But yeah, interesting. There are two race conditions where `shouldCancelAnimatino=true` case I can think of;

1) the user still keeps touching the touchpad during scrolling
2) an animation has been finished when this NotifyLayersUpdated gets called, but it was on-going when we sampled mSampledState

I am not sure 1) case, I will try it in Mac.
For 2) it looks like it would be better to modify the scroll offsets, but there's no clue whether the sampled offsets can be tweaked by the scroll updates as of now. Maybe we could improve it in future."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,"Yeah, you are right. Will fix."
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,"Yes, will fix. Thanks!"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,good catch! This event listener should be a one-shot listener. Will fix.
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-21 00:22:57,"Good question. Maybe we could. I started writing this browser mochitest before I noticed the ""general.smoothScroll.lines.durationMinMS"" pref.

I assume you are concerned that this test case would be also useful on mobile environments but any browser mochtiests don't run there. Yeah, I am also concerned it.  I will try to port this test to a plain mochitest. Thanks for the question!"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=question-circle, name=question:} Does this test do anything that couldn't be done in a plain mochitest?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=question-circle, name=question:} Is this handler going to run repeatedly (and therefore set up multiple `setInterval()` calls), in response to every key press?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=pencil, name=suggestion:} I think the best way to update the `mLayoutViewport` would be:

```
mVisualScrollOffset += aRelativeDelta;
FrameMetrics::KeepLayoutViewportEnclosingVisualViewport(...);
```

(see [ClampVisualScrollOffset](https://searchfox.org/mozilla-central/rev/489e82dcc1e5afbe691ff3b1c982382914637e38/gfx/layers/apz/src/SampledAPZCState.cpp#63) for an example)"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=question-circle, name=question:} Should this be `|=` to make sure it doesn't get set back to `false` during a subsequent iteration of the loop?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=question-circle, name=question:} Should we clear `cumulativeRelativeDelta` if one of the elements of `GetScrollUpdates()` is a non-relative update?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-10-20 23:36:52,"{nav,  icon=question-circle, name=question:}  Out of curiosity, is the condition `!shouldCancelAnimation` here just because we only need the `shouldCancelAnimation=false` case for the STR in this bug, or would something undesirable happen if we ran `UpdateScrollPropertiesWithRelativeDelta` even in the `shouldCancelAnimation=true` case?"
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-20 00:15:52,considered multiple relative scroll updates in a single layer update
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-19 02:31:06,clang-format
128704,https://phabricator.services.mozilla.com/D128704,Bug 1692707 - Shift sampled scroll offsets with the delta rather than clobbering them with the latest one in the case of relative scroll updates. r?botond,PHID-USER-c6de5rnxld25mqp4pngs,2021-10-19 02:10:17,"To be honest, I am less sure whether we should also tweak this `mLayoutViewport` with the delta as well."
128654,https://phabricator.services.mozilla.com/D128654,Bug 1735157: Add AliasSet::RNG r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2021-10-18 08:38:19,Representing the side-effect explicitly does seem more accurate.
128453,https://phabricator.services.mozilla.com/D128453,Bug 1713030 - [puppeteer] Update puppeteer expectation data and launcher tests.,PHID-USER-jp26w7fkaeadar63vok2,2021-11-10 17:19:08,"I've run a lot of try jobs for all launcher tests and these weren't failing anymore. So I thought we can get them marked as passing.

If you disagree we can revert and do it on a separate bug."
128453,https://phabricator.services.mozilla.com/D128453,Bug 1713030 - [puppeteer] Update puppeteer expectation data and launcher tests.,PHID-USER-6oeredp5pcvqrg736rdc,2021-11-10 16:58:17,"{nav,  icon=question-circle, name=question:} Just checking, was it intentional to update the expectation for those 2?"
128453,https://phabricator.services.mozilla.com/D128453,Bug 1713030 - [puppeteer] Update puppeteer expectation data and launcher tests.,PHID-USER-6oeredp5pcvqrg736rdc,2021-11-05 10:22:11,"Just setting ""Request Changes"" since this currently depends on a revision with changes planned. Let's resume the review once we found an agreement with puppeteer folks."
128403,https://phabricator.services.mozilla.com/D128403,Bug 1734705. Avoid calling AcquireFirstMatchingEventInQueue when aMayWait is false.,PHID-APPS-PhabricatorHeraldApplication,2021-10-13 19:43:27,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
128403,https://phabricator.services.mozilla.com/D128403,Bug 1734705. Avoid calling AcquireFirstMatchingEventInQueue when aMayWait is false.,PHID-USER-3nsdy7ooppt7mr6dg6ze,2021-10-13 19:43:27,"On that understanding, this looks fine to me.

I'm not sure Phabricator and Lando will be able to handle it correctly ... but that's up to you to figure out :-)"
128403,https://phabricator.services.mozilla.com/D128403,Bug 1734705. Avoid calling AcquireFirstMatchingEventInQueue when aMayWait is false.,PHID-USER-23vjewznejm4mnldghrh,2021-10-13 19:35:25,"Yep, this intended for the beta branch"
128403,https://phabricator.services.mozilla.com/D128403,Bug 1734705. Avoid calling AcquireFirstMatchingEventInQueue when aMayWait is false.,PHID-USER-3nsdy7ooppt7mr6dg6ze,2021-10-13 19:18:11,"I'm not sure what I'm being asked to review here. The patch didn't apply correctly, presumably because trunk code was already changed by D128094. Is the patch intended for the current beta branch?"
128353,https://phabricator.services.mozilla.com/D128353,Bug 1735481 - Memory64 - White-box tests for m64 bce. r?jseward,PHID-USER-jqou3mp2fdzb7uuohm53,2021-10-20 07:00:26,">>! In D128353#4191537, @jseward wrote:
> Ok.  I assume the test for ""load from constant address does not require base+index addressing""
> is what the `41 8b 47 10               movl 0x10\\(%r15\\), %eax` result checks.

Indeed."
128353,https://phabricator.services.mozilla.com/D128353,Bug 1735481 - Memory64 - White-box tests for m64 bce. r?jseward,PHID-USER-tcf2poxaf3fn3ysnr645,2021-10-20 06:59:31,"Ok.  I assume the test for ""load from constant address does not require base+index addressing""
is what the `41 8b 47 10               movl 0x10\\(%r15\\), %eax` result checks."
128303,https://phabricator.services.mozilla.com/D128303,Bug 1729988: update .arcconfig repo callsign r=bgrins,PHID-USER-tdko64rmgjnotjezaqsa,2021-10-12 21:18:55,"Feel free to get another reviewer if you'd like, or use my rs"
128303,https://phabricator.services.mozilla.com/D128303,Bug 1729988: update .arcconfig repo callsign r=bgrins,PHID-USER-tdko64rmgjnotjezaqsa,2021-10-12 21:18:14,"I can rubber stamp this to the extent that this is the same thing we did on pine a while back, but I don't have context on the request for elm"
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-21 08:59:25,"NOTE: Documentation was modified in diff 499124

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/44b9f374-324c-11ec-840c-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-19 10:14:33,"NOTE: Documentation was modified in diff 498118

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6560fd7e-30c2-11ec-b3bf-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-10-14 17:17:43,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-14 17:17:42,"It would be good to have some guards against accidentally misusing the new copy command (i.e. doing it after updates), but overall the PR is good."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-14 08:47:31,"NOTE: Documentation was modified in diff 496417

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/bd3cf9fa-2cc9-11ec-8978-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-13 19:58:34,">>! In D128253#4172749, @kvark wrote:
>> We already have shader based copy for the texture upload code paths. We need it because when moving a multitude of small items (like glyphs) issuing a blit per item is super expensive on ANGLE and on some android devices. It doesn't take a lot of them for the overhead to be large unfortunately. When we switched from blits to draw calls on windows and android we saw pretty large improvements.
> 
> Right. I have no doubt about uploading many small things.
> But here this PR is about copies. Are you planning on copying individual glyphs? I assumed you'd only be copying whole texture cache pages.

Yes, each item is individually allocated and so they are individually moved from a texture to another. 1 image = 1 item but laso 1 glyph = 1 item."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-13 19:31:42,"> We already have shader based copy for the texture upload code paths. We need it because when moving a multitude of small items (like glyphs) issuing a blit per item is super expensive on ANGLE and on some android devices. It doesn't take a lot of them for the overhead to be large unfortunately. When we switched from blits to draw calls on windows and android we saw pretty large improvements.

Right. I have no doubt about uploading many small things.
But here this PR is about copies. Are you planning on copying individual glyphs? I assumed you'd only be copying whole texture cache pages."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-13 18:37:43,"NOTE: Documentation was modified in diff 496105

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/adca63b6-2c53-11ec-80fb-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-13 14:54:50,"That makes sense, thanks!"
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-13 14:54:50,"So the ordering is implicitly assumed to be followed by the caller? Ideally, we'd have some asserts to guard against invalid use.
Also, consider moving the `copies` field higher up in the struct, to match the ordering."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-13 14:54:50,"When answering questions, please mark them as Done. I can't do this from my side, and it always iterates through them. So when I want to see ""what else to answer"", it erroneously shows me old questions."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-13 14:06:19,"We don't resolve ordering, the copies are always applied first. I pondered whether to do something more generic to handle things like you describe, but it's a lot more complicated and I don't see a reason to need it for the texture cache. That's not to say that we can't do copies later, other code can use the shader wherever/whenever it makes sense, but the texture cache should decide where things are early and not change it in between reads/writes otherwise we are going to get into a lot of trouble for no gain. Our code is articulated around the idea that something is one place during the frame, for example an item has one uv rect handle.

I'll add a comment here to make the ordering and intent a bit more explicit."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-13 14:06:19,Yeah I did that in the patch that introduces the cs_copy shader. I'm a bit lazy and I'd rather not auto-bitrot myself since the result is the same at the end of the patch queue.
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-13 14:06:19,"Yes, that's a bit of a consistency thing. In euclid all rects (and as a rule of thumb most things of the same size or larger) are passed by reference and I try to do the same in WebRender although I don't get out of my way to change the code when it is already written or bother people with it.

The C++ guidelines say that POD things that are smaller than two size_t should be passed by value, clippy warns when a Copy type 32 bits or smaller is passed by reference (setting can be overridden), and has another warning for things that are larger than 256 byes passed by value which is way too large but I suspect that they had to be conservative here to avoid warnings everywhere on everyone's code, and how much overhead people are willing to take for convience varries.

Anyway, personally I settled on 16 bytes as a rule of thumb. It's not big but if your function takes multiple of them, the amount of stack copying adds up whereas passing them by reference just uses the available registers. It's a bit of a gray area, my rule of thumb could have been ""strictly superior to 16 bytes"" but at this point I've written too much code that follows that rule to want to change it."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-13 14:06:19,">>! In D128253#4168425, @kvark wrote:
> Aside from the notes below, I'm also curious why we need a shader-based copy at all. If we are doing it 0 times on average and just a couple of times in the worst case, then we shouldn't go this fancy.

We already have shader based copy for the texture upload code paths. We need it because when moving a multitude of small items (like glyphs) issuing a blit per item is super expensive on ANGLE and on some android devices. It doesn't take a lot of them for the overhead to be large unfortunately. When we switched from blits to draw calls on windows and android we saw pretty large improvements. 

This code path can also lead to moving a lot of tiny glyphs at once although less frequently than we do for uploads since it only happens after we have allocated enough to need more than one texture (it's not the frequency that matters, but whether or not it will cause eventual janks).
We could tune this in a followup to do blits if the number of items is small and a draw call otherwise. I didn't bother for the initial implementation but if we think that would make a difference I then 👍 ."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-12 18:00:29,"NOTE: Documentation was modified in diff 495593

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b2401974-2b84-11ec-af62-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-12 17:52:49,any reason to not just do `RenderStats::default()`?
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-12 17:52:49,"how do we resolve the ordering? E.g. if the user of texture cache updates a part of it, then issues a copy from it, then updates some destination part of it. Would we totally lose this order once we fill `TextureUpdateList`?"
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-12 17:52:49,nit: We shouldn't accept a reference if all we do is copy it anyway. Unless this is done for consistency with other functions :)
128253,https://phabricator.services.mozilla.com/D128253,Bug 1711477 - Add support for copying from a cache texture to another. r=#gfx-reviewers,PHID-USER-o4cl5kbvy3o7ije52awy,2021-10-12 17:52:49,"Aside from the notes below, I'm also curious why we need a shader-based copy at all. If we are doing it 0 times on average and just a couple of times in the worst case, then we shouldn't go this fancy."
128203,https://phabricator.services.mozilla.com/D128203,Bug 1735331 - Make compacttheme.css #navigator-toolbox overrides more specific. r=Itiel,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-13 12:43:27,adding aero basic
128203,https://phabricator.services.mozilla.com/D128203,Bug 1735331 - Make compacttheme.css #navigator-toolbox overrides more specific. r=Itiel,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-13 12:41:42,">>! In D128203#4170205, @Itiel wrote:
> What about this one?
> https://searchfox.org/mozilla-central/rev/2c4b830b924f42283632b70f39a60fd36433dd4d/browser/themes/windows/browser-aero.css#326

Good catch!"
128203,https://phabricator.services.mozilla.com/D128203,Bug 1735331 - Make compacttheme.css #navigator-toolbox overrides more specific. r=Itiel,PHID-USER-sqzi3myw3ybsofxmewmp,2021-10-13 08:06:59,"What about this one?
https://searchfox.org/mozilla-central/rev/2c4b830b924f42283632b70f39a60fd36433dd4d/browser/themes/windows/browser-aero.css#326"
128153,https://phabricator.services.mozilla.com/D128153,Bug 1735260 - Remove unused PAINT_BUILD_LAYERS_TIME metric.,PHID-APPS-PhabricatorHeraldApplication,2021-10-12 05:12:27,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2022-04-21 21:58:28,"@falguniislam12 resigning as reviewer because this has sat for a while, feel free to add me if you need future reviews."
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-nurr42wcnlkjkwbgnhp2,2022-03-26 00:35:07,"Hi Amy, 
in this file 'browser/components/newtab/content-src/components/TopSites/_TopSites.scss' , after line 343 there should be a **vertical-align: middle;**  in order for the site to look like the Figma file."
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2022-01-04 16:51:50,">>! In D128103#4363403, @amy wrote:
> `./mach npm run bundle --prefix=browser/components/newtab` should be ran on this patch, thank you

Hello @amy  thank you for your review, I would update my patch next monday."
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-12-16 22:37:58,"`./mach npm run bundle --prefix=browser/components/newtab` should be ran on this patch, thank you"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-12-15 22:26:23,`./mach npm run bundle --prefix=browser/components/newtab` needs to be ran 1 last time so this selector updates then this is good to land. Thanks for all your hard work. 🙂
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-12-10 22:42:00,">>! In D128103#4344684, @amy wrote:
> Hi there! Apologies for the delayed response. This is looking good, just a couple of sass-lint errors I noticed when I ran new tab tests. (`npm run testmc --prefix browser/components/newtab`)

Hello @amy  thank you very much for your review and I updated my patch"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-12-10 20:05:17,sass-lint error: Strings must use single quotes
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-12-10 20:05:17,sass-lint error: Pseudo-elements must start with double colons.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-12-10 20:05:17,"Hi there! Apologies for the delayed response. This is looking good, just a couple of sass-lint errors I noticed when I ran new tab tests. (`npm run testmc --prefix browser/components/newtab`)"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-12-01 13:59:17,">>! In D128103#4268929, @amy wrote:
> Hi @falguniislam12, it looks like you installed the dependencies okay but are trying to run new tab from the `browser/components/newtab` directory.
> 
> if you use the parentheses `(cd browser/components/newtab && ../../../mach npm install)` it allows you to install the dependencies without navigating to that folder. 
> If you cd back to the root directory of mozilla-central (`cd ../../..`) you should be able to run `./mach npm run bundle --prefix=browser/components/newtab && ./mach build && ./mach run`
> 
> However, it looks like it was sorted out because the 3 additional css files are here. I'll be able to give this another review in the next day or so. 🙂 

Hello @amy  I think I had updated as you suggested me"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-11-17 15:06:43,">>! In D128103#4268929, @amy wrote:
> Hi @falguniislam12, it looks like you installed the dependencies okay but are trying to run new tab from the `browser/components/newtab` directory.
> 
> if you use the parentheses `(cd browser/components/newtab && ../../../mach npm install)` it allows you to install the dependencies without navigating to that folder. 
> If you cd back to the root directory of mozilla-central (`cd ../../..`) you should be able to run `./mach npm run bundle --prefix=browser/components/newtab && ./mach build && ./mach run`
> 
> However, it looks like it was sorted out because the 3 additional css files are here. I'll be able to give this another review in the next day or so. 🙂 

Ok thank you very much @amy  for guiding me 🙂 I had learn a lot of new things."
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-11-16 23:22:06,"Hi @falguniislam12, it looks like you installed the dependencies okay but are trying to run new tab from the `browser/components/newtab` directory.

if you use the parentheses `(cd browser/components/newtab && ../../../mach npm install)` it allows you to install the dependencies without navigating to that folder. 
If you cd back to the root directory of mozilla-central (`cd ../../..`) you should be able to run `./mach npm run bundle --prefix=browser/components/newtab && ./mach build && ./mach run`

However, it looks like it was sorted out because the 3 additional css files are here. I'll be able to give this another review in the next day or so. 🙂"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-11-12 15:42:20,">>! In D128103#4229301, @amy wrote:
> @falguniislam12 did you have any trouble installing the dependencies? We have to bundle the css to land any changes to the .scss file.

Hello @amy I am having some problem installing the dependencies.

{F3175287}

{F3175286}"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-11-02 14:48:04,@falguniislam12 did you have any trouble installing the dependencies? We have to bundle the css to land any changes to the .scss file.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-25 19:16:31,"Hi there,

It looks like you might be missing the dependencies. https://firefox-source-docs.mozilla.org/browser/components/newtab/docs/index.html#prerequisites

Try running this command:
`(cd browser/components/newtab && ../../../mach npm install)`

And then:
`./mach npm run bundle --prefix=browser/components/newtab && ./mach build && ./mach run`"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,I had added .grey-title where I had uses some parent selector and Thank you very much for your recommended resources.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,I had removed unused styles.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,Hello @amy I had used pseudo class styles .
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,Removed unnecessary lines.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,I had use 13px in the font as you suggest me. But I am a bit confused about the firefox icon?
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-afwkybkpczqmzp2rl7oh,2021-10-24 12:20:17,">>! In D128103#4189365, @amy wrote:
> Are you having trouble running `./mach npm run bundle --prefix=browser/components/newtab` locally? This patch does not have the additional 3 CSS files I mentioned earlier, which means the changes made in `_TopSites.scss` have not been bundled into the CSS. Unfortunately, we cannot land the patch without the bundled CSS.
> 
> Running new tab locally will also allow you to see the effects of the changes you make to `_TopSites.scss`. Please feel free to ask questions if any of this is confusing.
> 
> https://firefox-source-docs.mozilla.org/browser/components/newtab/docs/index.html#building-assets-and-running-firefox

Hello @amy  thank you very much for review actually when I try to run  `./mach npm run bundle --prefix=browser/components/newtab` locally it is showing me this error

{F3098634}"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-19 17:40:53,"{F3089525}

In the spec, the title and the icon are positioned in the upper left corner. Positioning the title as `absolute` and setting `inset-block-start` and `inset-inline-start` as `0` places it there while respecting text direction.

https://css-tricks.com/building-multi-directional-layouts/#logical-positioning-properties"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-19 17:40:53,"Unfortunately, this breaks things visually. When recommending `position: absolute` I was referring to the position of the entire title, not just the icon. Please remove this.

{F3089387}"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-19 17:40:53,"Are you having trouble running `./mach npm run bundle --prefix=browser/components/newtab` locally? This patch does not have the additional 3 CSS files I mentioned earlier, which means the changes made in `_TopSites.scss` have not been bundled into the CSS. Unfortunately, we cannot land the patch without the bundled CSS.

Running new tab locally will also allow you to see the effects of the changes you make to `_TopSites.scss`. Please feel free to ask questions if any of this is confusing.

https://firefox-source-docs.mozilla.org/browser/components/newtab/docs/index.html#building-assets-and-running-firefox"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-13 18:13:25,"We also need to remember to include the Firefox icon next to the title like in the design spec.

One way we might achieve this is by utilizing the [pseudo class](https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes) `::before`. Looking around the code base, it seems that similar designs use `chrome://branding/content/icon16.png` so we'll give that a try.

Something like:
```
    &:before {
      background: url('chrome://branding/content/icon16.png') no-repeat;
      content: """";
      display: inline-block;
      height: 16px;
      margin-inline-end: 7px;
      width: 16px;
    }
```
Might work.

We'll also need to think about moving the title to the upper left of the modal window like in the design. Perhaps experimenting with `position: absolute` could be helpful there?"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-13 18:13:25,"This property is not taking effect because it is being overwritten by a CSS rule with more [specificity](https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity). We can fix this by also combining the `.grey-title` class, the [parent selector](https://sass-lang.com/documentation/style-rules/parent-selector) in SASS comes in handy here.

{F3080011}"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-13 18:13:25,"Sorry for the confusion, but the red box is not literal. It is an annotation to demonstrate what area in the design this patch is to address. Please remove the border, thank you!"
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-13 18:13:25,"To see and test your changes on the new tab page you will need you will have to bundle the CSS. Run `./mach npm run bundle --prefix=browser/components/newtab`. More information [here](https://firefox-source-docs.mozilla.org/browser/components/newtab/docs/index.html#for-js-jsx-sass-or-css-files).

When ran, it will automatically update 3 additional CSS files:
`browser/components/newtab/css/activity-stream-linux.css`
`browser/components/newtab/css/activity-stream-mac.css`
`browser/components/newtab/css/activity-stream-windows.css`

This will mean that it bundled correctly and those files should also be included in this patch."
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-2unm6j7c36hylplkvkb6,2021-10-12 06:36:54,Dropping myself & Marco from the reviewers as Amy's good here.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-11 18:22:08,This change is not necessary for this bug.
128103,https://phabricator.services.mozilla.com/D128103,Bug 1709204 : shortcut modal- Implement Firefox favicon to dialog title,PHID-USER-4fh3c5ph4nnxv4hjbtdh,2021-10-11 18:22:08,"We would like to not hide the title for this bug. We're looking to update the styles per the spec area annotated by the red box. :-)

{F3070311}

The font-size should decrease to about `13px` with a Firefox icon inline next to it."
128053,https://phabricator.services.mozilla.com/D128053,Bug 1733757 - Update to Glean v42.0.1. r?Dexter,PHID-USER-5n53enyk6ypp57nprnbr,2021-10-11 10:34:43,try run on android tests is green: https://treeherder.mozilla.org/jobs?repo=try&revision=e733a231635b49243ca14d554353b6964fde897f
128053,https://phabricator.services.mozilla.com/D128053,Bug 1733757 - Update to Glean v42.0.1. r?Dexter,PHID-USER-vhs2vlwfgpzbebf5q35k,2021-10-11 10:30:29,Tests are in the Glean SDK repo.
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-USER-cje4weq32o3xyuegalpj,2021-10-11 19:01:21,"Code analysis found 2 defects in the diff 494297:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/494297) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d3ec1505c75ab1296c7c628305c06ab41229999f)."
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-10-11 18:47:50,fixed clang-tidy lint in part 1
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-USER-cje4weq32o3xyuegalpj,2021-10-11 18:14:16,"Code analysis found 2 defects in the diff 494264:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/494264) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2d78c6b89b16fbccefc4e67e31a269ed50c122e6)."
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-10-11 17:32:38,"{nav,  icon=thumbs-up, name=praise:} Ah, right. It's better to `return goodSpace` here. Will Fix."
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-USER-dn2p6nmnntc3pcwsvrhy,2021-10-11 02:57:04,"it is better to use `return goodSapce` instead of `needForwardSearch = false;` then, remove `if (needForwardSearch)`. It is up to you."
128003,https://phabricator.services.mozilla.com/D128003,Bug 1734792 Part 2 - Remove NS_LINEBREAKER_NEED_MORE_TEXT from the logic where break only at ascii spaces. r?m_kato,PHID-APPS-PhabricatorHeraldApplication,2021-10-11 02:54:36,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
127953,https://phabricator.services.mozilla.com/D127953,Bug 1734834 - Show MR2 upgrade dialog on windows 7 r?andreio,PHID-USER-wbnyz3tcqayarugxsdd2,2021-10-08 13:27:10,lgtm!
127902,https://phabricator.services.mozilla.com/D127902,Bug 1734740 - Retain spatial tree across display lists,PHID-USER-xb3xac3u7xrluxe37gts,2021-10-10 19:51:01,"Yup, updated so that it just sets the pipeline_id of the invalidated node to be invalid, so we can see that during debugging."
127902,https://phabricator.services.mozilla.com/D127902,Bug 1734740 - Retain spatial tree across display lists,PHID-USER-qxrsus6uoqvba6iltxyr,2021-10-08 12:29:35,Let's either do the debugging stuff or remove `nodes_to_free` if it is unused.
127752,https://phabricator.services.mozilla.com/D127752,Bug 1734505 - Add Feature::WINDOW_OCCLUSION,PHID-APPS-PhabricatorHeraldApplication,2021-10-08 12:30:59,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
127648,https://phabricator.services.mozilla.com/D127648,Bug 1734087 part 2 - Add getExceptionInfo testing function and tests. r?sfink!,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-10-07 23:06:48,Thanks!
127598,https://phabricator.services.mozilla.com/D127598,Bug 1728276 - Wait for iframe to load before adding calendar item description to it. r=mkmelin,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-10-06 00:07:38,Added a comment.
127498,https://phabricator.services.mozilla.com/D127498,Bug 1733975 - Remove unused LayerTransformRecorder and LayerTransforms.,PHID-APPS-PhabricatorHeraldApplication,2021-10-04 23:53:15,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
127498,https://phabricator.services.mozilla.com/D127498,Bug 1733975 - Remove unused LayerTransformRecorder and LayerTransforms.,PHID-USER-cje4weq32o3xyuegalpj,2021-10-04 22:42:58,"Code analysis found 1 defect in the diff 490967:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/490967) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7c9cb945bec771c026302f6f773ba21738c18e99)."
127498,https://phabricator.services.mozilla.com/D127498,Bug 1733975 - Remove unused LayerTransformRecorder and LayerTransforms.,PHID-USER-cje4weq32o3xyuegalpj,2021-10-04 22:40:03,"Code analysis found 1 defect in the diff 490968:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/490968) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8d367d082378d31f0068fac0d16206601c408866)."
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-o6ejrh2keak2abjiace7,2021-11-05 12:48:47,Set testing-approved on my own. This patch contains tests.
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-APPS-PhabricatorHeraldApplication,2021-11-05 06:22:45,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-cje4weq32o3xyuegalpj,2021-11-01 13:47:27,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=37227935b17ab051b813f109d96186fc38c4e4d7&selectedTaskRun=HZ9-EJ1lQDOfDwNu2v-lLw-0) failed, but we could not detect any issue.
Please check this task manually.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-o6ejrh2keak2abjiace7,2021-10-29 08:11:13,And here.
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-o6ejrh2keak2abjiace7,2021-10-29 08:11:13,And here.
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-o6ejrh2keak2abjiace7,2021-10-29 08:11:13,This one is also nice.
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-o6ejrh2keak2abjiace7,2021-10-29 07:35:00,`EnumTest::size` changes return type from `uint8_t` to `size_t` and suddenly `ASSERT_EQ` wasn't happy at all.
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-28 02:29:47,shouldn't there be one bit set here?
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-10-28 02:29:47,Is this fixing some warnings?
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 08:12:59,"Code analysis found 1 defect in the diff 491093:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/491093) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc78993bcfa9b774acfd4522f3696f651bea4821)."
127448,https://phabricator.services.mozilla.com/D127448,Bug 1733963 - Part 2: Add BitSet tests. r=glandium!,PHID-USER-cje4weq32o3xyuegalpj,2021-10-04 15:17:07,"Code analysis found 1 defect in the diff 490768:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/490768) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=abd605fc34f4aa960441a3500fe15923fd1c4031)."
127398,https://phabricator.services.mozilla.com/D127398,Bug 1733781 - Fix test_ext_webRequest_basic.html timeout failures. r?mixedpuppy!,PHID-APPS-PhabricatorHeraldApplication,2021-10-06 14:25:16,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
127398,https://phabricator.services.mozilla.com/D127398,Bug 1733781 - Fix test_ext_webRequest_basic.html timeout failures. r?mixedpuppy!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-10-04 18:41:24,"Marking as Plan Changes, the try push does show that the test can still fail in this form (apparently not for a timeout, but for an additional unexpected favicon.ico request, despite the `ignore: [""favicon.ico""]` added to that test case in this patch):

The link to the try push is in  https://bugzilla.mozilla.org/show_bug.cgi?id=1733781#c6

I'm going to dig more into it."
127348,https://phabricator.services.mozilla.com/D127348,Bug 1733746 - Use double backticks for code formatting consistently. r=tnikkel,PHID-USER-cje4weq32o3xyuegalpj,2021-10-13 22:02:26,"Code analysis found 1 defect in the diff 496257:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

NOTE: Documentation was modified in diff 496257

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/9e03457a-2c70-11ec-bcda-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/496257) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=082ca7e37a37af39079be3b3ffb7292216f95ea8)."
127348,https://phabricator.services.mozilla.com/D127348,Bug 1733746 - Use double backticks for code formatting consistently. r=tnikkel,PHID-USER-cje4weq32o3xyuegalpj,2021-10-02 05:53:49,"Code analysis found 1 defect in the diff 490416:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 490416, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/901b88a4-2343-11ec-8984-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/490416) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6b9d82172ab680dac097f7fec903167dbaba25b8)."
127348,https://phabricator.services.mozilla.com/D127348,Bug 1733746 - Use double backticks for code formatting consistently. r=tnikkel,PHID-USER-n65mahsof3iw653q75na,2021-10-02 03:38:21,Single backticks appear to render as italics in RST.
127298,https://phabricator.services.mozilla.com/D127298,Bug 1733655 - wasm: Update wasm-smith for exception-handling support. r?decoder,PHID-USER-lxlcyducysfw2sxwoi26,2021-10-04 08:39:33,Thanks for working on this!
127248,https://phabricator.services.mozilla.com/D127248,"Bug 1733289 - The JS API name is 'anyfunc', not 'funcref'. r?rhunt",PHID-USER-cje4weq32o3xyuegalpj,2021-10-04 07:41:02,"Code analysis found 3 defects in the diff 490556:
 - 3 defects found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/wasm/WasmJS.cpp js/src/wasm/WasmValType.h js/src/wasm/WasmValType.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/NW2pggDsQYSeU1aX5NwwGg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-u3abdvh64cl27g35r5u4.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/490556) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=977652eeb8c499dd93374d155c41dd77d77dc116)."
127248,https://phabricator.services.mozilla.com/D127248,"Bug 1733289 - The JS API name is 'anyfunc', not 'funcref'. r?rhunt",PHID-USER-gtnus4xqfx7yww7kwaj7,2021-10-01 16:33:53,Thanks for cleaning this up.
127198,https://phabricator.services.mozilla.com/D127198,"Bug 1724962, when the uitour highlight opens from the show how button on the session restore infobar, also highlight the restore session option from the history menu when it is opened, r=gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-01 21:00:40,Do you need the `node` truthy-check here? I assumed that `aExpectedId` is never undefined/null so it's OK to just rely on the `?.` to deal with the null/undefined case...
127198,https://phabricator.services.mozilla.com/D127198,"Bug 1724962, when the uitour highlight opens from the show how button on the session restore infobar, also highlight the restore session option from the history menu when it is opened, r=gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-01 21:00:40,"So, r=me. However, I did notice that (at least on macOS) it isn't possible to hover the ""Restore Previous Session"" item underneath being highlighted in the subview, while it *is* possible to hover the ""History"" item in the main view. I... have no idea why this is, but it's not great... We'll probably want a follow-up on that? Or as you said elsewhere, perhaps we should just rewrite this to use ""real"" focus..."
127198,https://phabricator.services.mozilla.com/D127198,"Bug 1724962, when the uitour highlight opens from the show how button on the session restore infobar, also highlight the restore session option from the history menu when it is opened, r=gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-01 12:53:17,"I think this condition can be simplified to `aExpectedId == node?.closest(""panelview"")?.id`, right? If not, can you add a code comment about why we need to re-run `getElementById` here?"
127198,https://phabricator.services.mozilla.com/D127198,"Bug 1724962, when the uitour highlight opens from the show how button on the session restore infobar, also highlight the restore session option from the history menu when it is opened, r=gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-10-01 12:53:17,"Unfortunately this doesn't quite work right for me. If I follow these steps:

1. start tour to highlight history item
2. click history item
3. close the panel, either by clicking outside it or by clicking the ""restore previous session"" item

the highlight stays on-screen despite the hamburger menu closing.

I believe this is because this code https://searchfox.org/mozilla-central/rev/eecd2dd4ba630bea4ce103623a4bfb398065b64b/browser/components/uitour/UITour.jsm#1528-1543 hides ""annotations"" (the highlight, in this case) when the panel closes, but it checks if the highlighted element is still the same as when things started. Because we don't update that information, there is a mismatch there (we started with highlighting the history item, and now we're highlighting the restore previous session item) and as a result we don't hide the highlighter, which is bad."
127147,https://phabricator.services.mozilla.com/D127147,"MR2-840 - Use div for quickaction styling, shrink icons r?mstriemer!",PHID-USER-aeohsr3uj3t3lnpxj4i7,2021-10-01 16:08:44,"Would be nice for these to be 24px but 20px seems to fit within the old bounds of the visible image. 24px went right up to the border, I think"
127147,https://phabricator.services.mozilla.com/D127147,"MR2-840 - Use div for quickaction styling, shrink icons r?mstriemer!",PHID-USER-aeohsr3uj3t3lnpxj4i7,2021-10-01 16:08:44,I was having trouble centering the images and resorted to flexbox which seems a bit easier
127147,https://phabricator.services.mozilla.com/D127147,"MR2-840 - Use div for quickaction styling, shrink icons r?mstriemer!",PHID-USER-aeohsr3uj3t3lnpxj4i7,2021-10-01 16:08:44,These were 32px before
127147,https://phabricator.services.mozilla.com/D127147,"MR2-840 - Use div for quickaction styling, shrink icons r?mstriemer!",PHID-USER-aeohsr3uj3t3lnpxj4i7,2021-10-01 16:08:44,"Thanks, I think we can tweak it a bit to remain a bit closer to the old version. If this looks good on your end I think it's good to go"
127097,https://phabricator.services.mozilla.com/D127097,Bug 1733352 - Part 2: Move IcuLocale calls from SpiderMonkey to mozilla::intl. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-10-08 15:59:37,Rebase and address review comments
127097,https://phabricator.services.mozilla.com/D127097,Bug 1733352 - Part 2: Move IcuLocale calls from SpiderMonkey to mozilla::intl. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-30 15:08:48,"{nav,  icon=thumbs-up, name=praise:} Thanks for the NullTerminatedString function, this was bothering me in the back of my mind."
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-10-11 07:04:21,"Don't wait for ""load"" before `SpecialPowers` use, and add focus listener after `proxy.close()` to avoid a temporary."
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-10-07 08:32:15,"`close()` [does queue a task](https://html.spec.whatwg.org/multipage/window-object.html#dom-window-close), so indeed the ""focus"" event will not be dispatched during `close()`.

I wonder whether you prefer to await the `switch_toplevel_focus_for_window()` response after awaiting the ""focus"" event because you expect the ""focus"" event before `switch_toplevel_focus_for_window()` responds?
That's not necessarily the case, and I expect not in the current implementation because `switch_toplevel_focus_for_window()` [queues a task](https://searchfox.org/mozilla-central/rev/a9ef6ad97d2d5f96d5ed51eda38f1a02700ccff7/dom/base/nsFocusManager.cpp#2925) to effect the focus change.

Or perhaps you are just wanting to assert immediately after focus is received, like above.  I'm not aware of any benefit from asserting earlier.
Here the assert immediately before `await promise_enumerate` provides logging to confirm everything else has behaved as expected, if `promise_enumerate` does not resolve.

Would you be happy with this?
```
  proxy.close();
  await Promise.all([
    promise_event(window, 'focus'),
    switch_toplevel_focus_for_window(window),
  ]);
  assert_true(document.hasFocus(), 'document.hasFocus() after focus');
```"
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-10-07 08:32:15,"The assert is not necessary to test what this test intends to test, but it does provide some logging should this test fail. If `promise_enumerate` settles early, then it may be helpful to know that focus was not on this window at the time of the `enumerateDevices()` call.  Such focus changes might result if there is user interaction on the OS while running the test.  The assert would not catch all such cases.  I guess another assert before the 'pending' assert would provide more assurance, but still not necessarily in cases of brief focus.  Moving the existing assert earlier would provide less assurance.

On failure, the message is currently ""assert_false: document.hasFocus() after blur expected false got true"".  The diagnostic message is consistent with the description parameter describing what is being tested rather than what is expected.  If that were changed to ""assert_false: No document.hasFocus() after blur. expected false got true"", then I'd be confused by the triple negative."
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-10-07 08:32:15,"Thanks for the testcase.  I've used it to check that the ""blur"" and ""focus"" events were not dispatched during `window.open()` nor `proxy.close()` on Android, in neither Firefox nor Chrome.

Focus events are [not fired in queued tasks](https://html.spec.whatwg.org/multipage/interaction.html#focus-update-steps).  In current implementations, browsers notice OS focus changes in global tasks (which then dispatch sync events), which I assume is why your testcase runs to completion.  However,
> [When the currently focused area of a top-level browsing context is somehow unfocused without another element being explicitly focused in its stead, the user agent must immediately run the unfocusing steps for that object.](https://html.spec.whatwg.org/multipage/interaction.html#focus-processing-model:unfocusing-steps)

If a browser on an OS without OS-level windows, for example, were to know at the time of `window.open()` that the current document will be obscured, then it would be compliant to run the unfocusing steps and generate the ""blur"" event during `window.open()`."
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-10-06 23:00:27,"I'd prefer this order:
```
  proxy.close();
  const promise_switched = switch_toplevel_focus_for_window(window);
  await promise_event(window, 'focus');
  assert_true(document.hasFocus(), 'document.hasFocus() after focus');
  await promise_switched;
```"
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-10-06 23:00:27,"Is this assert important? If yes, I'd tighten its timing to be right after the blur event:
```
  const promise_resume = Promise.all([
    switch_toplevel_focus_for_window(proxy),
    promise_event(proxy, 'load')
  ]);
  await promise_event(window, 'blur'),
  assert_false(document.hasFocus(), 'No document.hasFocus() after blur');
  await promise_resume;
```

Also, should assert label be `'No document.hasFocus() after blur'` ?"
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-10-06 23:00:27,"Nit: I see no need to register `onblur` this early, since events are fired in queued tasks (with a few rare exceptions) — I [checked on 3 browsers](https://jsfiddle.net/jib1/nbmuqpt7/) — so I have a slight preference for this order:
```
  // 'resizable' is requested for a separate OS window on relevant platforms
  // so that this test tests OS focus changes rather than document visibility.
  const proxy = window.open(blank_url, '', 'resizable');
  t.add_cleanup(() => proxy.close());
  const promise_blur = promise_event(window, 'blur');
```"
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-10-06 23:00:27,"Lgtm with some minor event ordering nits (might be subjective, so open to discuss)"
127047,https://phabricator.services.mozilla.com/D127047,Bug 1732410 test enumerateDevices() without focus r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-10-03 21:14:50,"To clarify the explicit activation approach here:

WebDriver intends that tests run [""without altering OS-level focus.""](https://w3c.github.io/webdriver/#switch-to-window)
Gecko has some [basic support](https://bugzilla.mozilla.org/show_bug.cgi?id=704583#c4) for this and [ignores OS deactivate events](https://hg.mozilla.org/integration/mozilla-inbound/rev/c5be7e57ba0c) but does not ignore OS activate events.

If the test window is the active OS window and a new window is opened, the OS will typically activate the new window.  However, if the test window is not the active window, then the new window is usually not activated.
Even if the test window is originally the active OS window, it is no longer active after a new window is opened and often does not become active again when the new window is closed.  When starting a new test, the testharness requests (through WebDriver) that the browser simulate OS activation on the test window.

This test triggers the same simulation of OS active window changes through `SpecialPowers.spawnChrome()`.
switch-to-window would also explicitly request that the browser give element-focus to the test document (not a chrome widget), but Gecko provides this without explicit request."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-05 15:26:23,Address review comment
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-04 20:56:48,"Actually, `#editBookmarkPanel` makes a bit more sense.

Please move this to the very top of the file."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-04 20:42:19,Address review feedback
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-04 20:19:48,Remove duplicate selector
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-04 20:19:48,"ditto

Also, please use `#editBookmarkPanelContent`"
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-04 20:19:48,"Not sure what the overall structure is here, but please move these two rules up to a place where they fit better."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-04 17:40:31,"Set color-scheme on parent panels, #urlbar, #searchbar, and .findbar-textbox."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-10-04 15:21:19,Why are you targeting inputs specifically rather than just setting `color-scheme` on the panel or the body element?
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-04 15:11:06,"I verified this on Mac and Linux. While color-scheme doesn't work for swapping out widgets on Linux (D127301), it works in this case where we're just requesting colours."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-04 14:32:01,Use color-scheme in lieu of -moz-system-color.
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-09-30 15:44:12,"Add override for light lwthemes. I also noticed that selection colours were wrong too, so those are now fixed."
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-09-30 09:16:32,"> As I understand it, you can just drop these, and the new rule below will still fix this bug without negative side effects.

Hm, I guess you may actually have to add a `:-moz-lwtheme` rule for defaulting to `light` in OS dark mode with a light Firefox theme. :/"
126997,https://phabricator.services.mozilla.com/D126997,Bug 1732430 - Use theme-aware system colors in panel inputs. r?dao!,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-09-30 09:10:24,"The above changes give me light inputs when using the Dark OS theme on Ubuntu.

As I understand it, you can just drop these, and the new rule below will still fix this bug without negative side effects."
126896,https://phabricator.services.mozilla.com/D126896,Bug 1733061 - Fix another fallout from bug 1696251.,PHID-APPS-PhabricatorHeraldApplication,2021-09-29 09:45:51,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 20:21:45,We could do a `bool mIsDownload;` here. I vaguely wonder if we should do that instead of tracking the full filename.
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-11-09 20:21:45,Let's also add an assertion in here that we're not seeing a javascript URI just in case that changes in the future :-)
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-10-18 23:26:29,"nevermind, i will remove this todo, based on our convo (since JS uris dont go through doc channel!)"
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-10-15 17:12:43,"https://searchfox.org/mozilla-central/rev/cc869830d5cb2482a123ed3a63782bfd5dcf74ec/docshell/base/nsDocShell.cpp#9383-9388

Thoughts?"
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-cje4weq32o3xyuegalpj,2021-10-14 23:33:53,"Code analysis found 99 defects in the diff 496854:
 - 1 defect found by clang-format
 - 98 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach clang-format -p docshell/base/CanonicalBrowsingContext.cpp`
 - `./mach lint --warnings --outgoing`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/GCplIbQuQwOt7UGd9fjaHw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-nj57fuzd2absyzzlmi6h.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/496854) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b83b961c1fcc7c77db94865ba6827866cf7b3ec3)."
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-cje4weq32o3xyuegalpj,2021-09-28 22:34:04,"Code analysis found 113 defects in the diff 487949:
 - 113 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/487949) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ca85ae9d7d3ac77abd78bbde914e77a630e471d5)."
126846,https://phabricator.services.mozilla.com/D126846,"Bug 1721217 - Part 6: Don't cancel concurrent loads if they are downloads, r=nika!",PHID-USER-cje4weq32o3xyuegalpj,2021-09-28 22:31:40,"Code analysis found 113 defects in the diff 487941:
 - 113 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/487941) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a2ad1104d315dc7d60ca4576125ee147a120b871)."
126744,https://phabricator.services.mozilla.com/D126744,Bug 1732807 - add profiler labels and markers in TrackBuffersManager.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-28 17:48:10,"addressed review suggestions (put labels after assertions) As the log positions are not fixed (some before the assertions, but some after the assertions), I didn't change the label position based on log positions."
126744,https://phabricator.services.mozilla.com/D126744,Bug 1732807 - add profiler labels and markers in TrackBuffersManager.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-09-28 17:42:32,"Nonblocking-nit, sometimes the profiler labels are before asserts and logs, sometimes after. Could impose a specific order if you desire."
126694,https://phabricator.services.mozilla.com/D126694,Bug 1713815 - Add a new machine configuration for windows 10. r?jmaher,PHID-USER-cje4weq32o3xyuegalpj,2021-09-27 15:15:15,"Code analysis found 1 defect in the diff 486645:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/486645) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=642da0619f7496e3dbb9f6f859591efca89ca550)."
126694,https://phabricator.services.mozilla.com/D126694,Bug 1713815 - Add a new machine configuration for windows 10. r?jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-09-27 15:00:07,"the desired win is 1920x1080, this is supported well for both talos and raptor"
126694,https://phabricator.services.mozilla.com/D126694,Bug 1713815 - Add a new machine configuration for windows 10. r?jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-09-27 15:00:07,"I learned that mouse_and_screen_resolution.py is hardcoded to 'win7', so adding a 'win10' doesn't work without other changes."
126694,https://phabricator.services.mozilla.com/D126694,Bug 1713815 - Add a new machine configuration for windows 10. r?jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-09-27 15:00:07,"one issue here is we need to exclude the win10 ref hardware from the equation- I have patches locally which adjust everything else, but not excluding win10-ref-hw."
126644,https://phabricator.services.mozilla.com/D126644,Bug 1732624 - Part 6: Convert XPCWrappedNativeProtoMap to use mozilla::HashMap r?mccr8,PHID-USER-ursddouwkmzhineuaj7s,2021-10-05 07:45:08,That looks right.  I'll file a bug.
126644,https://phabricator.services.mozilla.com/D126644,Bug 1732624 - Part 6: Convert XPCWrappedNativeProtoMap to use mozilla::HashMap r?mccr8,PHID-USER-bprqqtj6efvesojmjvm7,2021-09-30 22:55:21,"You could delete Count() (probably in some or all of the other patches, too...)"
126644,https://phabricator.services.mozilla.com/D126644,Bug 1732624 - Part 6: Convert XPCWrappedNativeProtoMap to use mozilla::HashMap r?mccr8,PHID-USER-bprqqtj6efvesojmjvm7,2021-09-30 22:55:21,"This is kind of a weird data structure. I think it could be an array, and also ideally the pointers would be unique pointers. That's a preexisting problem, though."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 22:33:36,"NOTE: Documentation was modified in diff 491556

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e6d0866a-262a-11ec-b882-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 19:30:18,"NOTE: Documentation was modified in diff 491482

It can be previewed [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b315e22a-2611-11ec-9cc4-0242ac110004/index.html) for one week.

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-oszpryzadx4pdqrckjlp,2021-10-01 15:23:08,">>! In D126544#4130691, @johannh wrote:
> This looks great, but the new function needs a test. If you’re time constrained (and given that there are probably higher-level tests in the other patches) I would be okay with filing a follow-up bug for this. I’d leave this up to you, feel free to set the appropriate testing flag or re-request review with a test :)

There are indeed higher-level tests on the GeckoView API but I'll write a test at this level too."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-APPS-PhabricatorHeraldApplication,2021-10-01 08:01:01,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-j4abn3dl2ddinwh6ihpo,2021-10-01 08:01:00,"LGTM, but I agree with Johannh that we need a test for this. Please either add a test for this function or file a bug for adding the test. Thanks. :-)"
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-10-01 07:54:31,"This looks great, but the new function needs a test. If you’re time constrained (and given that there are probably higher-level tests in the other patches) I would be okay with filing a follow-up bug for this. I’d leave this up to you, feel free to set the appropriate testing flag or re-request review with a test :)"
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-09-29 15:23:01,"Related to the above comment, I think this flag looks a bit confusing in isolation, without context from this patch. ""Always expire session""? That doesn't sound like what I want.  ""Expire Never"" sounds like a great default ;)

Thinking more about it I think my preferred way of doing this would be to add a separate `AddFromPrincipalAndPersistInPBM` method that will set the flag in `AddInternal`. Thoughts?"
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-09-29 15:23:01,"I don't understand why this needs to be a ""behavior"" vs. a single boolean argument (`persistInPBM`). I don't mind much but in doubt I'd prefer the simplicity of a bool."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-09-29 15:23:01,"Overall this is good but I want to avoid confusing future users of this API, hence a bit of bikeshedding below"
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-cje4weq32o3xyuegalpj,2021-09-27 23:47:19,"Code analysis found 4 defects in the diff 486911:
 - 4 defects found by android-lints (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=227e30e74a36147838e9fb1a3daa825e5a953377&selectedTaskRun=NONSimgDR0O3ACnVjUkMJA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=227e30e74a36147838e9fb1a3daa825e5a953377&selectedTaskRun=OgfsEGt8TH2bxv0W4kQDrA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=227e30e74a36147838e9fb1a3daa825e5a953377&selectedTaskRun=VRuhQq8QRHqoSv-eFaQxag-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/486911) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=227e30e74a36147838e9fb1a3daa825e5a953377)."
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-hvjw2anoq2st4rvqlvij,2021-09-27 10:50:48,Tim and Johann are actually the best reviewers here!
126544,https://phabricator.services.mozilla.com/D126544,Bug 1714945 - Allow setting permanent permissions for private browsing,PHID-USER-cje4weq32o3xyuegalpj,2021-09-23 19:59:29,"Code analysis found 7 defects in the diff 486151:
 - 3 defects found by clang-format
 - 4 defects found by android-lints (Mozlint)

You can run this analysis locally with:
 - `./mach clang-format -p toolkit/components/antitracking/ContentBlockingUserInteraction.cpp toolkit/components/antitracking/ContentBlocking.cpp dom/base/Navigator.cpp`
 - `./mach lint --warnings --outgoing`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/dg8ycwyDSMWFk9m6NGsvGQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-c3a4mrkpaol6jlfh7r7b.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0407b3497073c940ab7e7696fab4eb4bbc3251&selectedTaskRun=BVJwxga2QIabe27frWhnCw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0407b3497073c940ab7e7696fab4eb4bbc3251&selectedTaskRun=DqHZcHelRhCKho_TFkqPjA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0407b3497073c940ab7e7696fab4eb4bbc3251&selectedTaskRun=XuYvjnokQZ2QWpc-k_nZYw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/486151) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0407b3497073c940ab7e7696fab4eb4bbc3251)."
126494,https://phabricator.services.mozilla.com/D126494,Bug 1719748 - Part 8: Add mozilla::intl::Locale::GetDefaultLocale(). r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-09-24 10:19:26,Rebase and address review comments
126494,https://phabricator.services.mozilla.com/D126494,Bug 1719748 - Part 8: Add mozilla::intl::Locale::GetDefaultLocale(). r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-23 15:26:51,"{nav,  icon=thumbs-up, name=praise:} Thanks again for all of the unification! The APIs are looking nice."
126444,https://phabricator.services.mozilla.com/D126444,Bug 1427811: Add null checks to some a11y document logging functions.,PHID-USER-4uriz64mjqgntzxtsx7a,2021-09-23 20:14:31,Super!
126444,https://phabricator.services.mozilla.com/D126444,Bug 1427811: Add null checks to some a11y document logging functions.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-23 06:42:40,"The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=17b86a8b60dca9bc15f010e4f7107907652410ad&selectedTaskRun=TasBsrMcRfuYgHQS8JM2iA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=17b86a8b60dca9bc15f010e4f7107907652410ad&selectedTaskRun=UaWvUKtRQ6KAhmLj3wgf0g-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=17b86a8b60dca9bc15f010e4f7107907652410ad&selectedTaskRun=Zf8QrVrlTP-W2d42JGEHVw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-10-13 21:17:18,Updated revision.
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-10-11 18:34:16,Fix gtest failure
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-10-04 23:04:48,Updated revision.
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-6gilzlesrxygczj5xep5,2021-09-30 22:06:27,"Maybe I should better explain in that header what ""labels"" are! 🤔
They insert additional informational frames in stack samples; and the header only provides `AUTO_PROFILER...` macros, which you don't use here.
But I see that marker schema also have ""labels"" (in the sense of labeling marker data), that's unfortunate. 😣"
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-09-30 15:16:01,"You're right, thanks. I don't completely follow the profiler terminology, but in looking at the header file I don't see anything that I am using or will be using. (Later patches will add additional info to these markers.)"
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-09-30 15:16:01,"Yes! You are absolutely correct, and I have no idea why I included the followup GC. That doesn't make any sense at all. I must not have really had this stuff figured out when I wrote the comment, I guess?"
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-7hxjutcooeszod3rg3dr,2021-09-30 11:23:06,"the optional followup GC is async, no? But this comment just moved, so fine. But feel free to tweak the sentence."
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-7hxjutcooeszod3rg3dr,2021-09-30 11:23:06,This just add profiler markers
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-6gilzlesrxygczj5xep5,2021-09-30 01:08:56,"{nav,  icon=info-circle, name=nitpick:} I think you don't need this include here, as you're not using profiler labels in this file."
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-6gilzlesrxygczj5xep5,2021-09-30 01:08:56,r+ for the profiler-related code.
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-09-29 23:39:30,Rebase because the autotriggered jobs are complaining about applying these patches.
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-09-29 22:48:28,Updated revision.
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-cje4weq32o3xyuegalpj,2021-09-22 19:25:32,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=65f7519175a68fc2c8483959c1405e483710ab61&selectedTaskRun=Ao6eV8nAQFiLvooqhJw7Aw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=65f7519175a68fc2c8483959c1405e483710ab61&selectedTaskRun=KX5w3lbtRgKKEn_5FfTc5Q-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=65f7519175a68fc2c8483959c1405e483710ab61&selectedTaskRun=Sm47CokrQG6Gc9KGb5Evng-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126394,https://phabricator.services.mozilla.com/D126394,Bug 1732161 - Add profiler marker for core part of CC,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-09-22 19:00:34,Add profiler marker for core part of CC
126344,https://phabricator.services.mozilla.com/D126344,"Bug 1732002 - Disable EGL on Nvidia on X11 in beta and release, r=aosmond",PHID-USER-23vjewznejm4mnldghrh,2021-09-28 17:51:33,config change
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-czee3y4r3veaekmyohl5,2021-11-08 11:12:34,Let's change that to `aCloneType`.
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-czee3y4r3veaekmyohl5,2021-11-08 11:12:34,Can't we use `operator bool()` and `operator*()` here?
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-czee3y4r3veaekmyohl5,2021-11-08 11:12:34,The comments are mostly for myself.
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-28 08:55:29,"Code analysis found 1 defect in the diff 501794:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/501794) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b66099ba90be748489a13d99d793bb2b6018b717)."
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 10:01:47,"Code analysis found 1 defect in the diff 491150:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/491150) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9edf68e51d44190e9a9262d42614b16955eab901)."
126244,https://phabricator.services.mozilla.com/D126244,Bug 1577346 - P3 Make InternalResponse be SafeRefcounted. r=#dom-worker-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 10:01:10,"Code analysis found 1 defect in the diff 491164:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/491164) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a3aaf166c14c9f6ebd2b457077257ca9f6f74b24)."
126193,https://phabricator.services.mozilla.com/D126193,Bug 1731620 - Part 3: Make FormatBuffer's allocation policy configurable. r=#platform-i18n-reviewers!,PHID-USER-cje4weq32o3xyuegalpj,2021-09-23 10:57:34,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=64a064ede77eaf0f3e0f6d77641b0e88a3ac1df8&selectedTaskRun=JSkPGp4hTuC4KjJ-Subz5A-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=64a064ede77eaf0f3e0f6d77641b0e88a3ac1df8&selectedTaskRun=P10tAf_aTlivYkt7ywDiYw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=64a064ede77eaf0f3e0f6d77641b0e88a3ac1df8&selectedTaskRun=bc-vdW4ERfafZxQppEu3pA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126193,https://phabricator.services.mozilla.com/D126193,Bug 1731620 - Part 3: Make FormatBuffer's allocation policy configurable. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-09-23 10:40:39,Rebase and address review comments
126193,https://phabricator.services.mozilla.com/D126193,Bug 1731620 - Part 3: Make FormatBuffer's allocation policy configurable. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-22 14:17:05,Seems reasonable to me.
126142,https://phabricator.services.mozilla.com/D126142,WIP: Bug 1731657: Update facebook warm page load test to navigate to sub-page rather than about:blank,PHID-USER-cje4weq32o3xyuegalpj,2021-09-20 21:55:47,"You have touched the documentation in diff 484467, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/34c82d8a-1a57-11ec-b8ea-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-10-06 14:02:59,Created: https://bugzilla.mozilla.org/show_bug.cgi?id=1734393
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-10-06 12:31:06,"Yeah, we need to create a new context.
Haiyang, feel free to file a bug for it."
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-cluzkujx45iif5fejoai,2021-09-20 18:09:26,Question for @janv : IIUC we will see this telemetry only if we have an active context. Should we have one? Otherwise this change will just write something into the logfile.
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-09-20 17:31:28,"I found in the following places, we are using `Unused << ` to swallow an IPC result during shutdown/destruction process: 


  - [[ https://searchfox.org/mozilla-central/source/dom/cache/AutoUtils.cpp#360 | Unused << PCacheParent::Send__delete__(result.actorParent());]]
  - [[https://searchfox.org/mozilla-central/source/dom/cache/AutoUtils.cpp#369 | Unused << PCacheStreamControlParent::Send__delete__(mStreamControl);]]
  - [[https://searchfox.org/mozilla-central/source/dom/cache/CacheChild.cpp#100 | Unused << SendTeardown();]]
  - [[https://searchfox.org/mozilla-central/source/dom/cache/CacheStorageChild.cpp#90 |  Unused << SendTeardown();]]
  - [[https://searchfox.org/mozilla-central/source/dom/cache/CacheStreamControlChild.cpp#122 | Unused << SendNoteClosed(aId);]]

I'll wrap them all with  `QM_WARNONLY_TRY(OkIf(...));`"
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-09-20 17:20:00,"I've run a small test, by commenting out `SendCloseAll` or `Send__delete__`, the results are: 


  # Commenting out `SendCloseAll`: the tests in dom/cache passed
  # Commenting out `Send__delete__`: some tests in dom/cache hung in shutdown."
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-cluzkujx45iif5fejoai,2021-09-20 16:19:07,"It seems I accepted this prematurely. Can you set it to ""Changes planned"" then, @hxu  ?"
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-09-20 15:56:54,"Sure. Will do. 
And I'll search for other similar calls and wrap them with `QM_WARNONLY_TRY(OkIf(...))` and add a similar comment as I proposed above."
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-09-20 15:27:21,"But in `CacheStreamControlParent::Shutdown` we send the `__delete__` message which triggers destruction of the sub-protocol and actors.

I don't know if the comment `CacheStreamControlParent::Shutdown` is correct.

I investigated the code path for this a bit and now I see that we should end up in `Manager::RemoveListener` which calls `MaybeAllowContextToClose`. Live contexts/managers block the quota client shutdown.

You could do a little experiment, try to comment out `SendCloseAll` here and see what happens when you run a test for Cache API.
You can do the same for `Send__delete__` in `CacheStreamControlParent::Shutdown`.

I suspect there are more calls like this (which can cause shutdown hangs), some of those are already handled with a warning. So I think we should just try to wrap those which are currently plain calls, with `QM_WARNONLY_TRY(OkIf(...))`.

The cases where we know for sure, that it would cause a shutdown hang, should have a comment for this."
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-09-20 14:13:02,"Actually I followed the comments at the line of 151 in the function `void CacheStreamControlParent::Shutdown()`. 
How about I rephrase it to the following: 
```
// If child is gone, warn and proceed. We could see the warning in Telemetry and analyze if it's related to potential shutdown hang 
```
?"
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-09-20 13:57:41,"Also, what does it mean ""allow actor to close normally"" ?
That sounds a bit like we are ok, but we actually suspect that might cause a shutdown hang, right ?"
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-cluzkujx45iif5fejoai,2021-09-20 13:46:19,"Nit: The send fails, if this particular channel to the child process is closed. This does not necessarily mean that the entire child process is dead (although it is a probably reason). Maybe reword to: ""If child is gone..."" ?"
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-cluzkujx45iif5fejoai,2021-09-20 13:46:19,Thanks!
126092,https://phabricator.services.mozilla.com/D126092,"Bug 1731263 - Add QM_WARNONLY_TRY to some IPC calls in CacheAPI, which might be related to potential shutdown hang; r=#dom-storage-reviewers",PHID-USER-ds3zafpz6lxzoroztdku,2021-09-20 11:31:28,"As discussed with @janv, we will see this warning in telemetry if `SendCloseAll()` fails. We can then decide if it's worth to work on a fallback."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-cje4weq32o3xyuegalpj,2021-11-29 18:24:58,"Code analysis found 1 defect in the diff 513326:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/OneKlLezQyCghJH2QoPMrA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-ls2fwjqagq5grqdb4ich.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/513326) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=05b301a146aaa79b7538d819446e62da8b62dd0a)."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-7yjlljiiyshuo7n7hqmy,2021-11-29 18:00:47,Rebase
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-ovlr37yfp3loy53g6wgo,2021-10-23 10:47:33,NOTE for testing: tested in https://phabricator.services.mozilla.com/D126045 and https://phabricator.services.mozilla.com/D126046
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-7yjlljiiyshuo7n7hqmy,2021-10-23 10:14:00,Removed.
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-7yjlljiiyshuo7n7hqmy,2021-10-23 10:14:00,Tested and seems to work!
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-ovlr37yfp3loy53g6wgo,2021-10-18 16:48:21,"I don't see any consumer for those 2 fields (lineno/column),
and if we need to generate any error/warning message for the import/export,
the location for the import/export itself should be clear enough.

can you remove them?"
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-ovlr37yfp3loy53g6wgo,2021-10-18 16:48:21,"`/* static */`
(a space after `static`)"
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-4bmd7d25nix2m4x6y6uw,2021-10-15 16:47:42,"I do sort of wonder if you could get away with `MOZ_TRY(xdr->codeUint32(stencil.specifier.rawDataRef())` in lieu of those locals. 

I do sort of like the consistency and explicitness of what you've got though."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-4bmd7d25nix2m4x6y6uw,2021-10-15 16:47:42,"I think this looks fine, but I'm not terribly up to date with XDR, so I'd like Arai to take a peek at the XDR code."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-cje4weq32o3xyuegalpj,2021-10-12 18:32:08,"Code analysis found 2 defects in the diff 495644:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/495644) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=68019ff57190b0a80318221e205d2d0712fda4a0)."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-cje4weq32o3xyuegalpj,2021-10-05 17:40:33,"Code analysis found 2 defects in the diff 491455:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/491455) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b473b957fc146c20a9268488cca7df58aba7de34)."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-cje4weq32o3xyuegalpj,2021-09-19 17:56:57,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=876e2371730663096c4f78995b272123254c6e84&selectedTaskRun=UqyvF7LzSnutbiWXWqc5Uw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=876e2371730663096c4f78995b272123254c6e84&selectedTaskRun=WqC1VfwYSNSTcWn5n2-dyQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=876e2371730663096c4f78995b272123254c6e84&selectedTaskRun=cee15jUhSseSD_6IhqzJwA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
126042,https://phabricator.services.mozilla.com/D126042,"Bug 1736060 - Part 2: Implement stencil changes for import assertions. r=arai!,mgaudet",PHID-USER-cje4weq32o3xyuegalpj,2021-09-19 10:34:35,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d38ef8e753af38d852f7a3e95d23d803d2969123&selectedTaskRun=A2GlWG1pQXmJjhMfYhstag-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d38ef8e753af38d852f7a3e95d23d803d2969123&selectedTaskRun=B91UxgY7TbO2kgvoHh-4_Q-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d38ef8e753af38d852f7a3e95d23d803d2969123&selectedTaskRun=IRPcSUX2QH6ZAFOoUGUxBA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
125992,https://phabricator.services.mozilla.com/D125992,"Bug 1730881 - Use InputScope in ScopeContext::{determineEffectiveScope, computeThisBinding}.",PHID-USER-cje4weq32o3xyuegalpj,2021-10-12 10:51:56,"Code analysis found 1 defect in the diff 495353:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/frontend/Stencil.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/O6EFU3qbQWGVPToVWWAAtA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-6akdwabqnps5xy32szfl.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/495353) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d910f58a8c7d17ac4d4c914f1f95041678384d2b)."
125992,https://phabricator.services.mozilla.com/D125992,"Bug 1730881 - Use InputScope in ScopeContext::{determineEffectiveScope, computeThisBinding}.",PHID-USER-ovlr37yfp3loy53g6wgo,2021-09-21 18:51:07,"sorry, just realized this is removed in later patch.
please ignore the above comment"
125992,https://phabricator.services.mozilla.com/D125992,"Bug 1730881 - Use InputScope in ScopeContext::{determineEffectiveScope, computeThisBinding}.",PHID-USER-ovlr37yfp3loy53g6wgo,2021-09-21 18:49:59,"having 2 variables with/without trailing `_` sounds error-prone.
can you prepend `raw` or something, to make those names more different?"
125992,https://phabricator.services.mozilla.com/D125992,"Bug 1730881 - Use InputScope in ScopeContext::{determineEffectiveScope, computeThisBinding}.",PHID-USER-cje4weq32o3xyuegalpj,2021-09-20 12:28:00,"Code analysis found 1 defect in the diff 484164:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/frontend/Stencil.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/PycPEBNgSOqjPBYn6cEPDQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-55zu2puws6pamaiyyysg.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/484164) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=645973855b8fbe5ac9739aa85d65eb0aff14156f)."
125992,https://phabricator.services.mozilla.com/D125992,"Bug 1730881 - Use InputScope in ScopeContext::{determineEffectiveScope, computeThisBinding}.",PHID-USER-cje4weq32o3xyuegalpj,2021-09-17 18:47:09,"Code analysis found 8 defects in the diff 483750:
 - 1 defect found by clang-format
 - 6 build errors and 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -p js/src/frontend/Stencil.cpp`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/KmBmL9XSR9SufdIONxDVsg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-2jamebuc4vqgnvygpcpc.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/483750) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c1a2a1b8011b00f7c6f18959fe2d541f79ffc39f)."
125942,https://phabricator.services.mozilla.com/D125942,Bug 1676427 - [devtools] Add top license banner to debugger vendors.css,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-17 15:52:50,rebase
125942,https://phabricator.services.mozilla.com/D125942,Bug 1676427 - [devtools] Add top license banner to debugger vendors.css,PHID-USER-cje4weq32o3xyuegalpj,2021-09-17 15:16:55,"Code analysis found 1 defect in the diff 483625:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 483625, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/f90db58e-17c3-11ec-96c3-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/483625) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15bbd8b0adceba936e61dd274af1ad063f206ea8)."
125942,https://phabricator.services.mozilla.com/D125942,Bug 1676427 - [devtools] Add top license banner to debugger vendors.css,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-17 14:05:48,rebase
125942,https://phabricator.services.mozilla.com/D125942,Bug 1676427 - [devtools] Add top license banner to debugger vendors.css,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-09-17 13:57:28,sounds good to me
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-09-21 14:21:54,Rebase and address review comments
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:56,"{nav,  icon=thumbs-up, name=praise:} Tests look good, thanks!"
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:56,"{nav,  icon=pencil, name=suggestion:} It's not clear to me without reading the implementation that the buffer is only written to if the string is not normalized. It would be less surprising to include that in the function description."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:56,"{nav,  icon=comment, name=thought:} I do like this enum with Yes or No. It makes it clear what's going on."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:56,"{nav,  icon=question-circle, name=question:} Would a `switch` be a better here? I don't know if clang exhaustively checks if/else statements."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:55,"{nav,  icon=pencil, name=suggestion:} It would be nice to have some short docs here, at least pointing to resources explaining what these different forms are. I think https://unicode.org/reports/tr15/ is appropriate here."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-hch2p624jejt4kddoqow,2021-09-20 18:04:55,"Thanks, looks good to me!"
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-09-17 11:56:05,">>! In D125842#4085850, @jfkthame wrote:
> If you don't want to deal with these as part of this patch, we can have a followup about them.

Yes, I'd prefer if that part is handled separately through <https://bugzilla.mozilla.org/show_bug.cgi?id=1719544>."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-autti2wxdumepz7idru4,2021-09-16 17:42:04,">>! In D125842#4085162, @anba wrote:
> There's more code using ICU's normalizer in ""gfx/harfbuzz"", but that's imported code and I'm not sure if that code will actually be targeted by the unified Intl task. Therefore I've placed the normalizer functionality into the String class, too.

We don't use the hb-icu code (it's not even included in the build), so we can ignore that.

However, we do use the ICU normalizer from gfx/thebes/gfxHarfBuzzShaper.cpp, which is our own code and should be ported to Unified-Intl.

This means we'll need a couple of lower-level APIs (or their equivalents):

* unorm2_composePair
  - Given two codepoints, return the single codepoint they compose to, if any

* unorm2_getRawDecomposition
  - Given a codepoint, return its direct decomposition, if any (different from applying NFD because it does not recursively decompose)

(We only need these for Canonical normalization, not Compatibility.)

If you don't want to deal with these as part of this patch, we can have a followup about them."
125842,https://phabricator.services.mozilla.com/D125842,Bug 1731080 - Part 5: Add string normalization methods to intl::String. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-09-16 14:52:47,"There's more code using ICU's normalizer in ""gfx/harfbuzz"", but that's imported code and I'm not sure if that code will actually be targeted by the unified Intl task. Therefore I've placed the normalizer functionality into the String class, too."
125791,https://phabricator.services.mozilla.com/D125791,Bug 1731005 - HTMLEditor::GetActiveEditingHost() does not return editing host if selection is collapsed in `<input>` r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-09-17 00:52:59,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
125741,https://phabricator.services.mozilla.com/D125741,Bug 1730959: Provide a level for logging.disable in mach vendor r?jewilde,PHID-USER-xsgci3i2hsoare3yoz63,2021-09-20 17:05:07,Looks great!
125691,https://phabricator.services.mozilla.com/D125691,Bug 1678373 - Fix displaying the media element by using display: block. r?alwu,PHID-USER-cje4weq32o3xyuegalpj,2021-09-29 12:54:32,"Code analysis found 1 defect in the diff 488189:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/YPl0SvGMQ9GLskpXTDi5dg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-ipzzdemfmtjvybl64lii.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/488189) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8364ee880c0ccafd70bd324fdeb8f478c15b3a4e)."
125691,https://phabricator.services.mozilla.com/D125691,Bug 1678373 - Fix displaying the media element by using display: block. r?alwu,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-15 21:41:30,"I remembered the issue I was encountering at that time was that, the whole video won't be displayed if you don't set the width and height, like [this](https://files.slack.com/files-pri/T027LFU12-F01K1HC92G1/video-css.png), and that caused a failures (I didn't remember what exact failure is already) I couldn't find the whole chat history about that (I was asking a folk in Layout team at that time) because Slack cleared my chat history... 

Anyway, if you already test this and it passes without having any problem on the try server, then it would be no problem!"
125641,https://phabricator.services.mozilla.com/D125641,Bug 1699258 - Add reported crashtest to WPT r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-09-15 11:57:48,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
125591,https://phabricator.services.mozilla.com/D125591,Bug 1730725 - Update pdf.js to version 2.11.243 r=#pdfjs-reviewers,PHID-USER-n52qjcvis5cf232owqsp,2021-09-14 19:09:05,Well tested upstream.
125541,https://phabricator.services.mozilla.com/D125541,Bug 1729925 - [devtools] Avoid leaking commands from toolbox.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-16 09:51:57,reorder patches
125541,https://phabricator.services.mozilla.com/D125541,Bug 1729925 - [devtools] Avoid leaking commands from toolbox.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-15 16:57:13,"testing-exception: also, the leak is now tracked by browser_allocations_toolbox.js"
125541,https://phabricator.services.mozilla.com/D125541,Bug 1729925 - [devtools] Avoid leaking commands from toolbox.,PHID-APPS-PhabricatorHeraldApplication,2021-09-15 09:53:12,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
125541,https://phabricator.services.mozilla.com/D125541,Bug 1729925 - [devtools] Avoid leaking commands from toolbox.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-15 09:06:24,"reorder, address comments, rebase"
125491,https://phabricator.services.mozilla.com/D125491,Bug 1713847 - Connect the new Address Book to the startup directory prefs. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-15 08:11:57,would prefer ALLCAPS for such constants
125441,https://phabricator.services.mozilla.com/D125441,Bug 1730559 - Report texture allocation failures inside SWGL. r?jrmuizel,PHID-USER-cje4weq32o3xyuegalpj,2021-09-13 18:34:34,"Code analysis found 1 defect in the diff 481508:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p gfx/wr/swgl/src/gl.cc`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/XcQG4jevSxyAmb8rGiS92g/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-hqgdnme7fpkhzhqkwce4.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/481508) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7094424163a9fb1e859e6ea33c443b351647c04f)."
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-22 20:56:02,">>! In D125391#4101743, @mkmelin wrote:
>>>! In D125391#4101729, @lasana wrote:
> I don't see how that would help. You still end up debugging the exact same test, and without boilerplate it's just a few lines of code, so at that point it should be obvious what is wrong.

It may be obvious to someone already familiar with the code not everyone else. 

You'd be debugging the same area of functionality but not necessarily the exact same conditions of operation. It could become possible for example, that having an invalid pill causes the test that will otherwise fail pass due to some unforeseen side-effect. That is harder to detect if the tests are combined."
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-22 11:16:16,">>! In D125391#4101729, @lasana wrote:
I don't see how that would help. You still end up debugging the exact same test, and without boilerplate it's just a few lines of code, so at that point it should be obvious what is wrong."
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-22 11:03:43,">>! In D125391#4101188, @mkmelin wrote:
> Added a separate case for the invalid pills. It's the exact same code path so no point testing more than one of these... Even adding the separate case is questionable: if this ever starts failing it should be obvious what the problem is once someone takes a look. For cases like this I think it's good to test more than one thing at the same time. It *was* a problem that the expansion was incorrect, so it's not even an unrelated testing. It was just that the input data was too simplistic.

When writing tests, it's helpful to as much as possible test one particular scenario per test case. It can help when debugging an issue. If for example, regular list expansion broke for a field, we can skip all the other tests and see that particular one failing. Having it also feed in invalid data in the same case could potentially be misleading. Say for instance the valid expansion test actually passes (bug might be timing issue etc) but fails for invalid data."
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-22 08:28:49,"Added a separate case for the invalid pills. It's the exact same code path so no point testing more than one of these... Even adding the separate case is questionable: if this ever starts failing it should be obvious what the problem is once someone takes a look. For cases like this I think it's good to test more than one thing at the same time. It *was* a problem that the expansion was incorrect, so it's not even an unrelated testing. It was just that the input data was too simplistic."
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-20 15:34:02,Rebase needed as well.
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-20 14:49:58,Please add a separate test for this so we can distinguish between regular usage and this edge case. The other fields should be tested too.
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-20 14:49:58,I do not encounter this.
125391,https://phabricator.services.mozilla.com/D125391,Bug 1730363 - fix list expansion in combination with invalid pills. r=lasana,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-13 11:54:08,"Really strange and I don't know why, but expandListSeparator can't be found by id so this was blowing up..."
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sqzi3myw3ybsofxmewmp,2021-10-06 18:17:46,Hopefully we didn't miss any other use case of `button.small`...
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-s4ef4eaetjgrdjzssh5o,2021-10-06 17:52:58,Clearing desktop-theme-reviewers since Itiel is on it.
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-30 16:59:54,Thanks @pasulaav !
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-30 16:16:48,@pasulaav Thanks for folding your changes from D126302 into this revision! We'll still need to address the feedback given in D126302 though. I've copied them here.
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-30 16:14:00,"As suggested by @Itiel in D126302, we need to adjust this comment"
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-30 16:14:00,@pasulaav We should add back this line as was suggested in D126302
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sqzi3myw3ybsofxmewmp,2021-09-12 21:20:25,This comment needs to be adjusted.
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-hkitahbkppitqpq54yj3,2021-09-12 21:11:05,👍
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-12 21:05:14,LGTM! Thanks :)
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sqzi3myw3ybsofxmewmp,2021-09-12 17:08:31,"Back when this bug was filed I thought so as well, until Gijs pointed me here:
https://searchfox.org/mozilla-central/rev/1761c710b035d7dc8892dfa8e56589b4e095221f/toolkit/content/widgets/notificationbox.js#649"
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-sjb23lkvqglp6kixwyq2,2021-09-12 16:36:52,I don't think these rules are being used anymore. Doing a quick browse of SearchFox: https://searchfox.org/mozilla-central/search?q=class%3D%22medium&path= and https://searchfox.org/mozilla-central/search?q=class%3D%22small&path= . Perhaps we can just remove them now?
125341,https://phabricator.services.mozilla.com/D125341,"Bug 1698349 - Changed the .small selectors to .small-button and since there were no uses of medium found that selector was removed . r=mhowell,mtigley",PHID-USER-hkitahbkppitqpq54yj3,2021-09-12 16:35:09,"I don't think this is going to work, and I'll explain why.. CSS classes don't do anything on their own, they have to be set on an HTML element somewhere so that they take effect on that element. And the way to do that is to specify the class by name, meaning the name used in the HTML (or in the Javascript that creates the HTML) has to match the name that's in the CSS. That's why just changing the name in the CSS like this patch does won't work, because this way the name in the class definition won't match the name where the class is used.

So one of two things needs to happen: either find where these classes are used and change the names in those places too, or if there isn't anywhere that these are used, just remove them."
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-09-28 14:53:31,"With the current rules, no. Subsequent rules, yes but I have not reached there yet and I this function may change entirely."
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,"""meridiem"""
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,`endDate.getHours() != 0 || endDate.getMinutes() != 0` would be nicer.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,Could `startTime.minute` be not set? That would be bad.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,These will already be zero.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,Stray empty line.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,"""property"""
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,This sentence doesn't make a lot of sense.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,You could move these chunks up into the `else` block above.
125291,https://phabricator.services.mozilla.com/D125291,Bug 1612170 - Add CalExtractParserService to allow parsing and extract event info using alternative locales. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-09-28 02:24:49,Looks okay to me. A few things to clear up before landing.
125241,https://phabricator.services.mozilla.com/D125241,Bug 1642415 - Add unit tests for metasources; r=#platform-i18n-reviewers,PHID-USER-hch2p624jejt4kddoqow,2021-09-13 16:41:40,"{nav,  icon=comment, name=thought:} This appears to be proof that things are working."
125241,https://phabricator.services.mozilla.com/D125241,Bug 1642415 - Add unit tests for metasources; r=#platform-i18n-reviewers,PHID-USER-hch2p624jejt4kddoqow,2021-09-13 16:41:40,"{nav,  icon=thumbs-up, name=praise:} Thanks for the very clear unit tests demonstrating how this is all supposed to work."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-29 23:07:47,Hmm maybe I should only use these changes on my local testing for now and make them showing on the report which is generated by your extension on the profiled result.
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-29 23:07:47,"In previous revision, I had tried it and it was too late. I also tried to report the probes in earlier shutdown phase or adding a shutdown blocker, but none of them worked."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-29 13:59:50,"I'm concerned about the increased memory usage just for rare logging, we can make all the allocations lazy."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-29 13:19:24,"Do you think we could use this for the regular media telemetry, or it is too late ?"
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-29 13:19:24,Can we store those in a struct and make the struct init be dependent on the log being enabled? It's wasting memory for nothing otherwise.
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-29 13:19:24,"Using a hash table with constant keys is probably using a lot of memory, I'm not sure how much, but this goes in each process since it's in libxul and static."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-09-28 15:34:06,"Makes sense to me. I can see the telemetry being useful, but it's difficult to do the comparisons without grouping the information with a lot of other data. Profiler probes are a good start and we can revisit telemetry in future as needed."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-28 10:15:18,">>! In D125141#4115141, @alwu wrote:
> @padenot @bryce Any suggestions? Thank you.

I agree. We can revisit this decision when we've fixed the performance issues we can find locally."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-27 23:46:45,"Currently I'm considering to remove all those telemetry probes. Because of some concerns paul has mention, the performance could be vary very very differently depend on users' setup. Eg. their hardware, how busy their computer is while measuring, if using hardware decoding or not...e.t.c. That is not like a performance test, which would regularly run on the same machinces (on try server) so we can eliminate the hardware difference and use that data. Running this on the wild would be affected by some many factors.

I feel adding the profiler markers would be probably enough, because it allows us to see those detailed information from user's report? Eg. on [this](https://profiler.firefox.com/public/h3n5sp6s44jmsn7aspmrxtdrs2tqsg1b9zqxvsr/marker-chart/?globalTrackOrder=80w7&hiddenGlobalTracks=0w6&hiddenLocalTracksByPid=49047-0~49240-0~49199-0~49141-0~49105-05w8ab&localTrackOrderByPid=48931-a0w9~49015-0~49047-10~49240-10~49199-10~49141-10~49287-60w5~49105-b0wa&thread=t&timelineType=cpu-category&v=6) (see marker on MDSM thread), it helps to indentify one request-data which took super long time (0.46s) for one video frame.

@padenot @bryce Any suggestions? Thank you."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-23 18:23:39,"Hmm after reading bryce's comment, I was testing the telemetry again and found out that my new report timing (report when shutdown phase) seems not working, which would cause probe lost. I will add a telemetry test in this patch stack later and update my patch again. Sorry for bothering."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-09-23 15:12:16,">>! In D125141#4103204, @alwu wrote: 
> If we want to add test, I will prefert to only add a gTest to ensure that `PerformanceRecorder` works as our expectation. Adding high level tests seems less useful to me because you can't tell if the value it collects is correct or not. I will add a gTest in a new patch, thanks!

I see value in checking if the probes are collected too. It seems hard for us to have exact values for what the probes should be, but can we at least check if they have some non-zero value? I.e. even on the fastest test machines, after playing back a video each phase should have a > 0 value. We could also check that `MEDIA_PERF_REQUEST_DATA_US` is a superset of the other probes, that it always has a greater value, as expected.

That way we have coverage for if probe collection is unexpectedly stopped by patches down the line.

It would be nice if we could ensure the same thing is being measured in a test. I.e. if we subtly change what the probes are measuring, a test fails. Otherwise we risk comparing apples and oranges down the line (and users doing so too, if we expose this), but that seems hard to do here.

Edit: to be clear, happy for this to happen in a follow up."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-22 18:59:11,"Code analysis found 1 defect in the diff 485579:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/485579) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=29024e8080e76e575c77578179ed2955b7db65e1)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-22 18:56:03,"Code analysis found 1 defect in the diff 485574:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/485574) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=49571af497d407b099bc8f217d96ad986237c7d0)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-22 18:49:44,"Code analysis found 1 defect in the diff 485559:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/485559) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=732f3f2a006dac83067e43b8d117b813f1188618)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-22 18:20:46,"Ah yes thanks, will remove them."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-22 18:20:46,">>! In D125141#4102453, @bryce wrote:
> Still working my way through this. Looks good so far.
> 
> I'm a big fan of tests If we're going to make this permanent or show the data to users. I'm cool with the plan of landing without tests and adding them later. But if we're going to be making decisions based on the data long term, or if users are going to look and the data and give it to us in bug reports, we should make sure it's collected as expected and covered for regressions.
> 
> Telemetry testing is kinda janky, in my experience, but I've done a little prior art that I can point to if that's useful when the time comes.

If we want to add test, I will prefert to only add a gTest to ensure that `PerformanceRecorder` works as our expectation. Adding high level tests seems less useful to me because you can't tell if the value it collects is correct or not. I will add a gTest in a new patch, thanks!"
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-09-22 15:34:39,"Is this header being used? If so, we can use the mfbt version instead. I don't see any variant usage in the changes, so maybe this is dead?"
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-09-22 15:34:39,"Still working my way through this. Looks good so far.

I'm a big fan of tests If we're going to make this permanent or show the data to users. I'm cool with the plan of landing without tests and adding them later. But if we're going to be making decisions based on the data long term, or if users are going to look and the data and give it to us in bug reports, we should make sure it's collected as expected and covered for regressions.

Telemetry testing is kinda janky, in my experience, but I've done a little prior art that I can point to if that's useful when the time comes."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-22 01:30:19,"Hmm after some testing, I think the current timing of reporting telemetry isn't correct. I will update the patch again."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-22 00:00:57,"update: this patch is still ready for a review! I will use another follow-up patch to collect more information. In addition, I'm not sure why there are some many lint build errors, because I pretty sure `PerformanceRecorder` is not an incomplete type in those context."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-21 19:40:44,"In addition, I'm thinking about whether we should report these data to the media panel (or profiler?) as well."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-21 19:14:53,">>! In D125141#4096616, @padenot wrote:
> What differences between users do you expect? To me, we're just copying way too much, it's going to be bad always, and we should remove the copies, no real need to measure. Do you see things differently?

[Update: now I agree with this, I think I would still record the time for copying data, and will report them via markers. But it's no need to update them to Telemetry]

So my plan is to use these probes as metrics to see 

(1) in long term if we have any performace improvement or degradation (if they're proven useful, then we can turn them into permanent). Because currently we could only measure performance by either [testing the time of rendering frames](https://firefox-source-docs.mozilla.org/testing/perfdocs/talos.html#basic-compositor-video) or checking the [dropped frame amount on YT](https://wiki.mozilla.org/TestEngineering/Performance/Raptor/Youtube_playback_performance). The former one involves gfx pipeline which can't purely reflect the performance of media playback, and the latter one would only be useful if we encounter frames drop. 

Therefore, I think to have a metric to simply represent media playback pipeline's performance is important in term of checking the performance improvement. 

(2) to tell us the difference between platforms

From this [rough analysis](https://docs.google.com/spreadsheets/d/1R2lrufzvQyG5loWvVk2aelD_OkVTi7JQMecyczya2Kk/edit#gid=1680489332), we can see there are huge differences among the results on different platforms. And we can filter those probes by platforms to show us the status of each platform, and know on which platform we perform the best or the worst, in order to target the problem.

Reporting copy is just a process of targeting the pain point. There was also some interesting finding in above analysis. Copying decoded video via win32 api on Windows actually is really really fast. Not sure what the actual implementation is, maybe it dispatches an async task, or that api simply changes the internal pointer to the new data location?

---

In addition, in today's 1-1, I discussed these probes with Jim, and he suggested me to have more information as well, such as codec type (we can focus on h264, vp9, vp8 and av1 which are majority of used codecs these days) and if possible, we can also mention if the decoding is done by hardware or software. (because on the above analysis, we can see huge difference between hardware and software) 

Therefore, I'm going to hook more information in these probes. And also feel free to discuss if y'all think which parts of information are useless/useful."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-rip425pakj57je44bgzq,2021-09-21 08:56:55,"What differences between users do you expect? To me, we're just copying way too much, it's going to be bad always, and we should remove the copies, no real need to measure. Do you see things differently?"
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-20 20:29:44,"Code analysis found 34 defects in the diff 484370:
 - 34 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/484370) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4e3ac8110fad6b0de4e7a0fe09af634f434bffc0)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-18 01:45:08,"Code analysis found 3 defects in the diff 483927:
 - 1 defect found by Coverity
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/483927) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5cd1a9cde5b8f9908fc9691008977fb871f14afd)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-18 01:12:06,"Code analysis found 11 defects in the diff 483877:
 - 1 defect found by clang-format
 - 10 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -p dom/media/utils/PerformanceRecorder.cpp`
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Ur9ywnWlSpatHUxp66BdUw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-gy2qbzt35bqzst3tsukt.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0f3fe1019ff65d5df3eeeab6fec5a9040a5fcd83&selectedTaskRun=Ju1J5_-DSU6IrfKMwi_JCw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/483877) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0f3fe1019ff65d5df3eeeab6fec5a9040a5fcd83)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-15 19:31:46,"Code analysis found 3 defects in the diff 482653:
 - 1 build error and 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=80c7d6500dbc6c36993f37246c46e6461bc01a40&selectedTaskRun=Fli294QGSGGwGRm197ZQtA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482653) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=80c7d6500dbc6c36993f37246c46e6461bc01a40)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-15 01:23:39,"Code analysis found 3 defects in the diff 482207:
 - 1 build error and 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2b112f0a10d9d9274b0403b4b90d615623507b2d&selectedTaskRun=ZsEhTqleRluv8fJbBX60Uw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482207) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2b112f0a10d9d9274b0403b4b90d615623507b2d)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-15 00:38:31,"Code analysis found 12 defects in the diff 482197:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6cf698f0eb82d76586ea0572c818ea8d46fa3c0d&selectedTaskRun=HzO7OgQTSkyJ0K5H_zxDtQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482197) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6cf698f0eb82d76586ea0572c818ea8d46fa3c0d)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-15 00:28:16,"Code analysis found 12 defects in the diff 482183:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=266cea596b3200452279b6e691baf6b08517f08b&selectedTaskRun=INB3SxcFQmakSk0qhT4Ivw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482183) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=266cea596b3200452279b6e691baf6b08517f08b)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-15 00:09:17,"Code analysis found 12 defects in the diff 482176:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4a64e8cfa6564036929d8e936499c33aa1ab5a36&selectedTaskRun=GPn4hTz0THW0a1i4ZpFDvg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482176) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4a64e8cfa6564036929d8e936499c33aa1ab5a36)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-09-14 23:55:54,"As these are not permanent probes, I wanted to collect data first without having any test. If we think they are useful and consider to make them permanent, then I will write tests for them at that time."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-14 23:32:38,"Code analysis found 12 defects in the diff 482168:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c0bae382a7dc6f0c0c4b6212a08c2e09b017db94&selectedTaskRun=GloJ2E-qSuu8LoIWt6WUWw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/482168) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c0bae382a7dc6f0c0c4b6212a08c2e09b017db94)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-14 03:32:48,"Code analysis found 12 defects in the diff 481721:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7f0705f3bad2fc1793f91c07a7471caa60086c20&selectedTaskRun=d3n27eECQt28N2WjR3u2hA-1) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/481721) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7f0705f3bad2fc1793f91c07a7471caa60086c20)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-14 03:18:54,"Code analysis found 12 defects in the diff 481718:
 - 12 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc2917377ce7d234d9d8ad52bcbcb4880af9b14f&selectedTaskRun=R7pknrgyS7af2VT48ATuuw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/481718) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc2917377ce7d234d9d8ad52bcbcb4880af9b14f)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-14 02:58:21,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e4211f4a89de5b4f7e69ecedf0724c46051c8a4&selectedTaskRun=GZ41fNt0QRiJlInhFgQfWQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e4211f4a89de5b4f7e69ecedf0724c46051c8a4&selectedTaskRun=KwY7LUy0SHuRPtfiA_C9dg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e4211f4a89de5b4f7e69ecedf0724c46051c8a4&selectedTaskRun=NGCevmi1TP-Hu8BD89JbTA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e4211f4a89de5b4f7e69ecedf0724c46051c8a4&selectedTaskRun=QKyBc6HwSBOuqUdf81ojTA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
125141,https://phabricator.services.mozilla.com/D125141,Bug 1730020 - part2 : repord the average time for each stage.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-10 02:22:17,"Code analysis found 10 defects in the diff 480534:
 - 10 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ccfb68fb8e8708f7dd428e649b72d4194b36292f&selectedTaskRun=Isg60gS-Q0-usqNlsJf9hg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/480534) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ccfb68fb8e8708f7dd428e649b72d4194b36292f)."
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-n2itewnqi5z336gyq3vm,2021-09-09 22:24:37,I'll use `mSimulatedClientArea` because this area does not include the title bar and buttons when the system title bar is shown.
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-09-09 22:00:44,I got your update after mine but it is also fine.
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-APPS-PhabricatorHeraldApplication,2021-09-09 21:59:47,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-09-09 21:59:47,Good point.  I was going to suggest `mMouseInDraggableOrButtonArea` but that seemed wordy.  But maybe it's the most clear option?  Whatever you decide will be fine.
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-n2itewnqi5z336gyq3vm,2021-09-09 21:01:25,I renamed this to `mSimulatedClientArea`.
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-n2itewnqi5z336gyq3vm,2021-09-09 20:16:32,"I know you speak English much better than me, but please let me explain. I meant to say that this value is true when we treat the area as if it is a client area from our mouse event perspective even though actually it is a non-client area.

IMO `mTreatAsNonClientArea` is not good because we also have ""real"" non-client area such as HTBORDER, HTBOTTOM, HTLEFT, etc. Do you have another suggestion?"
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-09-09 18:22:40,`Draggable` isn't quite right anymore but `Client` is also confusing.  We are setting this value exactly when the hit test does *not* return HTCLIENT.  (You can also clearly see the polarity mixup in the `WM_NCMOUSELEAVE` handler setting this as if we were leaving the client area instead of the non-client area.)  `mTreatAsNonClientArea` would work.
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-09-09 18:22:40,"This is much better than what we had but I think this exposes that the helper functions we were using aren't well suited to this.  For example, in the distant future, Windows 12 might need us to handle `HTMINBUTTON` for some random reason.

So you could get rid of `WithinDraggableRegion` completely (you removed 2 of the 3 uses already) and use a static helper like

```
bool IsHTInNonClientRegion(int32_t hitResult) {
  return hitResult == HTCAPTION || hitResult == HTMAXBUTTON;
}
```

in the two places you do that here.  (The stray use of `WithinDraggableRegion` can switch to `ClientMarginHitTestPoint` and test its return for `HTCAPTION` since it doesn't want to also detect `HTMAXBUTTON`)."
125041,https://phabricator.services.mozilla.com/D125041,Bug 1729742 - Send normal mouse events when cursor is over a maximize button on Windows. r?handyman,PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-09-09 18:22:40,"No major objections, just some style notes."
124990,https://phabricator.services.mozilla.com/D124990,"Bug 1729804 - Add experimental support for ""e"", ""pi"", and various trigonometric functions in calc(). r=#style",PHID-USER-zp4gy3jjzfehipsktf6x,2021-09-10 18:22:19,"I'll work on the tests before enabling, as the webkit import will take a bit."
124990,https://phabricator.services.mozilla.com/D124990,"Bug 1729804 - Add experimental support for ""e"", ""pi"", and various trigonometric functions in calc(). r=#style",PHID-USER-zp4gy3jjzfehipsktf6x,2021-09-10 18:21:39,comment fix
124990,https://phabricator.services.mozilla.com/D124990,"Bug 1729804 - Add experimental support for ""e"", ""pi"", and various trigonometric functions in calc(). r=#style",PHID-USER-laiy2eaopxzo3vm6tath,2021-09-09 21:04:41,"{nav,  icon=info-circle, name=nitpick:} s/tan/sin/"
124990,https://phabricator.services.mozilla.com/D124990,"Bug 1729804 - Add experimental support for ""e"", ""pi"", and various trigonometric functions in calc(). r=#style",PHID-USER-laiy2eaopxzo3vm6tath,2021-09-09 21:04:41,"r=me because the test case will be there later.

Tests: Webkit team will upload them to WPT."
124939,https://phabricator.services.mozilla.com/D124939,Bug 1729481: Fix a bug in the python-version hacks r?jewilde,PHID-USER-xsgci3i2hsoare3yoz63,2021-09-08 18:40:33,Looks good! Thanks!
124887,https://phabricator.services.mozilla.com/D124887,Bug 1727084 - Memory64 - Preliminaries. r?yury,PHID-USER-qk76l4ghuo4nsd27bkox,2021-10-11 20:52:48,"Testing is unchanged. The non-memory32 configuration is pref'd off by default in StaticPrefList.yaml, and though lots of `MOZ_ASSERT(isMem32())` were added."
124887,https://phabricator.services.mozilla.com/D124887,Bug 1727084 - Memory64 - Preliminaries. r?yury,PHID-USER-cje4weq32o3xyuegalpj,2021-10-11 15:57:38,"Code analysis found 1 defect in the diff 494192:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/494192) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f20d89804107b8a28256dcc346281e69988270c6)."
124887,https://phabricator.services.mozilla.com/D124887,Bug 1727084 - Memory64 - Preliminaries. r?yury,PHID-USER-cje4weq32o3xyuegalpj,2021-10-11 15:27:41,"Code analysis found 1 defect in the diff 494159:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/494159) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4794bc48881f06210f2ab3a35665fc618d406ed2)."
124887,https://phabricator.services.mozilla.com/D124887,Bug 1727084 - Memory64 - Preliminaries. r?yury,PHID-USER-cje4weq32o3xyuegalpj,2021-10-11 09:01:52,"Code analysis found 1 defect in the diff 493940:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/493940) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7cb57ebde109f9ed0d09f0c963321e205a30186a)."
124887,https://phabricator.services.mozilla.com/D124887,Bug 1727084 - Memory64 - Preliminaries. r?yury,PHID-USER-cje4weq32o3xyuegalpj,2021-10-08 13:35:14,"Code analysis found 1 defect in the diff 493541:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

---
If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/493541) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=470a01a64687f1e26280f7418dd7cb6ffcf2947c)."
124837,https://phabricator.services.mozilla.com/D124837,"Bug 1729060 - [taskgraph] Add '-J' warning back in when comparing diffs, r?#taskgraph-reviewers!",PHID-APPS-PhabricatorHeraldApplication,2021-09-07 20:58:29,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
124787,https://phabricator.services.mozilla.com/D124787,Bug 1556351 - Part 4: Move methods that doesn't need to be used for FACE to nsGenericHTMLFormControlElement;,PHID-USER-p7a62wknonfqkih2zlnc,2021-09-29 19:11:41,rebase
124686,https://phabricator.services.mozilla.com/D124686,MR2-642 - Implement SessionManager.query to return items from the session database. r?mak!,PHID-USER-2unm6j7c36hylplkvkb6,2021-09-08 14:15:48,Adjust pref name a final time
124686,https://phabricator.services.mozilla.com/D124686,MR2-642 - Implement SessionManager.query to return items from the session database. r?mak!,PHID-USER-2unm6j7c36hylplkvkb6,2021-09-08 13:46:38,Address review comments
124686,https://phabricator.services.mozilla.com/D124686,MR2-642 - Implement SessionManager.query to return items from the session database. r?mak!,PHID-USER-erxup3oqd7if4an5l7ut,2021-09-08 11:58:17,"{nav,  icon=info-circle, name=nitpick:} doing just the latter should be sufficient thanks to the FK."
124686,https://phabricator.services.mozilla.com/D124686,MR2-642 - Implement SessionManager.query to return items from the session database. r?mak!,PHID-USER-erxup3oqd7if4an5l7ut,2021-09-08 11:58:17,"{nav,  icon=comment, name=thought:} This seems a bit confusing looking at the Places codebase, because the other toDate implementation in PlacesUtils is converting from microtime, while this is milliseconds. That adds a bit of confusion to a system that is already confusing by itself.

Maybe rename to dateOrNull, or use a #nullishPassthrough(val, transformFn) generic util."
124686,https://phabricator.services.mozilla.com/D124686,MR2-642 - Implement SessionManager.query to return items from the session database. r?mak!,PHID-USER-erxup3oqd7if4an5l7ut,2021-09-08 11:58:17,"{nav,  icon=pencil, name=suggestion:} add comment about what happens if both guid and url are provided"
124635,https://phabricator.services.mozilla.com/D124635,Bug 1703164 - convert mailnews/base/prefs/content/am-offline.xhtml to top level <html>. r=henry,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-08 06:49:54,"Hmm, can't reproduce the problem now though I always could earlier. I'll remove the workaround."
124635,https://phabricator.services.mozilla.com/D124635,Bug 1703164 - convert mailnews/base/prefs/content/am-offline.xhtml to top level <html>. r=henry,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-09-07 15:43:04,"I don't see a cut off without the inline style. Maybe it only shows under certain circumstances, or could it have been fixed when you removed the outer `vbox`? Was this introduced by the toplevel conversion to html?"
124635,https://phabricator.services.mozilla.com/D124635,Bug 1703164 - convert mailnews/base/prefs/content/am-offline.xhtml to top level <html>. r=henry,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-07 15:11:29,"For some odd reason, this particular page was cutting of at the middle of the last line. I think we've seen it elsewhere in interactions with fieldset in xul as well. The ""real"" fix is using only html on the page... We have plenty of space on the page so the bottom margin won't have any visual change (except that it works around the bug)."
124635,https://phabricator.services.mozilla.com/D124635,Bug 1703164 - convert mailnews/base/prefs/content/am-offline.xhtml to top level <html>. r=henry,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-09-07 14:47:24,"Why add this inline style? It just adds whitespace at the end of the page, but other pages do not do this."
124585,https://phabricator.services.mozilla.com/D124585,Bug 1638958 - disable browser_label_and_icon.js on win10_2004 not debug r?#intermittent-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-09-07 14:23:33,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-2gujohlr3u3puvz4jmvz,2021-09-07 07:44:10,"#check-in_needed handled, landing queued."
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-jqou3mp2fdzb7uuohm53,2021-09-07 07:43:44,">>! In D124535#4051818, @aryx wrote:
> @lth Please land the patch.

Will do."
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-jctf3fzk75vb7qsmgnhw,2021-09-07 07:36:26,@lth Please land the patch.
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-2yyksed2zmublk5nvk7k,2021-09-06 06:32:54,">>! In D124535#4048561, @lth wrote:
> Can you add a single-line comment about both constructors, ""// Required by gcc""?  Thanks.

Done."
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-jqou3mp2fdzb7uuohm53,2021-09-06 06:05:19,"Can you add a single-line comment about both constructors, ""// Required by gcc""?  Thanks."
124535,https://phabricator.services.mozilla.com/D124535,Bug 1729124 - [MIPS64][ARM64] Fix gcc build issue. r=lth,PHID-USER-cje4weq32o3xyuegalpj,2021-09-04 09:52:38,"Code analysis found 1 defect in the diff 478317:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/wasm/WasmBCRegDefs.h`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/ZEQT1bk8RRmNQlBIOQ_kiw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-4tfy5nyekikmtgg74cf6.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/478317) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=680573bde0c6459671b809023e2663fbb340d0db)."
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-wf4lvys27odt7tkr4o3g,2021-09-20 10:37:16,Sorry didn't intend to add myself as reviewer here.
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-nlulagzxcxzordsbcw42,2021-09-16 14:39:00,Thanks!
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-09-15 18:26:55,nit: I think we can remove this and `OBSERVED_PREFS`
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-09-15 18:26:55,Left a comment for something I think we can remove
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-nlulagzxcxzordsbcw42,2021-09-15 02:26:51,Fly-by comment greatly appreciated. Thanks!
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-2unm6j7c36hylplkvkb6,2021-09-14 17:16:19,"Please excuse the fly-by, but I think you can also remove the event handling for this from globalhistorydebugging.js."
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-wf4lvys27odt7tkr4o3g,2021-09-10 08:58:57,I've backed this out as it broke the now and browse sections of the companion.
124485,https://phabricator.services.mozilla.com/D124485,[MR2-216] Remove Companion Settings button from menu.,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-09-03 18:33:03,lgtm!
124384,https://phabricator.services.mozilla.com/D124384,Bug 1728458 - Migrate browser-box.inc.xhtml to Fluent. r=emalysz!,PHID-USER-cje4weq32o3xyuegalpj,2021-09-02 22:51:18,"Code analysis found 1 defect in the diff 477800:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/477800) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ad2b706272162070a78f9655dac3bd5e58092293)."
124384,https://phabricator.services.mozilla.com/D124384,Bug 1728458 - Migrate browser-box.inc.xhtml to Fluent. r=emalysz!,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-09-02 21:17:34,"Most tooltips seem to follow this pattern, so I think we keep it as is"
124384,https://phabricator.services.mozilla.com/D124384,Bug 1728458 - Migrate browser-box.inc.xhtml to Fluent. r=emalysz!,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-09-02 21:17:34,Great work!
124384,https://phabricator.services.mozilla.com/D124384,Bug 1728458 - Migrate browser-box.inc.xhtml to Fluent. r=emalysz!,PHID-USER-52tll3zmlcopd5aoarnv,2021-09-02 18:21:20,"Not sure if Emma has a better idea about this, given it's not exactly a localization question.

I think menus use title case, which explains `Close Sidebar` and `Synced Tabs`. If that's the case (🙄), this tooltip should stay lowercase because ""Sidebar"" is not a feature name that's always uppercase."
124384,https://phabricator.services.mozilla.com/D124384,Bug 1728458 - Migrate browser-box.inc.xhtml to Fluent. r=emalysz!,PHID-USER-5zrvxiuhmrwvh6kwlruw,2021-09-02 18:13:54,"@flod The label for closing the sidebar has ""Sidebar"" and the tooltip for the close button has ""sidebar"". Should I switch the close button tooltip to ""Sidebar"" so they match?"
124333,https://phabricator.services.mozilla.com/D124333,Bug 760412 - followup to remove now unused css selector. r=henry,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-09-03 11:00:10,"I'm not sure what you mean. If you remove this padding rule and add `margin-block-start: 0.5em` to the `.invitation-border` selector's scope below, it does produce the space, and it is only taken up when open.

There is some weird behaviour where a margin set on both the end of the summary and the start of the `.invitation-border` are squashed together, rather than added, so maybe there is something weird going on, but I haven't seen anything causing problems with just one margin being set.

You could still use `margin-block-end: 0.5em` in this `.invitation-details[open] > summary` selector if you want.

You should just avoid using `padding` because it means that the focus outline will grow in size when you expand. E.g. focus the `summary` item with `Tab` and press `Enter` and you'll see what I mean with the outline and padding."
124333,https://phabricator.services.mozilla.com/D124333,Bug 760412 - followup to remove now unused css selector. r=henry,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-09-03 10:33:29,margin-block-start doesn't work as it should here. The idea is to have some space between the summary and the open content below it.
124333,https://phabricator.services.mozilla.com/D124333,Bug 760412 - followup to remove now unused css selector. r=henry,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-09-02 11:34:43,"This would be better as a margin, otherwise the `focus-visible` outline is also offset.

This could also just be `margin-block-start: 0.5em` in the `.invitation-border` selector below."
124333,https://phabricator.services.mozilla.com/D124333,Bug 760412 - followup to remove now unused css selector. r=henry,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-09-02 11:34:43,Just have one suggestion for another part. Otherwise looks good.
124133,https://phabricator.services.mozilla.com/D124133,"Bug 1728462 - Do not require full Pipewire access, r=mtabara,stransky",PHID-USER-szigcrvmfcbhaupsaejh,2021-09-01 09:48:50,">>! In D124133#4034319, @TheEvilSkeleton wrote:
> @rmader do you know when D122904 is going to be included in Firefox releases? I'm using 92.0b9 and screen sharing doesn't seem to work after disabling `--filesystem=xdg-run/pipewire-0` so far.

Yes, you can check it out by clicking on the bug number in the phabricator revision (bringing you to https://bugzilla.mozilla.org/show_bug.cgi?id=1726211) ;). It's going to be in 93."
124133,https://phabricator.services.mozilla.com/D124133,"Bug 1728462 - Do not require full Pipewire access, r=mtabara,stransky",PHID-USER-jw6sfrrk3uy7hmjwvn4w,2021-09-01 01:42:53,@rmader do you know when D122904 is going to be included in Firefox releases? I'm using 92.0b9 and screen sharing doesn't seem to work after disabling `--filesystem=xdg-run/pipewire-0` so far.
124133,https://phabricator.services.mozilla.com/D124133,"Bug 1728462 - Do not require full Pipewire access, r=mtabara,stransky",PHID-USER-szigcrvmfcbhaupsaejh,2021-08-31 22:33:52,"cc @TheEvilSkeleton, @barthalion and @jhorak as you have been involved in the discussion in D110021"
124083,https://phabricator.services.mozilla.com/D124083,"Bug 1728354 - about:processes should show threads by default in Nightly, r=dthayer.",PHID-USER-vk66rnpoi4ww7y3tirt5,2021-08-31 17:07:22,`testing-exception-elsewhere`: There are various tests which run with these preffed on in `toolkit/components/aboutprocesses/tests`.
124033,https://phabricator.services.mozilla.com/D124033,No bug - Reviews doc: add nss-reviewers. r=sylvestre DONTBUILD,PHID-USER-cje4weq32o3xyuegalpj,2021-08-31 09:52:50,"You have touched the documentation in diff 476357, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a8a6aa70-0a3e-11ec-ad5d-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123983,https://phabricator.services.mozilla.com/D123983,Bug 1720139 - Ship v26.0.0 of the WebCompat System Addon,PHID-USER-fq5cjmydyylgktiqhb75,2021-08-30 21:15:41,tests are on github
123883,https://phabricator.services.mozilla.com/D123883,Bug 1727876 - Remove BasicCompositor. r?jrmuizel,PHID-USER-cje4weq32o3xyuegalpj,2021-08-27 23:46:55,"Code analysis found 4 defects in the diff 475775:
 - 4 defects found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/475775) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ad0ba761bfb80119a2647e5d0f617f063d5f32d2)."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-07 13:40:11,"You have touched the documentation in diff 478999, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/5a313874-0fd9-11ec-9f4e-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-07 12:36:14,typos
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-07 11:43:38,"{nav,  icon=thumbs-up, name=praise:} All the comments in this helper are really helpful! Thanks"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-07 11:43:38,"{nav,  icon=keyboard-o, name=typo:}"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-07 11:43:38,overload maybe? :) Or GC pressure?
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-cje4weq32o3xyuegalpj,2021-09-07 09:49:40,"You have touched the documentation in diff 478915, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/c7fd62bc-0fb9-11ec-84fb-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-07 08:41:16,address comments
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-07 08:40:34,"`takeCensus` and `drainAllocationsLog` should be independant.
So that `getAllAllocations` and `flushAllocations` should also be independant.

So yes, we should do the same in parent and content.
I ended up moving more code to allocation-tracker.js, as suggested.
But this is significant changes which justify a new review ;)"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-07 08:40:34,"I thought overhaul was a legit word :p
I mean something closer to `overwhelm`, something to say that you aim to reduce the GC size, which will speed it up by being less overwhelmed.

Is `to reduce GC overwhelm` making sense?"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-07 08:40:34,">>! In D123833#4044124, @jdescottes wrote:
> Great work! This works really nicely. I was able to introduce a few leaks and see them reported by the test. 
> Some nits + 1 parent/content inconsistency to check.
> 
> Some observations from testing the script.
> 
> 1/ I tried modifying devtools to add some leaks and see if I was picking them up with the script.
> At some point I added a simple console.log, logging a hardcoded string, in the browsing-context-target-actor initialize method.
> This was reported as a leak, whereas a dump() call didn't.

console API probably leak the string in its cache (the platform cache, or some devtools actor cache), while dump is logging and doesn't hold any reference to it anywhere.
Next patch would help understand why the string is kept in memory :)

> 2/ The leak reporter logged several content-process leaks for specialpowers jswindowactors. Maybe we should also filter them out?

This relates to this code:
```
        // We watch all globals in the content process, (instead of only DevTools global in parent process)
        // because we may easily leak web page objects, which aren't in DevTools global.
        const tracker = allocationTracker({ watchAllGlobals: true });
```
I would rather keep logging everything in the content process.
It is especially important to track web page objects, so that if anything keeps the page in memory, we know.
It might happen that some platform code, or code outside of devtools compartment do leak the page and we might not know.
Before I was using the same settings as in parent process `watchDevToolsGlobals: true` and the test wasn't correctly highlighting all the leaks that used to happen with client side targets.

I would keep this as-is for now and see if on the long run this starts being an issue.
I'm mostly working on parent process leaks, so I don't have much experience with this yet."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:} In theory compare functions for sort should return negative number / 0 / positive number and not true/false."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=question-circle, name=question:} There is a difference between the content process and parent process implementation here. 

In content process, we always do `getAllAllocations` and then `flushAllocations`, but in the parent process we do it differently: if we debug allocations we only flush, if we debug leaks we only getAllAllocations.

Not sure if there is a good reason for the difference? I don't think flushAllocations should impact getAllAllocations but I prefer to check. Can you take a look, and add a comment if needed. 

{nav,  icon=comment, name=thought:} To avoid those inconsistencies between parent and content process (unless they are here for a good reason!) maybe we can move all that to helpers in the tracker? `startAllocationsRecording(debugAllocations)` or something like that?"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:}"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:}"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:}"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:}"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"{nav,  icon=info-circle, name=nitpick:} I think you meant overall here?"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-6oeredp5pcvqrg736rdc,2021-09-03 11:32:39,"Great work! This works really nicely. I was able to introduce a few leaks and see them reported by the test. 
Some nits + 1 parent/content inconsistency to check.

Some observations from testing the script.

1/ I tried modifying devtools to add some leaks and see if I was picking them up with the script.
At some point I added a simple console.log, logging a hardcoded string, in the browsing-context-target-actor initialize method.
This was reported as a leak, whereas a dump() call didn't.

2/ The leak reporter logged several content-process leaks for specialpowers jswindowactors. Maybe we should also filter them out?"
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-01 17:18:02,rebase
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-09-01 09:19:16,rebase
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-cje4weq32o3xyuegalpj,2021-08-30 09:37:27,"You have touched the documentation in diff 475918, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/2a00a5cc-096c-11ec-8014-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-08-30 08:14:16,tweaks
123833,https://phabricator.services.mozilla.com/D123833,Bug 1539518 - [devtools] Log allocations sites of object being created during the test and not being freed.,PHID-USER-cje4weq32o3xyuegalpj,2021-08-26 23:44:44,"You have touched the documentation in diff 475608, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/ea48a0ac-06bd-11ec-9066-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123783,https://phabricator.services.mozilla.com/D123783,Bug 1727691 - Disable test_restore_windows_after_windows_shutdown.py for intermittent failures r=#intermittent-reviewers,PHID-USER-mefa72mp4kzwenywt7gj,2021-08-26 18:14:07,thanks
123681,https://phabricator.services.mozilla.com/D123681,Bug 1727631 - Part 1: Make nsRadioGroupStruct::mRadioButtons use nsTArray<RefPtr<HTMLInputElement>; r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-08-26 12:51:38,I guess this could have just a static_cast<int32_t> since the loop below requires use of signed int.
123681,https://phabricator.services.mozilla.com/D123681,Bug 1727631 - Part 1: Make nsRadioGroupStruct::mRadioButtons use nsTArray<RefPtr<HTMLInputElement>; r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-08-25 22:16:09,"Code analysis found 1 defect in the diff 475075:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/475075) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=967b459e8b7d812f52985f65fbe54157c3afbd54)."
123681,https://phabricator.services.mozilla.com/D123681,Bug 1727631 - Part 1: Make nsRadioGroupStruct::mRadioButtons use nsTArray<RefPtr<HTMLInputElement>; r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-08-25 21:24:26,"Code analysis found 1 defect in the diff 475058:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/475058) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=31e85195313f5058e9c186063d8242614ad68e63)."
123630,https://phabricator.services.mozilla.com/D123630,Bug 1726272 - Remove SetupEMEPref from EME tests. r?alwu,PHID-USER-ylrjjugid56tj3jy4vlz,2021-08-25 18:56:44,LGTM! Thanks!
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-09-02 17:37:39,Make ClientManager::ExpectOrForgetFutureSource to return false earlier and don't call ClientManager::GetOrCreateForCurrentThread if we are already shutting down.
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-08-31 14:15:56,Fixed small typo in the inline comment
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-bm5adgmlmltkqkya62e7,2021-08-25 00:06:15,typo nit: s/t/y/
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-bm5adgmlmltkqkya62e7,2021-08-25 00:06:15,"Thank you for this additional invariant check!  Indeed it seems like this strikes a good balance between its interaction with other tooling and also locating the invariant check closer to the moving parts.  It's likely the other location you picked would bit-rot in a non-helpful way.

Thank you very much for the detailed context!

Testing: This was manually validated but is hard/we don't want to reproduce the specific failure that necessitated this in tests as it's part of our native code, etc."
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-cje4weq32o3xyuegalpj,2021-08-24 20:12:46,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d175c1d2a922baaf0d214afe8be2a8d08ebdff53&selectedTaskRun=ERgUZqsQSyGcZf2mqHS4eg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123530,https://phabricator.services.mozilla.com/D123530,Bug 1727405 - Add a diagnostic assert to check that ClientManager::GetOrCreateForCurrentThread is not returning a stale ClientManager instance that is already shutdown. r?asuth!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-08-24 20:08:06,"@asuth this is technically triggering the assertion once the thread is being actually reused, an alternative approach that I did also try locally was to check that the ClientManager instance was cleared from the thread locals near the end of `WorkerThreadPrimaryRunnable::Run` ([here after WorkerJSContext is expected be go out of scope and ClientManager::Shutdown to be hit](https://searchfox.org/mozilla-central/rev/9759c03110173c8cf62ba0de21aa9b06b850c794/dom/workers/RuntimeService.cpp#2274))

that was making the diagnostic crash to be triggered exactly near when ClientManager was expected to shutdown and be cleared from the thread locals, but as a side effect the BloatView output wasn't producing anymore info useful to track down the leak that was triggering the diagnostic crash.

On the contrary I have verified locally that after this assertion is triggered BloatView does still include the details that would have helped to track down the leak to its source and so I decided to attach only this patch and not the other one.

Let me know what do you think about it."
123429,https://phabricator.services.mozilla.com/D123429,Bug 1727275 - Migrate Windows 10 jsreftest from mdc1 to Azure r=jmaher,PHID-USER-pffl6tdsfwurm6tc65ge,2021-08-24 17:03:20,"Done, crashtest-qr done in https://phabricator.services.mozilla.com/D123509"
123429,https://phabricator.services.mozilla.com/D123429,Bug 1727275 - Migrate Windows 10 jsreftest from mdc1 to Azure r=jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-08-24 17:01:52,thanks!
123429,https://phabricator.services.mozilla.com/D123429,Bug 1727275 - Migrate Windows 10 jsreftest from mdc1 to Azure r=jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-08-24 13:17:13,jsreftest doesn't need any virtualization (nor does crashtest) - they can use the default `virtual`.  reftest is the suite here that needs the virtual-with-gpu` as you have set.
123429,https://phabricator.services.mozilla.com/D123429,Bug 1727275 - Migrate Windows 10 jsreftest from mdc1 to Azure r=jmaher,PHID-USER-cje4weq32o3xyuegalpj,2021-08-24 12:11:57,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b1e1d824278469d62fde90855534734b09cd14a6&selectedTaskRun=GWXeQT6SR2GwmNi5_rSevA-0) failed, but we could not detect any issue.
Please check this task manually.

You have touched the documentation in diff 474154, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/54a9d14c-04c9-11ec-8179-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-09-01 07:20:06,"Thanks! @ochameau This LGTM!

Also thanks for fixing the backward-compat issue."
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-08-30 15:56:43,fix backward compat
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-25 11:40:40,"Also when testing backward compatibility i get this error (in the browser console) when opening the console panel the first time.
{F2994868}"
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-25 11:40:40,"{nav,  icon=question-circle, name=question:} It looks like this was the case before this patch but it seems like `setSaveRequestAndResponseBodies` is only called from the console? it's not called from the netmonitor ... i'm not sure why?
For example, If the pref is turned off, it has no effect in the netmonitor, unless the user switches to the console and refreshes( it might seem confusing).
The pref `devtools.netmonitor.saveRequestAndResponseBodies` also specifies `.netmonitor.` which means the pref would affect the netmonitor

Should we change this ? Should this code be moved to the FirefoxDataProvider?"
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-25 11:40:40,"{meme, src=thumbup}"
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-25 11:40:40,"Thanks for the work.

Testing backward compatibility, it does not seem to work. it looks like it might be related to error i posted in
the inline comments.
I also have a question and suggestion around this pref and the netmonitor.

Thanks"
123379,https://phabricator.services.mozilla.com/D123379,Bug 1727177 - [devtools] Fix devtools.netmonitor.saveRequestAndResponseBodies preference with new fission codepath.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-08-24 13:09:40,rebase
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-24 21:32:18,"Quick-bench says it's 1.65x quicker on gcc, maybe because it doesn't unroll the loop so the short-circuiting tests help? https://quick-bench.com/q/diEspookROTXStx3mcWINyb1UuU
But it's 1.07x slower on clang, so you win there! 👏 https://quick-bench.com/q/uPKe6DlVfZs7DIqdQ1hHMHXVIuc
In the end, this runs after the profiling session ends, so it's not too critical."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-24 21:32:18,Thank you for the thorough review with better code!
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-24 16:57:04,Nice comment!
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-24 16:57:04,"I don't really see an improvement in the generated code from these changes, and this is slightly longer. But I also don't see anything obviously worse; the loop is still unrolled and it has the same number of multiplications. So I'm fine with this."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-08-24 06:41:56,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4cde5e33819e28377138fae7c4807ba20f211817&selectedTaskRun=DrGhgteeSXWgzdWTIa0EwQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-24 06:16:39,Using Markus' suggested code with some tweaks.
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-24 02:29:13,"You're having too much fun! 😄 But yes it looks simpler, thank you. I may just tweak the loop a bit (to hopefully do fewer tests in practice)."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-24 01:45:22,"I wrote something shorter. How do you feel about it?

```
  // Output a timestamp, given as an int64_t value in nanoseconds, as
  // a floating point JSON number in milliseconds.
  void TimeI64NsProperty(const Span<const char>& aMaybePropertyName,
                         int64_t aTime_ns) {
    int64_t absNanos = std::abs(aTime_ns);
    int64_t integerMilliseconds = absNanos / 1000000;
    auto remainderNanoseconds = static_cast<uint32_t>(absNanos % 1000000);

    // Plenty enough to fit INT64_MIN (-9223372036854775808).
    static constexpr size_t DIGITS_MAX = 23;
    char buf[DIGITS_MAX + 1];
    int len = aTime_ns >= 0
                  ? SprintfLiteral(buf, ""%"" PRIu64, integerMilliseconds)
                  : SprintfLiteral(buf, ""-%"" PRIu64, integerMilliseconds);
    if (remainderNanoseconds != 0) {
      buf[len++] = '.';
      // Output up to 6 fractional digits. Exit early if the rest would
      // be trailing zeros.
      uint32_t powerOfTen = 100000;
      while (powerOfTen != 0 && remainderNanoseconds != 0) {
        auto digit = remainderNanoseconds / powerOfTen;
        remainderNanoseconds -= digit * powerOfTen;
        buf[len++] = '0' + static_cast<char>(digit);
        powerOfTen /= 10;
      }
    }
    buf[len] = '\0';
    Scalar(aMaybePropertyName, Span<const char>(buf, len));
  }
```

godbolt link: https://godbolt.org/z/nj8onjsed
Looks like the compiler turns the divisions into multiplications, and unrolls all 6 iterations of the loop.

I found the shifting of string pieces in the current patch hard to understand."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-24 00:20:00,Thanks!
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-08-23 23:12:09,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5957bfbc6b0ae00db21d5d1fb0a6af05206f6a36&selectedTaskRun=MkYusaMaSTOL3yksfY6_3g-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-23 22:45:32,Make JSON test output valid.
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-6gilzlesrxygczj5xep5,2021-08-23 22:44:39,"It's a ""cppunit"" test. There are ""cppunit"" tasks in Try: https://treeherder.mozilla.org/jobs?repo=try&group_state=expanded&revision=d62c5347e0040459323f416e6a67e68b67de99db
Locally, after `./mach build`, you can run `$MOZ_OBJDIR/dist/bin/TestBaseProfiler`."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-23 16:30:59,How do I run this test? It doesn't seem to be a gtest?
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-23 16:30:59,"This way of calling the writer does not produce valid JSON; `{ 5 }` is not valid. I'd prefer to add a test that exercises an ordering of calls that we actually do want to support. `{ ""field"": 5 }` or `[ 5 ]` (an array) would both be fine."
123329,https://phabricator.services.mozilla.com/D123329,Bug 1727036 - SpliceableJSONWriter::Time... functions output milliseconds with nanosecond precision - r?mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-08-23 13:00:45,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7327b6f5117c10c724c1bbd29cecb523a6242adb&selectedTaskRun=RnD8QCV3TCOTgexzWMZIWw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123228,https://phabricator.services.mozilla.com/D123228,Bug 1722261 - Use AUTO_PROFILER_REGISTER_THREAD where possible - r?canaltinova,PHID-USER-cje4weq32o3xyuegalpj,2021-08-24 04:50:59,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3f6e2923fef4a3010492af8c7853fd458a453f99&selectedTaskRun=d9VvtWmyRfuI56flZKLSEQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123228,https://phabricator.services.mozilla.com/D123228,Bug 1722261 - Use AUTO_PROFILER_REGISTER_THREAD where possible - r?canaltinova,PHID-USER-6gilzlesrxygczj5xep5,2021-08-24 04:37:01,Rebase.
123228,https://phabricator.services.mozilla.com/D123228,Bug 1722261 - Use AUTO_PROFILER_REGISTER_THREAD where possible - r?canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-08-23 15:15:11,Looks good to me!
123228,https://phabricator.services.mozilla.com/D123228,Bug 1722261 - Use AUTO_PROFILER_REGISTER_THREAD where possible - r?canaltinova,PHID-USER-cje4weq32o3xyuegalpj,2021-08-20 16:37:57,"The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=52d2221c93560beee287b760f445884a0f19cb8b&selectedTaskRun=dKvcpT4GSaeaWzDURylSlA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
123178,https://phabricator.services.mozilla.com/D123178,Bug 1724149 - Run the test in test_interrupted_reflow.html in a new tab. r?tnikkel,PHID-USER-uolr7ryycb5yqn6q4r4x,2021-08-20 07:00:16,Thanks!
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-qlxs3e2gjycjgcffqf6k,2021-08-31 07:30:54,"Ah, yes, you're right that registering foo.example.com won't propagate to bar.example.com even if ignoring subdomains in perm mgr. My mistake. Then this is correct and hopefully doesn't incur too much overhead."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-qlxs3e2gjycjgcffqf6k,2021-08-31 07:30:54,"I can probably file a good first bug for that then :)

IIRC this was done not so long ago to avoid these things happening accidentally in the future, so that code may be older than the perm mgr change."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-08-25 16:45:51,"Ah, good to know. I added it in explicitly here because the core logic for doing expiring permissions here I tried to mimic based off of the ContentBlockingUserInteraction permissions, which do a similar check here: https://searchfox.org/mozilla-central/rev/c8ea016b87997574e1ca9127a4c370032aa6ee79/toolkit/components/antitracking/ContentBlockingUserInteraction.cpp#41-52"
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-08-25 16:45:51,"The reason why I felt I had to do the check here is because we're adding the permission, and adding a permission for a subdomain IIRC doesn't also add the permission for the root domain in the permission manager. If someone loads `https://foo.example.com` and it loads with the COOP header set, we want to make sure that a load of `https://bar.example.com` is also considered high-value, so I thought I needed to register the permission for `https://example.com`. This was my way of doing it here."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-qlxs3e2gjycjgcffqf6k,2021-08-25 14:54:31,"If I understand correctly this function would be called on any resource load with COOP headers set? I wonder if the principal creation overhead can be avoided here. I'm not sure how/if document.domain comes into play here but since you're using testPermission instead of testExactPermission you're already ignoring sub-domains with the permission manager, so it's not necessary to fetch the site separately."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-qlxs3e2gjycjgcffqf6k,2021-08-25 14:54:31,"The permmgr [already takes care of this](https://searchfox.org/mozilla-central/rev/c8ea016b87997574e1ca9127a4c370032aa6ee79/extensions/permissions/PermissionManager.cpp#1569), so you should be able to remove this check."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-qlxs3e2gjycjgcffqf6k,2021-08-25 14:54:31,"Seems good, two minor notes :)"
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-o6ejrh2keak2abjiace7,2021-08-25 06:40:53,"Alright, it is actually intended. Then that also makes sense."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-o6ejrh2keak2abjiace7,2021-08-25 06:40:53,Makes sense.
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-08-24 22:39:13,"Noted, will fix this."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-08-24 22:39:13,"The idea behind this check is based on https://security.googleblog.com/2021/07/protecting-more-with-site-isolation.html, specifically this section:

>  Additionally, Chrome will now trigger Site Isolation based on the new Cross-Origin-Opener-Policy (COOP) response header. Supported since Chrome 83, this header allows operators of security-conscious websites to request a new browsing context group for certain HTML documents. This allows the document to better isolate itself from untrustworthy origins, by preventing attackers from referencing or manipulating the site's top-level window. It’s also one of the headers required to use powerful APIs such as SharedArrayBuffers. Starting in Chrome 92, Site Isolation will treat non-default values of the COOP header on any document as a signal that the document's underlying site may have sensitive data and will start isolating such sites. Thus, site operators who wish to ensure their sites are protected by Site Isolation on Android can do so by serving COOP headers on their sites. 

With this, I want to consider all sites which are served with non-default COOP header values as high-value, whether or not there is a COOP mismatch. In fact, we probably care even more about the mismatch case, as we'll be given a chance to re-select content processes after a mismatch, and want to make sure to isolate the site when we finish loading.

The other conditions which chrome uses to mark a site as high-value such as whether or not we're logged in and OAuth flows are not implemented yet, but could be implemented as separate permissions like `highValueOAuth`."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-08-24 22:39:13,"I used ""high value"" as the name because that's the wording which Chrome has used for their isolation strategy on Android, which we're mimicking. I think I'd prefer to continue to use that wording rather than the other ones you've proposed to keep that connection clear."
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-o6ejrh2keak2abjiace7,2021-08-23 14:04:38,"Is this really the place to add this? We're aborting just below if the sandbox and COOP is both non-null. And should we really add a high value for something that has a policy mismatch? It feels like it should be:

```
ìf (compareResult && resultPolicy != nsILoadInfo::OPENER_POLICY_UNSAFE_NONE) {
  AddHighValueCOOPPermission(resultOrigin);
}
```"
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-o6ejrh2keak2abjiace7,2021-08-23 14:04:38,"I guess that ""highValue"" is the term we've settled for, but it feels a bit vague. Since `IsolateHighValue` allows those that have a permission in the permission manager, maybe we could call it `IsolateAllowedSites`, `IsolatePermittedSites`, or `IsolateSitesWithPermission`?"
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-o6ejrh2keak2abjiace7,2021-08-23 14:04:38,"""Strategy used to determine //wheter// or not"""
123127,https://phabricator.services.mozilla.com/D123127,"Bug 1723797 - Add a separate pref to control process isolation strategy when fission.autostart is enabled, r=farre!,agi!,johannh!",PHID-USER-oszpryzadx4pdqrckjlp,2021-08-19 18:11:31,I can't approve this but this looks great from a GeckoView point of view!
122977,https://phabricator.services.mozilla.com/D122977,Bug 1706633 - disable browser_storage_fission_local_storage.js on linux debug r?#intermittent-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-08-18 16:57:58,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
122927,https://phabricator.services.mozilla.com/D122927,Bug 1724901. Add test. r?hiro,PHID-USER-uolr7ryycb5yqn6q4r4x,2021-08-18 02:21:21,"I might have to add a little bit of fuzz to this to make it pass everywhere, still waiting on full try results, but the failing case the text is super blurry so it'll be a far cry from the difference in the failing case before the patch of this bug."
122876,https://phabricator.services.mozilla.com/D122876,Bug 1718223 - Allow pref to control max throughput of EME decryption r?bryce,PHID-USER-7lvhgfq5gkk7sb2ler73,2021-08-18 17:28:44,Fixed missing % in log format string.
122876,https://phabricator.services.mozilla.com/D122876,Bug 1718223 - Allow pref to control max throughput of EME decryption r?bryce,PHID-USER-2gujohlr3u3puvz4jmvz,2021-08-18 15:40:11,"#check-in_needed handled, landing queued."
122876,https://phabricator.services.mozilla.com/D122876,Bug 1718223 - Allow pref to control max throughput of EME decryption r?bryce,PHID-USER-7lvhgfq5gkk7sb2ler73,2021-08-18 15:34:35,@bryce Can you land this patch for me?
122876,https://phabricator.services.mozilla.com/D122876,Bug 1718223 - Allow pref to control max throughput of EME decryption r?bryce,PHID-USER-yzgkpxbq6src7zt72e2b,2021-08-17 17:35:20,"> Apologies for causing duplicated work.
No problem.

Note for others, this carries over work from D122670.

Re testing: the current change doesn't change behaviour for users as the pref has the same value has the hard coded value prior to these changes. Aside from that we don't have test harness support for Widevine to cover this at time of writing."
122876,https://phabricator.services.mozilla.com/D122876,Bug 1718223 - Allow pref to control max throughput of EME decryption r?bryce,PHID-USER-7lvhgfq5gkk7sb2ler73,2021-08-17 17:26:50,Apologies for causing duplicated work.
122826,https://phabricator.services.mozilla.com/D122826,Bug 1726100 - Move wasm-sandboxing defaults to configure.,PHID-APPS-PhabricatorHeraldApplication,2021-08-17 11:59:36,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
122776,https://phabricator.services.mozilla.com/D122776,Bug 1524853 - Default text in task edit field does not update anymore if switching the calendar. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-08-19 00:32:09,That looks better. One less piece of weirdness.
122776,https://phabricator.services.mozilla.com/D122776,Bug 1524853 - Default text in task edit field does not update anymore if switching the calendar. r?darktrojan,PHID-USER-gm7rb4pr6udksctcwmad,2021-08-18 09:06:08,"Thanks for the advice. I will try to consolidate the ""calendar"" oberservation"
122776,https://phabricator.services.mozilla.com/D122776,Bug 1524853 - Default text in task edit field does not update anymore if switching the calendar. r?darktrojan,PHID-USER-gm7rb4pr6udksctcwmad,2021-08-18 09:06:08,">>! In D122776#3995444, @darktrojan wrote:
> Do you actually see this bug? I don't, apart from the `readonly`/`readOnly` snafu.

Yes, I can actually reproduce quite easily by changing the default calendar between a writable and a read-only one (in the calendar list) and seeing the field not changing its default text until I focus the field."
122776,https://phabricator.services.mozilla.com/D122776,Bug 1524853 - Default text in task edit field does not update anymore if switching the calendar. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-08-18 00:41:47,"Yeah, we need to. By calling addObserver on the composite calendar we're saying it does implement calIObserver. Without it we get a console error about missing functions every time one would be called.

That said, I don't know why we have a separate observer for the properties of the current calendar, when all of the notifications would come through this one (via the composite calendar) anyway."
122776,https://phabricator.services.mozilla.com/D122776,Bug 1524853 - Default text in task edit field does not update anymore if switching the calendar. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-08-18 00:41:47,"Do you actually see this bug? I don't, apart from the `readonly`/`readOnly` snafu."
122726,https://phabricator.services.mozilla.com/D122726,Bug 1721692 - [devtools] Wait for presShell in browser_aboutdevtools tests,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-08-18 07:18:47,"Thank you for the patch Julian!

LGTM

Honza"
122676,https://phabricator.services.mozilla.com/D122676,WIP: Bug 1725895 - Use MOZILLABUILD_MSYS_BIN env variable if exists,PHID-USER-pet3y5enxcdor4sofm4g,2022-01-11 18:32:53,Thank you mhentges for your MozillaBuild 4.0 work!
122626,https://phabricator.services.mozilla.com/D122626,"Bug 1725488: Rewrite simulcast mochitests, and remove the hooks they used. r?ng",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-17 17:58:20,rs+ for the webidl removal of `ChromeOnly `methods.
122626,https://phabricator.services.mozilla.com/D122626,"Bug 1725488: Rewrite simulcast mochitests, and remove the hooks they used. r?ng",PHID-USER-xkb3fuchnriak7xz6m4h,2021-08-14 02:44:48,Still need dom review for the removal of moz-prefixed webidl stuff.
122626,https://phabricator.services.mozilla.com/D122626,"Bug 1725488: Rewrite simulcast mochitests, and remove the hooks they used. r?ng",PHID-USER-d37r7ftyo2tyk7ulqtne,2021-08-13 21:02:50,LGTM
122576,https://phabricator.services.mozilla.com/D122576,Bug 1722727 - Restore all the last group of closed tabs at once after Firefox reboot. r=kashav,PHID-USER-dqffi5qe4k6gf6awk3zf,2021-09-08 18:59:17,"I've pushed the patch set to try, you can follow along here: https://treeherder.mozilla.org/jobs?repo=try&revision=ae70efc72eb6ca686440a7f5bd4cae6a5a42559d (session store tests only) and here: https://treeherder.mozilla.org/jobs?repo=try&revision=5c57bf399f2ba2dee3890ddd47044b3df95f7f67 (with `mach try auto`) (see https://firefox-source-docs.mozilla.org/tools/try/index.html for more details).

Let me know if you'd like me to push a certain test or a set of tests."
122576,https://phabricator.services.mozilla.com/D122576,Bug 1722727 - Restore all the last group of closed tabs at once after Firefox reboot. r=kashav,PHID-USER-dqffi5qe4k6gf6awk3zf,2021-08-28 20:10:28,I don't think the bug number is actually required in this comment. Blame can point to what bug it was added in. :-)
122576,https://phabricator.services.mozilla.com/D122576,Bug 1722727 - Restore all the last group of closed tabs at once after Firefox reboot. r=kashav,PHID-USER-dqffi5qe4k6gf6awk3zf,2021-08-28 20:10:28,"One little comment, but looks good other than that! Can land this after that gets fixed."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-17 17:54:20,Thank you for pointing it out.  I added possible symptoms in GPU/RDD/GMP.
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-17 17:54:20,"Makes sense.  Added the Process Explorer technique.  I personally prefer Process Hacker, but Microsoft tool should be better to be mentioned.."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-17 17:10:55,"Ok, then, carry on :-)"
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-17 15:13:47,testing-exception-other: This changes documents only.
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-cje4weq32o3xyuegalpj,2021-08-17 09:23:13,"You have touched the documentation in diff 471612, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/c767efd8-ff39-11eb-bdc2-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-17 08:49:09,"It's a strange name and confusing, but `ProgramFiles(x86)` (no whitespace) is the name of an environment variable holding a path to the `ProgramFiles (x86)` folder."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,I did not know that :-)   This is much better than my suggestion.
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,"I guess we should mention other processes here (e.g. GPU, GMP, etc...) as well, if only to state that there isn't (to my knowledge) an easy way to always detect these failures in browser.  The console will log messages if running debug (but I don't know what messages).  I think it makes sense to mention GPU proc specially, because when it crashes, the main process will relaunch it (up to some allowed number of failures).  I have no idea what happens with e.g. GMP crashes."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,tiny nit: s/crashed/crashes/
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,"Agreed.  Somehow, that frequently manages to skip my memory so I do it the hard way.  It's still worth mentioning the other ways of getting PIDs, for nasty cases like a frozen browser or a bug that is sensitive to interacting with the browser."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,nit: don't need the `%`s
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-16 21:53:39,Good updates!  I do appreciate when instructions show me how instead of just telling me how.  This WFM with a few small nits.
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-cje4weq32o3xyuegalpj,2021-08-16 19:26:51,"You have touched the documentation in diff 471426, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/be500ac4-fec2-11eb-90c2-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-16 18:38:54,"I added a new section ""Identify a process to attach a debugger to"".  I think using about:processes is the easiest? (especially with Fission)"
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-16 18:38:54,"Good point.  I added a new section ""How to find the location of firefox.exe"" that suggests using about:support.

I also extracted a step to find and launch WinDbg from the Start Menu."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-zmq6wly2a5a6nfdzdz7b,2021-08-16 18:38:54,"Thank you for the good nits!  I ended up making big changes, so let me request a review again.

I also tried to add [[ https://docs.microsoft.com/en-us/windows-hardware/drivers/debugger/enabling-postmortem-debugging | Postmortem Debugging ]] config, but it didn't work for Firefox.  Probably our crash reporter stole a crash."
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-APPS-PhabricatorHeraldApplication,2021-08-13 19:26:01,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-13 19:26:01,"Could you add info on how to get the PID?  Probably mention ProcessExplorer and the console output.  While there is also stuff like `MOZ_DEBUG_CHILD_PROCESS`, that's documented in the ipc docs, which you can't link to because they haven't landed :-)"
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-13 19:26:01,"nit: I know it's not part of this patch but, since we're here, this path doesn't render correctly.  Also, do you think it is more useful to explain how to find the release exe or how to find the exe for a local build (the `dist/bin` folder)?"
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-tlbbrslcyzg2g3zpe3l4,2021-08-13 19:26:01,Just got a couple of easy nits.  Thanks for filling in these gaps.
122525,https://phabricator.services.mozilla.com/D122525,"Bug 1725471 - Update the ""Capturing a minidump"" page. r=handyman",PHID-USER-cje4weq32o3xyuegalpj,2021-08-12 20:57:28,"You have touched the documentation in diff 470559, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/0b64bd12-fbaa-11eb-ab12-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
122475,https://phabricator.services.mozilla.com/D122475,Bug 1694144 - [remote] Add missing EXPORTED_SYMBOLS export for new module registry.,PHID-USER-6oeredp5pcvqrg736rdc,2021-08-12 13:05:05,testing-flag: fixes tests
122425,https://phabricator.services.mozilla.com/D122425,Bug 1725348 part 5 - Remove unnecessary code in ArrayConstructorImpl. r?jonco!,PHID-APPS-PhabricatorHeraldApplication,2021-08-12 14:11:56,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-ebebpbp2fnufsd3f2mah,2021-08-20 20:13:18,Rebase again because this didn't apply
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-cje4weq32o3xyuegalpj,2021-08-20 02:12:12,"Code analysis found 1 defect in the diff 472841:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=88cd296371cb83854df52914fe43dc2994ee0658&selectedTaskRun=OfodTuhjRuKRLQCI5rBl0Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/472841) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=88cd296371cb83854df52914fe43dc2994ee0658)."
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-cje4weq32o3xyuegalpj,2021-08-15 18:24:55,"Code analysis found 1 defect in the diff 471149:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/471149) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4b0601a2553179311cb8c0fb484828fea03e6d3d)."
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-cje4weq32o3xyuegalpj,2021-08-15 13:06:16,"Code analysis found 1 defect in the diff 471130:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/471130) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c4795ee793ec838741ffa949f4d58f2438647831)."
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-ebebpbp2fnufsd3f2mah,2021-08-13 12:32:47,I filed bug 1725615 to cover this.
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-cje4weq32o3xyuegalpj,2021-08-13 10:19:24,"Code analysis found 1 defect in the diff 470755:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/470755) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6c90f68aef98668e9baee90fdb6a9238d15e2b7d)."
122374,https://phabricator.services.mozilla.com/D122374,Bug 1724388 - Add support for catching and processing EXC_GUARD exceptions on macOS r=KrisWright,PHID-USER-ebebpbp2fnufsd3f2mah,2021-08-13 08:13:46,Put the right bug number in the message
122324,https://phabricator.services.mozilla.com/D122324,Bug 1725113 - Remove some references to TI in the Debugger.Memory docs. r?tcampbell!,PHID-USER-cje4weq32o3xyuegalpj,2021-08-11 08:59:29,"You have touched the documentation in diff 469656, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/cdfbe5be-fa81-11eb-a8a8-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-6oeredp5pcvqrg736rdc,2021-08-10 21:28:47,rebase
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-jp26w7fkaeadar63vok2,2021-08-10 16:55:21,Just all about changes of test resources and used by existing browser chrome tests.
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-6oeredp5pcvqrg736rdc,2021-08-10 15:31:42,Address review comments
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-6oeredp5pcvqrg736rdc,2021-08-10 15:29:38,I'll update to singular `command` (to remain consistent with `event`)
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-cje4weq32o3xyuegalpj,2021-08-10 14:24:50,"Code analysis found 2 defects in the diff 469169:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/469169) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5664ced18f4ac7337108a0ab1965b40566af9ddf)."
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-jp26w7fkaeadar63vok2,2021-08-10 14:16:09,"With the other patch you are introducing `events`. So would you mind changing the name of the module to `commands.jsm` and export `command`?

Same applies to the other handler types."
122224,https://phabricator.services.mozilla.com/D122224,Bug 1713442 - [remote] Rename all messagehandler test modules to follow the correct naming pattern,PHID-USER-6oeredp5pcvqrg736rdc,2021-08-10 13:08:15,lint
122174,https://phabricator.services.mozilla.com/D122174,Bug 1724839 - Move transform snapping code into gfxUtils. r?jrmuizel,PHID-USER-cje4weq32o3xyuegalpj,2021-08-10 03:00:25,"Code analysis found 9 defects in the diff 468923:
 - 9 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/468923) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e6dc97ecdc7a914e3781e2674d99c7cd50b700ea)."
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-cje4weq32o3xyuegalpj,2021-08-11 08:23:56,"Code analysis found 2 defects in the diff 469637:
 - 2 defects found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/469637) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=64417fca0e2ec2dfd70147720c67a3647de3345c)."
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-09 10:12:12,`std::move(aWindow)`.
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-09 10:12:12,`std::move(aWindow)`.
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-09 10:12:12,`std::move(aWidget)`.
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-09 10:12:12,Use `std::move(aWindow)` to avoid a silly addref / release. (You need to change `aWindow` by `mWindow` also below of course).
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-09 10:12:12,"Wayland tests are not yet there, and this is probably pretty hard to test."
122073,https://phabricator.services.mozilla.com/D122073,"Bug 1722450 [Linux] Hold reference to nsWindow in GtkCompositorWidget/WindowSurfaceWayland, r?emilio",PHID-USER-cje4weq32o3xyuegalpj,2021-08-09 10:08:37,"Code analysis found 4 defects in the diff 468494:
 - 2 defects found by clang-tidy
 - 2 defects found by code coverage analysis

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/468494) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1883337247eff66294e462785ceb1a761a5669a4)."
122023,https://phabricator.services.mozilla.com/D122023,Bug 1724461 - Update pdf.js to version 2.11.91 r=#pdfjs-reviewers,PHID-USER-n52qjcvis5cf232owqsp,2021-08-06 19:11:26,Well-tested upstream.
121972,https://phabricator.services.mozilla.com/D121972,Bug 1722261 - Stop using RegisteredThread in profiler_register_thread - r?canaltinova,PHID-USER-6gilzlesrxygczj5xep5,2021-08-10 12:04:05,"I've found an logic error with this patch (`GetOnThreadPtr()` will always be true at that point, leading to more problems). I'll fix this by removing this patch, and removing the whole block in a new patch..."
121972,https://phabricator.services.mozilla.com/D121972,Bug 1722261 - Stop using RegisteredThread in profiler_register_thread - r?canaltinova,PHID-USER-6gilzlesrxygczj5xep5,2021-08-09 10:21:38,Rebase. Add bug 1716959 to the stack.
121922,https://phabricator.services.mozilla.com/D121922,Bug 1672640 part 2: Fall back to GetNaturalBaselineBOffset to ask flex items what their baseline is. r=TYLin,PHID-USER-xumvt235xw6lumpq5yog,2021-08-06 05:15:52,"Thanks for the review!

>>! In D121922#3964320, @TYLin wrote:
> {nav,  icon=question-circle, name=question:} Not related to this patch, but I'm curious whether `mFrame->GetNaturalBaselineBOffset(mWM, BaselineSharingGroup::First, &mAscent)` supports a more frame types than `nsLayoutUtils::GetFirstLineBaseline(mWM, mFrame, &mAscent)` that can make the `nsLayoutUtils` one obsolete. 

Yeah, it's definitely possible we can simplify/coalesce the calls there.

I recall that certain baseline-getters having subtly different behavior, so any simplifications here would definitely need some testing to be sure the simplified approach agrees (subtleties & all) with the baseline that the frame would return in its ReflowOutput if we were to use that one, because we might use that one in some circumstances depending on the exact caching/incremental-layout codepath that we take)."
121922,https://phabricator.services.mozilla.com/D121922,Bug 1672640 part 2: Fall back to GetNaturalBaselineBOffset to ask flex items what their baseline is. r=TYLin,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-08-06 01:18:56,"{nav,  icon=info-circle, name=nitpick:}  CSS Reference: Baseline of nested flex containers with stretched textfield inside"
121922,https://phabricator.services.mozilla.com/D121922,Bug 1672640 part 2: Fall back to GetNaturalBaselineBOffset to ask flex items what their baseline is. r=TYLin,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-08-06 01:18:56,"This looks good to me. Thanks!

{nav,  icon=question-circle, name=question:} Not related to this patch, but I'm curious whether `mFrame->GetNaturalBaselineBOffset(mWM, BaselineSharingGroup::First, &mAscent)` supports a more frame types than `nsLayoutUtils::GetFirstLineBaseline(mWM, mFrame, &mAscent)` that can make the `nsLayoutUtils` one obsolete."
121922,https://phabricator.services.mozilla.com/D121922,Bug 1672640 part 2: Fall back to GetNaturalBaselineBOffset to ask flex items what their baseline is. r=TYLin,PHID-USER-xumvt235xw6lumpq5yog,2021-08-05 21:59:31,fix typo in test title
121872,https://phabricator.services.mozilla.com/D121872,Bug 1722252: Check if frame options should be ignored after checking if frame options are present. r=ckerschb,PHID-APPS-PhabricatorHeraldApplication,2021-08-10 18:20:27,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
121872,https://phabricator.services.mozilla.com/D121872,Bug 1722252: Check if frame options should be ignored after checking if frame options are present. r=ckerschb,PHID-USER-hvjw2anoq2st4rvqlvij,2021-08-10 18:20:27,"I am fine with the C++ changes. The test could be troublesome, but I am willing to accept that if there are no already known causes of an intermittent when running through TRY"
121872,https://phabricator.services.mozilla.com/D121872,Bug 1722252: Check if frame options should be ignored after checking if frame options are present. r=ckerschb,PHID-USER-hvjw2anoq2st4rvqlvij,2021-08-05 14:28:41,"Code looks solid - since we are on it (and as discussed on slack, please add a test) - thank you!"
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-08-09 08:06:04,"It's a balancing act. Generally if the UI can't draw a frame (if it wanted to) 60 times a second that's considered ""bad"", but OTOH we don't want to slow down the actual work too much to maintain that 60fps. I can see we're only informing the UI of progress every 10 cards anyway, and that seems like a reasonable rate."
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-08-09 05:46:13,"I tried changing the step to 20 and 30, and changing setTimeout to Services.tm.dispatchToMainThread, no significant differences."
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-08-09 05:46:13,This decrease the total time by ~10 seconds. It takes about 12 seconds to replicate 5000 entries.
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-08-09 05:43:40,Remove unneed modifyCard to improve performance
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-08-09 04:58:30,"You mean suitable for performance or for smooth progress bar?

In my test, the total time for replication was not changed by this patch. As for progress bar, with this patch, I can see the progress number keep increasing by 10."
121822,https://phabricator.services.mozilla.com/D121822,Bug 1721138 - Make data event handler async in LDAPClient.jsm to not block progress bar. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-08-09 03:38:50,"I'm not sure how much you've looked at what a suitable count is here, but I have some ideas to try:
* `Services.tm.dispatchToMainThread` instead of `setTimeout` may give different results, although it's effectively the same thing.
* Instead of counting loops, perhaps check if a certain amount of time has passed since the last update. The ideal refresh rate is 60Hz, although in practice I've found yielding that often is too much."
121771,https://phabricator.services.mozilla.com/D121771,Bug 1724061 - Make ServiceWorkerManager::PropagateUnregister to return earlier with an error if mActor is not set. r?asuth!,PHID-USER-bm5adgmlmltkqkya62e7,2021-08-04 20:40:12,"Thank you for all the clarifying information.  I'm unable to dig into more deeply into the scenario at this time, but this seems like a reasonable guard to have present in general and the detailed comment and context from this review and the linked-to context should be invaluable when we're able to get to performing further simplification of this part of the code.  (Between service worker child intercept support cleanups and cleanups of ServiceWorkerRegistrar, we can hopefully simplify things.)

Testing: I understand this to be addressing an intermittent failure and this change to be specialized to an artificial aspect of the testing scenario."
121771,https://phabricator.services.mozilla.com/D121771,Bug 1724061 - Make ServiceWorkerManager::PropagateUnregister to return earlier with an error if mActor is not set. r?asuth!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-08-04 19:57:33,"@asuth if this is a condition more likely to happen only in xpcshell tests, and we are convinced this should never going to happen in a real browser instance (even in our mochitests), it may also be reasonable to evaluate if it would make sense to have a diagnostic crash here.

Not sure if it would be valuable in practice, but I thought to at least mention it in a phabricator comment."
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-5fjyseoxs2dahs7ryywh,2023-01-23 20:49:54,"closing as obsoleted, superseded by D167594."
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-udrckg4snwyg3bct4zkg,2021-08-04 20:22:46,addon manager is not needed for this test
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-5fjyseoxs2dahs7ryywh,2021-08-04 20:00:28,@mixedpuppy I filed [Bug 1724061](https://bugzilla.mozilla.org/show_bug.cgi?id=1724061) to track a follow up for this xpcshell-test crash (and attached a patch that fails explicitly instead of crashing).
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-5fjyseoxs2dahs7ryywh,2021-08-04 14:54:56,"Thanks Shane, with that I've been able to reproduce the crash locally and taking an initial look into it.

That change to the assertTrue call does make the test to fail, that's expected because result isn't == to ""127.0.0.1"" and so assertTrue is tracking it as a failure as it should.

The crash is due to an assertion failure, it seems to be a side-effect triggered by unregistering the service workers from the uninstall observer, this is the js stack trace when the test gets to that assertion failure:

```
Thread 1 ""xpcshell"" received signal SIGSEGV, Segmentation fault.
0x00007fffed12ab07 in RefPtr<mozilla::dom::ServiceWorkerManagerChild>::operator-> (this=0x7fffd49d4660) at /home/rpl/mozlab/projects/webext-v3-serviceworker/mc-rebasing-patchstack/obj-x86_64-pc-linux-gnu/dist/include/mozilla/RefPtr.h:314
314         MOZ_ASSERT(mRawPtr != nullptr,
(gdb) call DumpJSStack()
0 unregisterServiceWorker/<(resolve = [function], [function]) [""resource://gre/modules/ServiceWorkerCleanUp.jsm"":36:25]
1 unregisterServiceWorker(aSW = ""[xpconnect wrapped nsIServiceWorkerRegistrationInfo @ 0x7fffca80bc40 (native @ 0x7fffd49d47c0)]"") [""resource://gre/modules/ServiceWorkerCleanUp.jsm"":28:9]
2 unregisterServiceWorkersMatching(filterFn = [function]) [""resource://gre/modules/ServiceWorkerCleanUp.jsm"":53:20]
3 removeFromPrincipal(aPrincipal = ""[xpconnect wrapped nsIPrincipal @ 0x7fffcefe1ee0 (native @ 0x7fffc7c589c0)]"") [""resource://gre/modules/ServiceWorkerCleanUp.jsm"":77:11]
    this = [object Object]
4 onUninstalled(addon = ""[object Object]"") [""resource://gre/modules/Extension.jsm"":413:27]
    this = [object Object]
5 callAddonListeners(aMethod = """"onUninstalled"""", aArgs = ""[object Object]"") [""resource://gre/modules/AddonManager.jsm"":1582:28]
    this = [object Object]
6 callAddonListeners(aArgs = ""onUninstalled,[object Object]"", ""[object Object]"") [""resource://gre/modules/AddonManager.jsm"":3573:44]
    this = [object Object]
7 uninstall() [""resource://gre/modules/addons/XPIInstall.jsm"":4670:28]
8 uninstallAddon() [""resource://gre/modules/addons/XPIInstall.jsm"":4693:8]
9 InterpretGeneratorResume(gen = ""[object Object]"", val = ""undefined"", kind = """"next"""") [""self-hosted"":1482:33]
10 AsyncFunctionNext(val = ""undefined"") [""self-hosted"":692:26]
    this = [object Object]
11 _execute_test() [""/home/rpl/mozlab/projects/webext-v3-serviceworker/mc-rebasing-patchstack/testing/xpcshell/head.js"":701:18]
    this = [object BackstagePass @ 0x7fffd78c4640 (native @ 0x7fffda24ef30)]
12 <TOP LEVEL> [""-e"":1:0]
```

The RefPtr that is triggering the assertion failure is the `ServiceWorkerManagerChild` one,  and after digging into this a bit more using `rr`, I can now see that the crash is triggered very likely because:

- the [xpcshell test harness is notifying as part of its cleanup phase the ""profile-before-change-qm"" topic](https://searchfox.org/mozilla-central/rev/064a1e6a2a6f6aa30be8bf4edea2f8408f779d4d/testing/xpcshell/head.js#701)

- [ServiceWorkerManager is observing that topic and it does shutdown and nullify the mActor RefPtr as part of its shutdown](https://searchfox.org/mozilla-central/rev/064a1e6a2a6f6aa30be8bf4edea2f8408f779d4d/dom/serviceworkers/ServiceWorkerManager.cpp#653-662)

- our uninstall observer is being executed (or the call to the service worker manager method) is called after that

There is a chance that this is mainly due to the way we are simulating the shutdown from an xpcshell test and not something that would be happening in the real browser instance, but seems worth to explicitly double-check that and also avoid that a test failure can trigger a crash in a debug build.

I'll look a bit more into this last point and then we should discuss this scenario with Andrew Sutherland to agree on how would be better to avoid it."
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-udrckg4snwyg3bct4zkg,2021-08-03 21:15:04,"Using this causes a crash:

```
        browser.test.assertTrue(
          result == ""127.0.0.1"",
          ""dns resolved to ""
        );
```"
121671,https://phabricator.services.mozilla.com/D121671,Bug 1723838 [mv3] add dns namespace webidl binding for serviceworker,PHID-USER-udrckg4snwyg3bct4zkg,2021-08-03 21:12:41,fix test
121620,https://phabricator.services.mozilla.com/D121620,"Bug 1723723 - stop using getURLSpecFromFile from JS code to avoid mainthread IO, r?florian",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-08-03 18:32:35,Filed https://bugzilla.mozilla.org/show_bug.cgi?id=1723807 for the idl definition updates. Thanks!
121620,https://phabricator.services.mozilla.com/D121620,"Bug 1723723 - stop using getURLSpecFromFile from JS code to avoid mainthread IO, r?florian",PHID-USER-4jlttcsengdawi5jugb4,2021-08-03 13:08:43,"Looks good to me, thanks for changing this!

While reviewing, I wondered ""so what happens if the wrong function is called, or if the user messed with a preference in about:config and we are no longer pointing to a folder, ..."" and I found the comments at https://searchfox.org/mozilla-central/rev/4f05a46731c1f7f111ec7a41ce38a34594aa0d37/netwerk/protocol/file/nsIFileProtocolHandler.idl#32-58 quite unhelpful.

I don't think this needs to be part of this patch, but I think it would be nice to rephrase the comments to explain that it's fine to call `getURLSpecFromActualFile` on any file, and that the only difference with `getURLSpecFromDir` is that it will ensure the url ends with a trailing `/`.

Comments like ""NOTE: Callers should use getURLSpecFromActualFile or getURLSpecFromDirFile if possible, for performance reasons."" and ""identical to getURLSpecFromFile, but is usually more efficient."" don't make much sense to me. Is it just slightly more efficient? When reading such a comment I would never guess that we can block the main thread for 5s.

`getURLSpecFromFile` should probably be made `[noscript]`, but if we want to do it we should give our Thunderbird friends a heads up, as there are 8 uses (+6 in tests) in `mail/`."
121570,https://phabricator.services.mozilla.com/D121570,Bug 1723389 - Bump the required version of system pixman.,PHID-APPS-PhabricatorHeraldApplication,2021-08-03 04:10:48,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
121520,https://phabricator.services.mozilla.com/D121520,Bug 1723487 - Make EmitToStringGaurd into a method on IRGenerator r?jandem,PHID-USER-cje4weq32o3xyuegalpj,2021-08-02 11:06:59,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=dc80ffcae621fff5bfeea49c9d6075c4912bda93&selectedTaskRun=P1flhqcGQGCk0-6wxRC5gQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
121369,https://phabricator.services.mozilla.com/D121369,MR2-265 - Fix leak of companion.xhtml. r?dthayer!,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-07-30 14:55:04,Thanks for finding and fixing this!
121319,https://phabricator.services.mozilla.com/D121319,Bug 1723050 - Part 21: Replace typedef by using in dom/performance/,PHID-USER-cje4weq32o3xyuegalpj,2021-07-30 15:25:29,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=dea0457a1565ef8cda51c64e5abc8f117c79fc1b&selectedTaskRun=Q2Ywq0XyQYWXBEZejDv2EQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
121269,https://phabricator.services.mozilla.com/D121269,Bug 1688791 - Part 3: Remove stale comment about js::UseOffThreadParseGlobal. r?tcampbell!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-09-21 18:25:49,rebase
121269,https://phabricator.services.mozilla.com/D121269,Bug 1688791 - Part 3: Remove stale comment about js::UseOffThreadParseGlobal. r?tcampbell!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-09-21 09:30:30,rebase
121269,https://phabricator.services.mozilla.com/D121269,Bug 1688791 - Part 3: Remove stale comment about js::UseOffThreadParseGlobal. r?tcampbell!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-09-09 08:37:09,rebase and address review
121269,https://phabricator.services.mozilla.com/D121269,Bug 1688791 - Part 3: Remove stale comment about js::UseOffThreadParseGlobal. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-09-06 15:48:03,(oops.. should have looked at next patches..)
121269,https://phabricator.services.mozilla.com/D121269,Bug 1688791 - Part 3: Remove stale comment about js::UseOffThreadParseGlobal. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-09-06 15:47:25,"In the future, I suggest we remove the decode-to-script APIs and instead say that if someone is using bytecode caching, they should be exposed to stencil APIs and explicitly instantiate."
121205,https://phabricator.services.mozilla.com/D121205,Bug 1722944 - Remove extraParams from Bing in search-config. r?daleharvey!,PHID-USER-2unm6j7c36hylplkvkb6,2021-08-02 07:02:02,Landed via remote-settings.
121205,https://phabricator.services.mozilla.com/D121205,Bug 1722944 - Remove extraParams from Bing in search-config. r?daleharvey!,PHID-USER-mllg45pvvu5q627ts2ka,2021-07-29 16:38:23,"This will be covered by existing tests, is essentially a refactor"
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-08-10 18:05:29,Rebased because the wpt expectation was updated
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-08-09 18:45:28,Rebase
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-08-05 17:40:15,Addressed comments
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-08-03 02:18:44,I will put this in the comment. Thanks.
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-08-03 02:13:04,Addressed comments
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-07-30 16:21:50,"{nav,  icon=pencil, name=suggestion (non-blocking):} If `LogicalPixelSize` have usages other than is`ResizeObserver` in the future, it might be better to change `LogicalSize` into a template class, and use it to implement `LogicalPixelSize`, so that the API is consistent, and have assertions checking the writing mode https://searchfox.org/mozilla-central/rev/2aa97aea1085cf1363582725407c514833ad47e4/layout/generic/WritingModes.h#36-38"
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-07-30 09:53:06,A bit unfortunate to have to convert back here to app units just so `SetLayoutRect` converts to double again but...
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-07-30 09:53:06,"Maybe just:

```
mSize = aSize;
if (aWM.IsVertical()) {
  std::swap(mSize.width, mSize.height);
}
```"
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-07-30 09:53:06,Just `mSize == aOther.mSize`?
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-07-30 09:53:06,Remove this? It's the default constructor.
121155,https://phabricator.services.mozilla.com/D121155,Bug 1587973 - Part 2: Introduce LogicalPixelSize for ResizeObserver.,PHID-USER-laiy2eaopxzo3vm6tath,2021-07-29 01:26:16,Address comments
121105,https://phabricator.services.mozilla.com/D121105,Bug 1722724: Start a cookbook that lists common needs for matchers r?andi,PHID-USER-cje4weq32o3xyuegalpj,2021-07-29 15:32:07,"Code analysis found 1 defect in the diff 464599:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 464599, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a4d9edb8-f07a-11eb-a139-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/464599) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f52d0781bf422081088d14ae6c13e717a2874343)."
121105,https://phabricator.services.mozilla.com/D121105,Bug 1722724: Start a cookbook that lists common needs for matchers r?andi,PHID-APPS-PhabricatorHeraldApplication,2021-07-29 14:32:04,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
121105,https://phabricator.services.mozilla.com/D121105,Bug 1722724: Start a cookbook that lists common needs for matchers r?andi,PHID-USER-dd6rge2k2csia46r2wcw,2021-07-29 14:25:44,">>! In D121105#3938478, @andi wrote:
> @tjr let's fix first the linting issues, and I will do the review afterwards.

Fixed the newline thing; the hyperlink target seems to be a best practice thing to have even if they're not referenced."
121105,https://phabricator.services.mozilla.com/D121105,Bug 1722724: Start a cookbook that lists common needs for matchers r?andi,PHID-USER-f4ru6vjyhiosmt2qmdi2,2021-07-29 07:19:29,"@tjr let's fix first the linting issues, and I will do the review afterwards."
121105,https://phabricator.services.mozilla.com/D121105,Bug 1722724: Start a cookbook that lists common needs for matchers r?andi,PHID-USER-cje4weq32o3xyuegalpj,2021-07-28 16:37:50,"Code analysis found 2 defects in the diff 464013:
 - 1 defect found by file-whitespace (Mozlint)
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 464013, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/182856ea-efbf-11eb-9940-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/464013) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f9abed91a8410c460dac7d1c24faad4a23f780c2)."
121055,https://phabricator.services.mozilla.com/D121055,Bug 1722664 - [devtools] Fix browser_net_error-boundary-01.js intermittent with server targets.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-28 11:22:54,rebase
121055,https://phabricator.services.mozilla.com/D121055,Bug 1722664 - [devtools] Fix browser_net_error-boundary-01.js intermittent with server targets.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-28 08:08:00,👍
121005,https://phabricator.services.mozilla.com/D121005,Bug 1690016 - Allow suggestions from engines that escape Unicode characters. r?standard8!,PHID-USER-2unm6j7c36hylplkvkb6,2021-07-27 21:17:40,"Looks good, thank you."
121005,https://phabricator.services.mozilla.com/D121005,Bug 1690016 - Allow suggestions from engines that escape Unicode characters. r?standard8!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-07-27 19:58:04,https://treeherder.mozilla.org/#/jobs?repo=try&revision=4904692531e548341dd14c9a04482da146e3c9a6
120955,https://phabricator.services.mozilla.com/D120955,Bug 1722492 - Use JDK on macOS if available,PHID-USER-bzjotvetedtwuks65m35,2021-07-27 13:07:29,"OK, this looks pretty sensible to me.  If you want a second opinion, flag :agi.  But if you're confident, roll on."
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-cje4weq32o3xyuegalpj,2021-08-10 15:36:55,"Code analysis found 1 defect in the diff 469308:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/469308) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=323cc4c7b4cc4e0d10f59247d172040149dd5f8f)."
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-hch2p624jejt4kddoqow,2021-08-10 15:17:39,Fix g++ build issue of using c++20 style aggregate initializers
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-jnkwwpwrtjrvq34xsacb,2021-08-05 10:15:48,Still looks good to me! 👍
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-cje4weq32o3xyuegalpj,2021-08-05 02:04:24,"Code analysis found 1 defect in the diff 467540:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/467540) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5e90a502ba2acc2cd1dd3b9b23de10d9093c4872)."
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-mq7y7r6dbls7vxputx7b,2021-08-04 03:22:16,LGTM
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-cje4weq32o3xyuegalpj,2021-07-30 21:53:14,"Code analysis found 1 defect in the diff 465721:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1bb99fa1bda005e38784ce730422b36e55283211&selectedTaskRun=W01r8uBbSLymtQ-24d17vA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/465721) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1bb99fa1bda005e38784ce730422b36e55283211)."
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-hch2p624jejt4kddoqow,2021-07-30 21:29:45,@anba I updated this patch with a new approach. The public API for `mozilla::intl::Collator` now prefers an options bag that closely resembles the ECMA 402 spec. This way internal Gecko consumers of the C++ API can prefer the spec behavior to create a consistent collation experience.
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-hch2p624jejt4kddoqow,2021-07-27 15:34:04,TODO: Debug printf left in.
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-jnkwwpwrtjrvq34xsacb,2021-07-27 08:09:14,Let's take advantage of having the length already computed.
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-jnkwwpwrtjrvq34xsacb,2021-07-27 08:09:14,Nit: This is actually the size of just `UCollator`. See <https://searchfox.org/mozilla-central/source/js/src/builtin/intl/IcuMemoryUsage.java> for where this value is computed.
120904,https://phabricator.services.mozilla.com/D120904,"Bug 1719550 - Use mozilla::intl::Collator in the SpiderMonkey; r?#platform-i18n-reviewers!,anba,tcampbell",PHID-USER-jnkwwpwrtjrvq34xsacb,2021-07-27 08:09:14,r=me with the comments fixed. Thanks!
120854,https://phabricator.services.mozilla.com/D120854,"Bug 1712339 - Remove mouse event default action and revert bug 1674658 r=annevk,jdai,jstutte",PHID-USER-nuepobnv4pvugt3cop6w,2021-07-26 17:16:52,"Bit weird perhaps, but this is tested as when we change either the test or code it'd get flagged. Thanks kagami for the quick turnaround!"
120854,https://phabricator.services.mozilla.com/D120854,"Bug 1712339 - Remove mouse event default action and revert bug 1674658 r=annevk,jdai,jstutte",PHID-USER-pet3y5enxcdor4sofm4g,2021-07-26 15:59:48,">>! In D120854#3928016, @annevk wrote:
> I would rather we keep the test but mark it as failing or change the pass condition.

Hmm, I'd like to ultimately change the test but yeah let's keep this patch as simple as possible."
120854,https://phabricator.services.mozilla.com/D120854,"Bug 1712339 - Remove mouse event default action and revert bug 1674658 r=annevk,jdai,jstutte",PHID-USER-pet3y5enxcdor4sofm4g,2021-07-26 15:58:02,(Restored a comment and an assertion that should be okay to exist)
120854,https://phabricator.services.mozilla.com/D120854,"Bug 1712339 - Remove mouse event default action and revert bug 1674658 r=annevk,jdai,jstutte",PHID-USER-nuepobnv4pvugt3cop6w,2021-07-26 15:57:19,I would rather we keep the test but mark it as failing or change the pass condition.
120854,https://phabricator.services.mozilla.com/D120854,"Bug 1712339 - Remove mouse event default action and revert bug 1674658 r=annevk,jdai,jstutte",PHID-USER-nuepobnv4pvugt3cop6w,2021-07-26 15:55:55,
120804,https://phabricator.services.mozilla.com/D120804,Bug 1696251 - Fix error in static analysis mach_commands.py. r=mhentges,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-07-30 20:12:22,Thanks Alex!
120749,https://phabricator.services.mozilla.com/D120749,"Bug 1714137 - [taskgraph] Unset 'crashreporter' for asan/tsan tests in mozinfo guess, r?jmaher!",PHID-USER-mefa72mp4kzwenywt7gj,2021-07-23 19:19:06,any chance we need to do this for ccov as well?
120699,https://phabricator.services.mozilla.com/D120699,Bug 1719963 - Better wallpaper for now.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-07-23 07:43:38,We don't have a repro for this yet...
120649,https://phabricator.services.mozilla.com/D120649,"Bug 1721874 - Remove getDecryptingGMPVideoDecoder. r?alwu,jolin",PHID-USER-yzgkpxbq6src7zt72e2b,2021-07-23 13:27:22,"Try push: https://treeherder.mozilla.org/jobs?repo=try&revision=d3c9b015633717cae94a2e4d2047b062801c8798&selectedTaskRun=NZl1bwVdQ0q653L2rg3yBQ.0 -- there's some concerning memory leaks on linux TSAN. Not sure why this would cause this, looks like it could be bad luck with existing intermittents, currently retriggering."
120649,https://phabricator.services.mozilla.com/D120649,"Bug 1721874 - Remove getDecryptingGMPVideoDecoder. r?alwu,jolin",PHID-USER-teurwg4bqiatsadgds4r,2021-07-22 20:37:49,LGTM.
120599,https://phabricator.services.mozilla.com/D120599,Bug 1698946 p4: Remove remaining old ClearType parameters code. r=jfkthame!,PHID-USER-cje4weq32o3xyuegalpj,2021-07-30 11:36:48,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=80e58a441d66079c65d739deae87c151c491522a&selectedTaskRun=aUUxrhEwTJaEsH6ONTCUFw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-26 19:10:48,"You have touched the documentation in diff 462951, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6e2bcde4-ee41-11eb-b123-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-26 15:51:49,"You have touched the documentation in diff 462872, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/2b8bf49e-ee25-11eb-b6ea-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-26 15:49:40,"You have touched the documentation in diff 462869, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/1b9a2fe2-ee25-11eb-8e27-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-26 13:46:03,"You have touched the documentation in diff 462808, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/ee856f20-ee11-11eb-8e02-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-26 12:23:55,"I suspect in this case the url will always come normalized (a loaded uri or an uri from the DB), but again this is not a big deal and it's all internal code that would be easy to change. The choice may actually depend on who are the main callers, if they must build an nsIURI then it would be a waste, if they already have one then it's ok. The db will extract strings of course."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-26 12:23:55,"Modulo the reload.svg bug, it looks good."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-07-23 16:11:34,Looks like you hit the reload.svg bug. Please commit a small change to that file and rebase your patch atop that commit.
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-23 11:34:23,"You have touched the documentation in diff 461973, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/d646c238-eba5-11eb-866b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-wf4lvys27odt7tkr4o3g,2021-07-23 10:53:21,"My chief concern was to ensure that we end up with a string representation of the url that is consistent, so ""https://www.google.com"" and ""https://www.google.com/"" are the same URL, nsIURL takes care of converting the former to the latter. I guess if we assume that callers will have already done that step, their source is already resolved then we can just take a string. Alternatively we could take a string and then do that conversion internally. What are your thoughts?"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-wf4lvys27odt7tkr4o3g,2021-07-23 10:53:21,Microdata has a pretty specific meaning so I think it is better to rename this to something more generic.
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=question-circle, name=question:} Shouldn't this add to the cache and the test check that?"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=question-circle, name=question:} is there a reason to use nsIURI instead of simple strings all around the API? This is not getting user input, afaict?"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=keyboard-o, name=typo:} pref name is wrong"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=info-circle, name=nitpick:}  I'd probably simplify method names to something like insert, getCached, queueFetch"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=question-circle, name=question:} This ""successfully"" seems to implicate we have no idea whether we fetched and there's no data or the fetch failed. I think we discussed about this being a potential thing we want to track to avoid hitting pages with no data. But maybe your plan is to only track that for the background fetcher case?"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=comment, name=thought:} from the code it looks like we require a restart, so the observer this adds is a bit pointless... not a big deal, just a thought, maybe we should just disallow fetching rather than the constructor"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"{nav,  icon=keyboard-o, name=typo:} THe"
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-erxup3oqd7if4an5l7ut,2021-07-22 14:59:53,"It would be nice for new code folders to get jsdoc checks like in https://searchfox.org/mozilla-central/source/browser/components/urlbar/.eslintrc.js, so we do a better job at documenting the code from the beginning.

There's nothing strictly blocking so approving, but I'm ok doing another pass, if you wish."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-22 12:10:21,"You have touched the documentation in diff 461545, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/7cbaa000-eae1-11eb-a51e-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 17:10:24,"You have touched the documentation in diff 461111, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e0d499dc-ea42-11eb-9f1b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 16:32:43,"You have touched the documentation in diff 461088, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/77562d90-ea3d-11eb-8b92-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120498,https://phabricator.services.mozilla.com/D120498,Bug 1721647: Add a stub page data service API to enable parallel development. r=Mak,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 16:29:41,"You have touched the documentation in diff 461086, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a078294a-ea3c-11eb-ac06-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
120448,https://phabricator.services.mozilla.com/D120448,Bug 1721559 - [devtools] Disable server targets for browser_setup_in_parent.js.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 09:37:11,"Code analysis found 1 defect in the diff 460822:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/460822) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=28999f1bbeda6e64d8f1a93e0f216cdd4526cdd9)."
120448,https://phabricator.services.mozilla.com/D120448,Bug 1721559 - [devtools] Disable server targets for browser_setup_in_parent.js.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-21 08:58:42,Thanks for the helpful comment Alex!
120448,https://phabricator.services.mozilla.com/D120448,Bug 1721559 - [devtools] Disable server targets for browser_setup_in_parent.js.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 08:39:18,"Code analysis found 1 defect in the diff 460797:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/460797) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=82a27f06ee4cdcd53962a89df623cb86206302ba)."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-11-24 15:59:53,"That's correct, because we don't want to add `--user` to `pip install` if the user has executed `./mach` from their own, self-managed virtualenv."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-11-24 15:59:53,"> or at the very least this could be rolled into bootstrap

FWIW, this would've potentially had similar requirements

> If removing this would have made things simpler that might have been a better route to take.. but oh well, too late now I guess.

Eh, removing this would mean that we wouldn't need to track `external_python`, but most of the other changes are still needed :)"
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 15:54:14,"{nav,  icon=comment, name=thought:} I have to say... I didn't know this command existed and looking at it I think it's a bit silly. The installation instructions on the `review` repo are fairly easy to follow, or at the very least this could be rolled into `bootstrap`. If removing this would have made things simpler that might have been a better route to take.. but oh well, too late now I guess."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-11-24 15:54:14,"{nav,  icon=question-circle, name=question:} To clarify, this is checking for the case where a user has a virtualenv activated whilst executing mach?"
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-08-20 15:08:17,"Ok, I think I see your point, and I'm going to propose some options.
First, stepping back with some context: we have two methods in which we've executed code in a virtualenv:

1. We spin up a `python` process directly from the virtualenv (e.g. `~/.mozbuild/_virtualenvs/mach/bin/python <script>`).
    * Downsides: startup cost (if done sequentially), difficult to share data with a ""parent"" Python process (have to serialize + deserialize)
    * Notes: doesn't modify `$PATH` or set `$VIRTUAL_ENV` env var
2. We activate a new virtualenv from within a python process.
    * Downsides: isn't the most stable due to dragging state from previous python environment
    * Notes: modifies `$PATH`, sets `$VIRTUAL_ENV` env var

Historically, we've used method 2 for ad-hoc virtualenv activations (scripts like `upload_symbols`, commands for `pip install`-ing).
Also historically, we've used method 1 for the Mach virtualenv.

-----

D120401 made the assumption that method 2 is better for Mach virtualenv activation, because it automates Mach env management in Python (no `./mach create-mach-environment`) //without// incurring the startup cost of a 2nd Python process. Part of this assumption is that, since methd 2 is sufficiently used, we're safe to embrace it despite its potential stability issues.

**My interpretation of your point** is that there **is** is a change in behaviour here: yes, we're still using an ""existing"" virtualenv method, but by changing from method 1 to 2 for the Mach venv, we are causing a behaviour change for code that runs in the Mach venv: the `$PATH` is now modified.

So, that leaves us with three options from my perspective:
* Option 0: Remove automatic mach-venv-management logic, go back to having a bash script start the relevant python process. Boo.
* Option 1. Start up a 2nd Python process for the Mach virtualenv, essentially using method 1 (but keeping the automatic mach virtualenv creation). I don't like the performance penalty here.
* Option 2. **your preference, IIUC:** Do in-process activation (method 2), but manually remove the `$PATH` modifications.
    * Benefits: No performance cost, and we're more likely to not cause regressions.
    * Downsides: **this was my concern from above:** we're making method 2 behave differently under different circumstances. For the Mach venv, we'd revert `$PATH` appending, but for other venvs, we'd keep it? This kind of exception can be a footgun in the future.
* Option 3. **my original preference:** Do in-process activation //exactly// like method 2
    * Downsides: Risk of regression for other code that runs in the Mach venv

-----

I think I've got a compromise here: What if we reverted the `$PATH` modifications, but **only** in the short-medium term?
I don't like the idea of making method 2 behave differently under different circumstances, since it may cause surprises. So, I'd want to push towards an alternative way of discovering the system/entry-point python (such as that `ENTRY_SHELL_PYTHON_EXECUTABLE` environment variable, or maybe a `.original_python` property on `VirtualenvManager`), and eventually make the Mach virtualenv activation behave relatively identical to command activation.

@glandium Would you be satisfied with that solution?"
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-20 08:23:27,"I'm not saying it should never be modified, I'm saying it should not be modified in cases where it's not currently modified, but that's what D120401 does."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-08-19 20:56:17,"Ah, yes, when a virtualenv's `python` is invoked directly, the virtualenv isn't activated (unlike with `source venv/bin/activate` or `activate_this.py`). This means that:
* `os.environ[""VIRTUAL_ENV""]` is not set.
* `os.environ[""PATH""]` is not prepended with the virtualenv `bin`.

So, you're right that `PATH` isn't **always** modified.
However, I don't agree that we should tweak it such that it's **never** modified:
* Look at [[ https://searchfox.org/mozilla-central/search?q=%28%5C.activate_virtualenv%5C%28%5C%29%29%7C%28%5C.activate%5C%28%5C%29%29&path=*.py&case=true&regexp=true | all the cases in which virtualenvs are activated in-process ]] - changing activation behaviour may break these existing usages!
* We're already embracing the `activate_this.py` script, and it seems unexpected to want to circumvent some of its behaviour today.
* If we work around `PATH`-modification in `activate_this.py`, then what do we do in the case of `source venv/bin/activate && python <script>`?
* There's already an alternative solution proposed in this patch: `ENTRY_SHELL_PYTHON_EXECUTABLE`."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-19 20:39:52,"We don't always call activate. But we do in `mach python`, so `mach python` is special in that regard. It even has an option not to activate. Add a `print(os.environ[""PATH""])` is some other command, like `mach build`."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-08-19 14:16:19,"> It is _not_ used to it. It's used to run with a virtualenv python, that does *not* set PATH.

[[ https://searchfox.org/mozilla-central/source/python/mozbuild/mozbuild/virtualenv.py#441 | Here is where we activate virtualenvs ]].
`self.activate_path` is [[ https://searchfox.org/mozilla-central/source/python/mozbuild/mozbuild/virtualenv.py#123-124 | activate_this.py ]].
[[ https://github.com/pypa/virtualenv/blob/20.2.2/src/virtualenv/activation/python/activate_this.py#L21 | here ]] is where `activate_this.py` adds the virtualenv's `bin_dir` to the `$PATH`.

You can verify this by doing:
```
$ ./mach python
import os
os.environ[""PATH""]
# At the front of the path is $objdir/_virtualenvs/common/bin
```

If I'm missing something, I need you to elaborate further."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-19 01:14:20,"> The tree is already used to it

It is _not_ used to it. It's used to run with a virtualenv python, that does *not* set `PATH`. You wouldn't need the gymnastics you use in this patch if `PATH` wasn't set."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-08-13 16:20:05,"> Whether or not the virtualenv is ""activated"" in-process or not, I don't think the PATH change is wanted.

👍 , I can operate on `moz-phab` and `pip` via the base python executable, rather than via the `PATH`.

> I'm fairly sure there are other places that rely on PATH not containing the virtualenv binary directory.

The ""append-virtualenv-to-`PATH`"" logic isn't something that we've defined, it's part of the default `activate_this.py` behaviour (as defined by the `virtualenv` module). I don't think it's a good idea to change that behaviour because:
* The tree is already used to it
* I don't want to mutate/change from default `activate_this.py` behaviour unless it's sufficiently warranted.

> This code here demonstrates that it's easier to call sys.executable when we do want to execute something from the virtualenv than to jump through hoops to adjust PATH.

You got it 👍"
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-13 07:30:46,"Whether or not the virtualenv is ""activated"" in-process or not, I don't think the `PATH` change is wanted. See the gymnastic you have to go through here, and as I said in the comment above, I'm fairly sure there are other places that rely on `PATH` not containing the virtualenv binary directory. This code here demonstrates that it's easier to call sys.executable when we do want to execute something from the virtualenv than to jump through hoops to adjust `PATH`."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-13 07:30:46,"I feel the logic should be reversed and the variable be something like ""using_system_python"". Because at quick glance, I was like ""but at this point we're always in a virtualenv"", except we're not."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-13 07:30:46,os.pathsep
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-08-13 07:30:46,os.pathsep
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-07-29 22:02:34,"You've marked this as ""requires changes"", but it's unclear changes are expected.
See my comment on virtualenv activation tradeoffs [[ https://phabricator.services.mozilla.com/D120401#inline-668399 | here ]]."
120397,https://phabricator.services.mozilla.com/D120397,"Bug 1717051: Remove ""install-moz-phab"" from nativecmds",PHID-USER-7nex5aeqnqfpycmmgc7g,2021-07-27 05:29:49,This is another difference between VirtualenvManager.activate and running the virtualenv python that is probably not desirable (and I'm fairly sure there are other things that rely on `PATH` not containing `$virtualenv/bin`).
120347,https://phabricator.services.mozilla.com/D120347,Bug 1721384 - [devtools] Fix browser_net_websocket_stacks.js with server side targets.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 08:53:44,"Code analysis found 7 defects in the diff 460801:
 - 7 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/460801) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8c3bf191e0eab038ac88592124ecc544749fb88a)."
120347,https://phabricator.services.mozilla.com/D120347,Bug 1721384 - [devtools] Fix browser_net_websocket_stacks.js with server side targets.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-20 14:06:51,"Code analysis found 1 defect in the diff 460369:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/460369) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=00204befda80e547b4c01b7b26d1fedd39f273b6)."
120297,https://phabricator.services.mozilla.com/D120297,WIP: Bug 1715528 - Update ImageCache cleaner in ClearDataService.jsm to support clearing data within containers. r=prathiksha,PHID-USER-cje4weq32o3xyuegalpj,2021-07-22 02:15:51,"Code analysis found 2 defects in the diff 461402:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/461402) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=379698e56903c6ee29c87400c0346d1bfd50b172)."
120247,https://phabricator.services.mozilla.com/D120247,Bug 1721190 - Allow fallback from WR to SW-WR on Android.,PHID-USER-23vjewznejm4mnldghrh,2021-07-19 15:35:15,config change
120197,https://phabricator.services.mozilla.com/D120197,Bug 1720880 - Consolidate a bit bookmarks popup styles. r=dao,PHID-APPS-PhabricatorHeraldApplication,2021-07-19 16:04:18,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
120147,https://phabricator.services.mozilla.com/D120147,Bug 1721072 - Remove unnecessary callback to get the objdir list. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-22 02:33:41,"Thanks for taking a look!

I ran some tests and it all seems to work as expected. Most importantly, this scenario worked as expected:

 1. Connect to a GeckoView-example build running on Android which was compiled on this machine.
 2. In the remote about:profiling settings, clear the objdir list.
 3. Capture a remote profile.
 4. Notice that the libxul symbols are garbage.
 5. Clear the IndexedDB storage of profiler.firefox.com.
 6. Add the correct objdir in the remote about:profiling settings.
 7. Capture another profile.
 8. Notice that the libxul symbols are now correct."
120147,https://phabricator.services.mozilla.com/D120147,Bug 1721072 - Remove unnecessary callback to get the objdir list. r=canaltinova,PHID-APPS-PhabricatorHeraldApplication,2021-07-21 18:44:10,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
120147,https://phabricator.services.mozilla.com/D120147,Bug 1721072 - Remove unnecessary callback to get the objdir list. r=canaltinova,PHID-USER-hch2p624jejt4kddoqow,2021-07-21 18:44:10,"It looks like I was working around stale objdir listings, and forcing it to always get the latest objdir settings from the store. The code flow here is a bit obtuse, and hard to follow. I would probably manually put in console.log values to ensure that I can update the objdirs on remote and local profiling sessions. It's possible the old behavior isn't reproducing any more. I have low confidence in what's going on here.

Steps to reproduce stale objdir, which should be tried locally and remotely:

* Set objdir settings to configuration A
* Close profiler
* Re-open profiler
* Change objdir settings to configuration B
* Capture a profile

Expected Result:

* Configuration options B are used

Incorrect Result:

* Configuration options A are used


I would test with both a local devtools window, and remote devtools window. It me be worth adding a test for, but could be hard to actually write one.

I'm marking as r+ since I'm blocking on this, but I would do some manual testing trying to get some stale objdir results here."
120147,https://phabricator.services.mozilla.com/D120147,Bug 1721072 - Remove unnecessary callback to get the objdir list. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-19 23:14:14,"Oh, thanks for finding that! So the scenario that this patch breaks is:

 1. Start with an empty objdir list.
 2. Capture a profile from Android for a build that uses a locally-compiled Gecko. This will have missing or incorrect symbols.
 3. Add the objdir to the objdir list.
 4. Reload the profiler tab with the previously captured profile.

Now, after this patch, we not rerspect the updated objdir list. But we will respect it when another profile is captured.

However, I don't think this would have worked correctly anyways - usually, in step 2, we will have *some* symbols, and the incorrect libxul symbol table will be cached, and then step 4 won't request symbols again from the browser - it'll use the incomplete cached symbol table.

@gregtatum, do you remember which scenario you had in mind in D49006?"
120147,https://phabricator.services.mozilla.com/D120147,Bug 1721072 - Remove unnecessary callback to get the objdir list. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-19 22:05:25,"I'm not sure why the previous behavior was necessary back then. I want to make sure we are not breaking anything. This was changed here: https://phabricator.services.mozilla.com/D49006. The commit message says ""it wasn't fetching the latest list of objdirs."", do you have an idea why? Usually adding stuff to objdirs happens before recording a profile, right? Does it need to wait for the profile at all?"
120096,https://phabricator.services.mozilla.com/D120096,Bug 1720928: Bump Updatebot to get the too-long-comment fix r?jewilde,PHID-USER-xsgci3i2hsoare3yoz63,2021-07-16 17:52:10,Double checked commit hash. Looks good!
120046,https://phabricator.services.mozilla.com/D120046,Bug 1720662 - Implement a tab type property. r=john.bieling,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-19 03:09:23,Split up calendar types
120046,https://phabricator.services.mozilla.com/D120046,Bug 1720662 - Implement a tab type property. r=john.bieling,PHID-USER-4wdjal4tjyfedkowehzk,2021-07-16 05:36:07,Can we have a dedicated task type?
120046,https://phabricator.services.mozilla.com/D120046,Bug 1720662 - Implement a tab type property. r=john.bieling,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-16 04:25:39,Added a comment to tabmail.js about updating this code.
120046,https://phabricator.services.mozilla.com/D120046,Bug 1720662 - Implement a tab type property. r=john.bieling,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-16 03:46:41,"This is a behaviour change. Some tab types without a browser (calendar, etc.) already get assigned IDs, we've just been denying their existence."
120046,https://phabricator.services.mozilla.com/D120046,Bug 1720662 - Implement a tab type property. r=john.bieling,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-16 03:41:30,Did some rearranging.
119996,https://phabricator.services.mozilla.com/D119996,Bug 1720696: Ensure mMsaa is null when creating an sdnAccessible with an nsINode r?eeejay,PHID-USER-lmegrwffx67e2xxsnkfv,2021-07-15 16:50:02,"I'm not sure if this is what we want, but posting so you can see what I mean re: that slack message"
119894,https://phabricator.services.mozilla.com/D119894,"No Bug - doc: Clarify nav-replace for WindowContext and WindowGlobal{Parent,Child}, r=smaug",PHID-USER-7hxjutcooeszod3rg3dr,2021-07-14 18:22:55,Thanks
119894,https://phabricator.services.mozilla.com/D119894,"No Bug - doc: Clarify nav-replace for WindowContext and WindowGlobal{Parent,Child}, r=smaug",PHID-USER-cje4weq32o3xyuegalpj,2021-07-14 16:07:21,"You have touched the documentation in diff 458602, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/18236e46-e4bb-11eb-8562-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
119844,https://phabricator.services.mozilla.com/D119844,"Bug 1718119 - When emitting messages for display, start with a UTF-8 BOM. r=mkmelin",PHID-USER-c5gx2n5wnlaytpohtj4m,2021-07-14 11:38:53,"LGTM, r=mkmelin"
119844,https://phabricator.services.mozilla.com/D119844,"Bug 1718119 - When emitting messages for display, start with a UTF-8 BOM. r=mkmelin",PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-14 03:49:59,"Okay, no, that's not a good idea."
119794,https://phabricator.services.mozilla.com/D119794,Bug 1718844 - handle certificates not being available in the remembered client authentication decision dialog r?rmf,PHID-USER-e26y6rgpwk4li2iuj4oh,2021-07-15 20:19:09,"I added a comment explaining it. Basically, it has to be of the right format, but the data identifies a certificate that shouldn't exist."
119794,https://phabricator.services.mozilla.com/D119794,Bug 1718844 - handle certificates not being available in the remembered client authentication decision dialog r?rmf,PHID-APPS-PhabricatorHeraldApplication,2021-07-15 12:31:10,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
119794,https://phabricator.services.mozilla.com/D119794,Bug 1718844 - handle certificates not being available in the remembered client authentication decision dialog r?rmf,PHID-USER-ners37ntg76ccfm27mev,2021-07-15 12:31:10,Is there a special reason for using this key or it is just random? Is AAAAAAAA...AAAA a special value?
119794,https://phabricator.services.mozilla.com/D119794,Bug 1718844 - handle certificates not being available in the remembered client authentication decision dialog r?rmf,PHID-USER-ners37ntg76ccfm27mev,2021-07-15 12:31:10,Looks good.
119744,https://phabricator.services.mozilla.com/D119744,Bug 1648137 - Part 4: Fully clear the decimal quantity before assigning a new value. r=#platform-i18n-reviewers!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-08-20 16:37:58,Address review comments
119744,https://phabricator.services.mozilla.com/D119744,Bug 1648137 - Part 4: Fully clear the decimal quantity before assigning a new value. r=#platform-i18n-reviewers!,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-07-26 17:54:11,"Thanks!

This should be covered by tests in other patches in this patchset."
119744,https://phabricator.services.mozilla.com/D119744,Bug 1648137 - Part 4: Fully clear the decimal quantity before assigning a new value. r=#platform-i18n-reviewers!,PHID-USER-cje4weq32o3xyuegalpj,2021-07-13 12:08:11,"The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c8a5757ecf91feec65f5e854b3920768b65c1006&selectedTaskRun=GsQhgSwtTvmLOV6uKToxsQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c8a5757ecf91feec65f5e854b3920768b65c1006&selectedTaskRun=KBljbqSbQp6SpHwkugrESQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c8a5757ecf91feec65f5e854b3920768b65c1006&selectedTaskRun=PSsLK-LKRgK-umpOjv8v1g-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c8a5757ecf91feec65f5e854b3920768b65c1006&selectedTaskRun=XE3hZJWOSPykVRVacDxlYw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
119694,https://phabricator.services.mozilla.com/D119694,"Bug 1715167 - Part 7: Add tests for precursor principals, r=ckerschb",PHID-APPS-PhabricatorHeraldApplication,2021-07-14 13:01:11,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
119694,https://phabricator.services.mozilla.com/D119694,"Bug 1715167 - Part 7: Add tests for precursor principals, r=ckerschb",PHID-USER-cje4weq32o3xyuegalpj,2021-07-12 23:10:14,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3d95304fe6a6d91da0a7ba0cea709bab0e44d43d&selectedTaskRun=B5zsjiDfS2K3_CfJ_rV9mA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
119594,https://phabricator.services.mozilla.com/D119594,Bug 1719413 - Init NntpModuleLoader.jsm and NntpService.jsm to start implementing NNTP in JS. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-07-12 06:20:58,Update a comment
119594,https://phabricator.services.mozilla.com/D119594,Bug 1719413 - Init NntpModuleLoader.jsm and NntpService.jsm to start implementing NNTP in JS. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-07-12 06:16:12,"user_pref is ... one way to set the pref. So perhaps let's just say ""set the mailnews.nntp.jsmodule pref to true"""
119594,https://phabricator.services.mozilla.com/D119594,Bug 1719413 - Init NntpModuleLoader.jsm and NntpService.jsm to start implementing NNTP in JS. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-07-12 06:16:12,Looks good. Let's wait until after the merge before landing.
119544,https://phabricator.services.mozilla.com/D119544,"Bug 1718436 - Don't register the ""Recently Closed Tabs"" middle click handler for menuitems, r?Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-07-16 10:28:28,🎉
119544,https://phabricator.services.mozilla.com/D119544,"Bug 1718436 - Don't register the ""Recently Closed Tabs"" middle click handler for menuitems, r?Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-07-16 10:28:28,Nit: this will look mysterious to future readers - can you add a code comment explaining why we don't need to do this for `menuitem`s?
119544,https://phabricator.services.mozilla.com/D119544,"Bug 1718436 - Don't register the ""Recently Closed Tabs"" middle click handler for menuitems, r?Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-07-16 10:28:28,"Glorious, thank you!"
119544,https://phabricator.services.mozilla.com/D119544,"Bug 1718436 - Don't register the ""Recently Closed Tabs"" middle click handler for menuitems, r?Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-07-09 23:25:02,">>! In D119544#3886964, @Gijs wrote:
> 2. This utility JSM is fun because it applies to both subviews in panels (hamburger -> history -> recently closed tabs -> click item) and the main menu. Given that the hamburger works right now, and doesn't open 2 tabs (just 1), I infer it must be using this code, which we're removing. That sounds like it will break the subview functionality in there, which seems bad. But perhaps I'm missing something?

I wrote this very confidently and then tried to searchfox and panicked because I couldn't actually find the code that does this, despite being sure it existed, in my head. But hey, midnight brain, right?

No, the code is just hard to find, because it uses string concatenation to invoke the `getTabsFragment` method, here: https://searchfox.org/mozilla-central/rev/a9851cca236e03d088d7528dd27445080475a68e/browser/components/customizableui/CustomizableWidgets.jsm#204 . I would not be opposed to making that use a ternary and including the full `getTabsFragment` and `getWindowsFragment` names so it's easier to find, either..."
119544,https://phabricator.services.mozilla.com/D119544,"Bug 1718436 - Don't register the ""Recently Closed Tabs"" middle click handler for menuitems, r?Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-07-09 23:20:42,"Thanks for writing a patch here. I have two requests:

1. Please can we add an automated test, so hopefully we notice next time things break. The fix in the other bug got caught by `browser_history_menu.js`, I'm assuming it's possible to do something similar here.
2. This utility JSM is fun because it applies to both subviews in panels (hamburger -> history -> recently closed tabs -> click item) and the main menu. Given that the hamburger works right now, and doesn't open 2 tabs (just 1), I infer it must be using this code, which we're removing. That sounds like it will break the subview functionality in there, which seems bad. But perhaps I'm missing something?"
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-ci5kitnqqnu6cv55ght7,2021-07-09 16:28:11,thanks for the catch!
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-ci5kitnqqnu6cv55ght7,2021-07-09 16:28:11,thanks for the catch!
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-09 13:26:20,"{nav,  icon=keyboard-o, name=typo:} s/necesary/necessary"
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-09 13:26:20,"{nav,  icon=keyboard-o, name=typo:} s/stactrace/stacktrace"
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-09 13:26:20,"Thank you bomsy, this does work well and the 2 tests are passing with target switching and `--verify` 👍"
119494,https://phabricator.services.mozilla.com/D119494,Bug 1717050 - Network events and network stacktrace events no longer depend on their orders r=nchevobbe,PHID-USER-ci5kitnqqnu6cv55ght7,2021-07-09 08:45:52,TRY https://treeherder.mozilla.org/jobs?repo=try&revision=70b78ad7d824fd2a4653c52b5b6c77f2b043ca6d
119443,https://phabricator.services.mozilla.com/D119443,Bug 1705141 - Move the usage of SlotAssignedNodeChanged into (Insert|Append|Remove)AssignedNode functions r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-07-12 16:52:34,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8765e2e8ed49eb4f8fe2e9a453d9e736b8df82ae&selectedTaskRun=TVK5SWP8Ta6KuG89yLaP2Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
119443,https://phabricator.services.mozilla.com/D119443,Bug 1705141 - Move the usage of SlotAssignedNodeChanged into (Insert|Append|Remove)AssignedNode functions r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-07-09 20:13:34,"""acutally"" in the commit message"
119443,https://phabricator.services.mozilla.com/D119443,Bug 1705141 - Move the usage of SlotAssignedNodeChanged into (Insert|Append|Remove)AssignedNode functions r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-07-08 20:33:26,"Code analysis found 2 defects in the diff 457107:
 - 2 defects found by wptlint-gecko (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/457107) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=37276c6fde017c8063e56383992830646f22d7f6)."
119393,https://phabricator.services.mozilla.com/D119393,Bug 1717739 - Ensure waiting for all breakpoint to be set while loading the debugger.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-07-08 13:46:40,"Thanks Alex for taking care of tests, that looks good to me!"
119343,https://phabricator.services.mozilla.com/D119343,Bug 1719189 - Only set UserChoice on build 15063 and later. r?bytesized!,PHID-USER-woweonpcq5pacokkml6j,2021-07-08 15:56:15,Looks good to me.
119293,https://phabricator.services.mozilla.com/D119293,Bug 1719402 - Part 1: Reorder CompilationStencil fields and ExtensibleCompilationStencil fields to match. r?nbp!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-07-08 04:01:26,"Fixed non-extensible one, to match other parts (steal, borrow, etc)"
119293,https://phabricator.services.mozilla.com/D119293,Bug 1719402 - Part 1: Reorder CompilationStencil fields and ExtensibleCompilationStencil fields to match. r?nbp!,PHID-USER-feptxo7ei2kymsj45spd,2021-07-07 17:50:44,nit: This should be below the `sharedData` field. (or the opposite in the non-extensible)
119293,https://phabricator.services.mozilla.com/D119293,Bug 1719402 - Part 1: Reorder CompilationStencil fields and ExtensibleCompilationStencil fields to match. r?nbp!,PHID-USER-feptxo7ei2kymsj45spd,2021-07-07 17:50:44,Nice! 👍️
119243,https://phabricator.services.mozilla.com/D119243,Bug 271863 - Support importing calendars. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-07-08 00:54:26,"Update comment, filed bug 1719582 for importing storage type calendars"
119243,https://phabricator.services.mozilla.com/D119243,Bug 271863 - Support importing calendars. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-07 09:20:27,"For the last bit, say ""it's not supported yet"". What you've written won't make a lot of sense in the future when somebody reads this comment.

Also, file a bug about it, even if you have no intention of fixing it now."
119243,https://phabricator.services.mozilla.com/D119243,Bug 271863 - Support importing calendars. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-07 09:20:27,I hadn't thought about the need to copy data. I store all my important stuff online so it didn't occur to me.
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-07-06 21:35:07,"Maybe, but then it's coupled to `moz.build` files existing. I think that the `listdir()` check is more code, but should be more resilient/straightforward."
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-07-06 21:02:35,simpler: check if comm/moz.build exists.
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-07-06 18:32:27,"Good call, thanks!"
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-07-06 18:21:12,"nit: I think you want the `bool` around just the `os.listdir` call. This ends up working because `True and []` evaluates to `[]` which turns into `False` when casted to `bool`, but would be cleaner to avoid all the type changing :)."
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-07-06 17:56:53,"Shoot, sorry, was testing this. Thanks Agi 😓"
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-oszpryzadx4pdqrckjlp,2021-07-06 17:50:42,is this change related?
119193,https://phabricator.services.mozilla.com/D119193,Bug 1712804: Check if `comm` directory is empty in TB identification,PHID-USER-cje4weq32o3xyuegalpj,2021-07-06 15:22:16,"Code analysis found 1 defect in the diff 456199:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/456199) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=901a1ed66e8724c7626be17f5525c03e37a74872)."
119143,https://phabricator.services.mozilla.com/D119143,Bug 1719235 - Reorganise calendar test module files. r=lasana,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-07 02:39:07,"We could do that where they are. It's not really the done thing, but there's no real reason for that, so okay."
119143,https://phabricator.services.mozilla.com/D119143,Bug 1719235 - Reorganise calendar test module files. r=lasana,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-07-07 02:39:07,"We don't have actual tests immediately inside the test folder anywhere (that I know of), plus they're .jsm files not .js files, plus the filenames don't start with any of the test prefixes like test_ or browser_. I think that's clear enough."
119143,https://phabricator.services.mozilla.com/D119143,Bug 1719235 - Reorganise calendar test module files. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-07-07 00:09:19,"If we put them back in their own folder could we map these to ""resource://testing-common/calendar/ItemEditingHelpers.jsm"" etc?"
119143,https://phabricator.services.mozilla.com/D119143,Bug 1719235 - Reorganise calendar test module files. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-07-07 00:09:19,@darktrojan why put these at the top level? In the modules folder it's a little clearer at first glance that these are test helpers and not actual tests.
119143,https://phabricator.services.mozilla.com/D119143,Bug 1719235 - Reorganise calendar test module files. r=lasana,PHID-USER-5hwj7wtnrh5p6by6gtm2,2021-07-07 00:09:19,"Looks good, with some suggestions (see comments). I did not run them locally or on try server though (I know you will)."
119043,https://phabricator.services.mozilla.com/D119043,Bug 1677606: Run browser_searchbar_focus_timing.js to avoid potential conflicts with other tests.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-07-05 22:50:55,">>! In D119043#3872209, @Standard8 wrote:
> Oh, I forgot we should have a slightly more descriptive revision summary so that it is easier to tell what the changes are at a glance.

Thank you for reviewing and updating!
(I'll try to be careful about the commit message)"
119043,https://phabricator.services.mozilla.com/D119043,Bug 1677606: Run browser_searchbar_focus_timing.js to avoid potential conflicts with other tests.,PHID-USER-2unm6j7c36hylplkvkb6,2021-07-05 13:58:39,"Oh, I forgot we should have a slightly more descriptive revision summary so that it is easier to tell what the changes are at a glance. I've just updated the revision summary (be careful if you run `moz-phab submit` again before landing)."
119043,https://phabricator.services.mozilla.com/D119043,Bug 1677606: Run browser_searchbar_focus_timing.js to avoid potential conflicts with other tests.,PHID-USER-2unm6j7c36hylplkvkb6,2021-07-05 13:56:48,"Ok, great. Lets go for it :)"
119043,https://phabricator.services.mozilla.com/D119043,Bug 1677606: Run browser_searchbar_focus_timing.js to avoid potential conflicts with other tests.,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-07-04 23:07:55,"Hi Mark,
As you mentioned in D118778#3865200, I made a test use a new window.
It seems working fine.
https://treeherder.mozilla.org/jobs?repo=try&revision=c8f31ad19adce8ae5e4041a3712d118bc3cd1f3f

Thanks!"
118993,https://phabricator.services.mozilla.com/D118993,Bug 1715584 - Update to NSPR_4_32_RTM (no code change). r=bbeurdouche UPGRADE_NSPR_RELEASE,PHID-APPS-PhabricatorHeraldApplication,2021-07-01 08:58:33,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
118943,https://phabricator.services.mozilla.com/D118943,Bug 1718613 - Plug system-packages-doc to allow read access to documentation under /usr/share/doc.,PHID-APPS-PhabricatorHeraldApplication,2021-08-02 15:16:44,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
118893,https://phabricator.services.mozilla.com/D118893,Bug 1714067 - disable browser_test_selection_urlbar.js on Win_opt for frequent failures. r=#intermittent-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-07-07 21:03:16,"Sorry, I meant I was going to dupe the fission bug to Bug 1714067, could you update the comment to this one?"
118893,https://phabricator.services.mozilla.com/D118893,Bug 1714067 - disable browser_test_selection_urlbar.js on Win_opt for frequent failures. r=#intermittent-reviewers,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-07-05 13:43:20,"Actually, on second glance this looks like a more generic version of the annotation above it. Could you remove the fission annotation? I'll dupe that bug to the new one."
118842,https://phabricator.services.mozilla.com/D118842,Bug 1718271 - wasm: Serialize array types. r?lth,PHID-USER-jqou3mp2fdzb7uuohm53,2021-07-08 05:36:58,We'll be testing this once compiled code caching works.
118842,https://phabricator.services.mozilla.com/D118842,Bug 1718271 - wasm: Serialize array types. r?lth,PHID-USER-jqou3mp2fdzb7uuohm53,2021-06-29 10:32:11,Why not call arrayType_.serializedSize()?  That's less brittle and more standard and matches the code below and makes the definition of serializedSize() useful.
118792,https://phabricator.services.mozilla.com/D118792,Bug 1718184 - pt 2. Add a comment about units for this pref r=nika,PHID-USER-cje4weq32o3xyuegalpj,2021-07-13 01:57:41,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4c0674ff85236aad5cb3b13e8bc4053efd37a82b&selectedTaskRun=TVU4t45mTI-241XVw4SS7Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-15 13:49:30,Dropped in favor of D119816
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-13 18:31:43,"ah, ok. well, in that case I guess we definitely need this check :-) - you can remove the comment about disabling the assert before landing."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-13 18:31:43,"Yeah, it's a bit unfortunate. The reason why `WindowGlobalChild` doesn't inherit from `WindowContext` is because in the case of parent-process documents, we can have both a `WindowGlobalChild` and a `WindowGlobalParent` in the same process, and they can't both be a `WindowContext`, because then we'd have two `WindowContext`s.

It's an unfortunately confusing system, apologies :-/"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-13 18:31:43,"This generally seems good to me now, if we end up needing these changes still. Rubber-stamp approving for now, though we might be able to drop this part entirely if the improved `isInitialDocument` flag from https://bugzilla.mozilla.org/show_bug.cgi?id=1586830 works for all of your cases.

I did notice due to our discussion earlier that this won't catch a case if the initial about:blank document created for process switch is re-opened with `document.open()`, as it'll no longer be an initial document according to `isInitialDocument`, but will still be considered one for this flag. Perhaps we could include a comment to that effect on the attribute if we end up keeping it around? I don't think we should ever be re-opening an initial about:blank document created for process switches with `document.open` but you never know what'll happen in the future."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-13 12:51:17,I added a `tab` argument to `assertWindowContexts` so that we can filter out which browserId we care about.
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-13 12:51:17,I added this in the previous changeset D118740.
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-13 12:51:17,"Oh... I think I was super confused about WindowContexts.

I'm used to work with WindowGlobal and not WindowContexts.
I was looking for a way to get the WindowContext for the `windowGlobal` I receive from `window-global-created`.
I thought that `topWindowContext` was returning just that, but no. It queries the top BrowsingContext and retrieves its WindowContext.

Now, I realize that WindowGlobalParent inherits from WindowContext. So. it sounds like I can just record the windowGlobal. It will be the windowContext, right?!

I imagine this confusion comes from the fact that in the content process, WindowGlobalChild doesn't inherit from WindowContext and you have to query its `windowContext` attribute, which I was somehow looking for and not finding it."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-07-13 12:51:17,"This patch looks less challenging than D118740.

The only issue I had was with the `GetIsInitialAboutBlankCreatedByProcessSwitch() == true` assertion from `WindowGlobalChild::OnNewDocument`:
```
--- a/dom/ipc/WindowGlobalChild.cpp
+++ b/dom/ipc/WindowGlobalChild.cpp
@@ -232,16 +232,22 @@ void WindowGlobalChild::OnNewDocument(Do
 
   // Init Mixed Content Fields
   nsCOMPtr<nsIURI> innerDocURI =
       NS_GetInnermostURI(aDocument->GetDocumentURI());
   if (innerDocURI) {
     txn.SetIsSecure(innerDocURI->SchemeIs(""https""));
   }
 
+  // Theoretically we should never re-use the initial about:blank document which
+  // we created to perform a process switch
+  MOZ_DIAGNOSTIC_ASSERT(
+      !mWindowContext->GetIsInitialAboutBlankCreatedByProcessSwitch());
+  txn.SetIsInitialAboutBlankCreatedByProcessSwitch(false);
+
   MOZ_DIAGNOSTIC_ASSERT(mDocumentPrincipal->GetIsLocalIpAddress() ==
                         mWindowContext->IsLocalIP());
 
   MOZ_ALWAYS_SUCCEEDS(txn.Commit(mWindowContext));
 }
 
 /* static */
 already_AddRefed<WindowGlobalChild> WindowGlobalChild::GetByInnerWindowId(
```

I had to drop it, because it was `false` when running `toolkit/content/tests/browser/browser_media_wakelock_PIP.js`:
https://treeherder.mozilla.org/logviewer?job_id=344938238&repo=try&lineNumber=37294"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"Could you include two versions of the window.open test, one for a same-origin document and one for a cross-origin document?"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"You're being thrown off by the bug I mention above where you're always getting the toplevel window's WindowContext, rather than the WindowContext for the actual frame you're interested in."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"Why only record `windowGlobal.topWindowContext`? This means that you'll be recording the wrong context when working with subframe loads, because you'll be recording the toplevel WindowContext each time rather than the window context for the required subframe. You can also end up with duplicates in here because of that."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"This seems like it's likely to be flakey because we could be creating new window globals in the background while the test is running for one reason or another, and I wouldn't want to be capturing them here. Could we at least include a check that the WindowContext has an expected BrowserId or something like that?"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"I have vague plans to change that in the near future, but I suppose adding it back in wouldn't be a big deal in the future."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"I don't remember if this name comes from me, but ""implicit"" doesn't make a ton of sense here. I think I probably meant to write `isInitialAboutBlankCreatedByProcessSwitch`."
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"Can we move this into the .cpp and use `CheckOnlyOwningProcessCanSet`? Right now this is actually never set by anyone, but we probably want to reset it to `false` if the initial about:blank document created by a process switch's global is re-used by a loaded document (as I suggest in my comment about `OnNewDocument`)"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-07-08 17:09:52,"Can we also re-set this to ""false"" in `WindowGlobalChild::OnNewDocument`'s transaction? (here: https://searchfox.org/mozilla-central/rev/da25888c4495585c532640f0e5efad07b1037621/dom/ipc/WindowGlobalChild.cpp#212-224). Theoretically we should never re-use the initial about:blank document which we created to perform a process switch, but if we were to in the future it would be nice to already be updating that value. I'd also be OK with us adding an assertion that `OnNewDocument` isn't called on a `WindowGlobalChild` where the context has `GetIsInitialAboutBlankCreatedByProcessSwitch() == true`"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-06-24 18:43:08,"All the callsites are passing `true` here, so I was wondering if we could drop this argument and always consider it to be true?"
118742,https://phabricator.services.mozilla.com/D118742,Bug 1625026 - Implements WindowContext.isInitialAboutBlankCreatedByProcessSwitch.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-06-24 18:43:08,I took your patch as-is and only added some test coverage... as the c++ part just looks good to me!
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-gmbuubyuhypxekqyrmf4,2021-08-11 10:08:28,- Add WTP for PermissionStatus.name
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-gmbuubyuhypxekqyrmf4,2021-08-02 22:47:02,rebase
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-gmbuubyuhypxekqyrmf4,2021-07-16 07:56:04,Spec change https://github.com/w3c/permissions/pull/248
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-07-08 08:14:03,"One thing, would you mind amending the commit message to mention https://github.com/w3c/permissions/pull/248 or similar?"
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-07-08 08:12:20,"Sorry for the delay Marcos, we were out last week :)

As mentioned on GitHub this seems harmless."
118692,https://phabricator.services.mozilla.com/D118692,Add name attribute to PermissionStatus,PHID-USER-gmbuubyuhypxekqyrmf4,2021-06-29 05:50:48,Adding Peterv for IDL change approval.
118591,https://phabricator.services.mozilla.com/D118591,Bug 1691386 - Cookies API should not omit cookie expirationDates on session cookies that have an expire date set. r?robwu!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-06-24 12:51:42,"Rob and I discussed a bit more of this, I'm marking it as ""Planned Changes"".

Next steps:
- look into covering only a subset of the cases and double-check if that would looks reasonable based on what we know about the logic that leads to session cookies with a valid expiration date
- filing a new bug to evaluate with the engineers working on the tracking protection and cookie management internals if we could make more immediately clear if the cookie was marked as session based on lifetimePolicy and tracking protection settings"
118591,https://phabricator.services.mozilla.com/D118591,Bug 1691386 - Cookies API should not omit cookie expirationDates on session cookies that have an expire date set. r?robwu!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-06-24 11:33:49,"> It is also worth to notice that the inline comment doesn't not explicitly mention the lifetimePolicy as the only case when a session cookie may also have an expire date, and so I'm not sure we should care about this scenario only when the lifetimePolicy is set to ACCEPT_SESSION.

@robwu I digged into this a bit more to get an initial picture of what may be the other cases that could lead to a cookie with an expire date also marked explicitly as a session cookie (to help evaluating how it may be reasonable to deal with this issue, and if doing it only for lifetimePolicy would be a reasonable choice in practice):

- conditions: non session cookie (and not yet expired) + lifetimePolicy == ACCEPT_SESSION ([explicitly marked as session cookie in CookieCommons::CheckCookiePermission here](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieCommons.cpp#299-307))

- conditions: if `aCookieJarSettings->CookiePermission` returns `nsICookiePermission::ACCESS_SESSION` ([explicitly marked as session cookie in CookieCommons::CheckCookiePermission here](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieCommons.cpp#267-268,277-280))
  - [CookieJarSettings::CookiePermission seems to be returning nsICookiePermission::ACCESS_SESSION if the cookie site permission has been explicitly configured to do so for a given principal](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieJarSettings.cpp#254)
  
- conditions: when CookieService::CanSetCookie is called with aStatus == STATUS_ACCEPT_SESSION ([explicitly marked as session cookie in CookieService::CanSetCookie here](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1087-1091)), looking for STATUS_ACCEPT_SESSION on searchfox it seems that other scenario that would make a cookie marked as session even when it does have an expiration date may be:
     - [in CookieStatusForWindow: is third party and StaticPrefs::network_cookie_thirdparty_sessionOnly() is true](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieCommons.cpp#325)
     - [in CookieStatusForWindow: is third party, StaticPrefs::network_cookie_thirdparty_nonsecureSessionOnly() is true and `nsMixedContentBlocker::IsPotentiallyTrustworthyOrigin(aDocumentURI)` is false](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieCommons.cpp#328-331)
     - [in CheckPrefs: on similar condition to the ones related to CookieStatusForWindow described above](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1704-1712)     

- conditions: [when CookieService::CanSetCookie calls CookieService::GetExpire and it does returns true](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1083-1086), it looks that these scenarios may not actually matter for this particular bug because it happens when the is no maxage or expires or they fail to be parsed:
  - [CookieService::GetExpire would default to session cookie if aMaxage is non empty and it fails to parse](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1917-1920)
  - [CookieService::GetExpire would default to session cookie if aExpires is non empty and it fails to parse](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1934-1938)
  - [CookieService::GetExpire would default to session cookie if aMaxage and aExpires are both empty](https://searchfox.org/mozilla-central/rev/b355f4e36eb45ef84ce9d3dd6af7f1a417ca8bfe/netwerk/cookie/CookieService.cpp#1952-1956)"
118591,https://phabricator.services.mozilla.com/D118591,Bug 1691386 - Cookies API should not omit cookie expirationDates on session cookies that have an expire date set. r?robwu!,PHID-USER-5fjyseoxs2dahs7ryywh,2021-06-23 18:19:34,">>! In D118591#3858247, @robwu wrote:
> According to the documentation, `expirationDate` is only set for persistent cookies - https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies/Cookie

I know that, and I agree that the documentation should be in sync with the actual behavior.
Nevertheless, I'm not sure that we should just agree on what the documentation is currently saying, I would actually prefer if we could do the opposite:

let's agree on what should happen and why it should happen based on scenario that we think may matter 
(and not just on our current documented behavior, especially when the documented behavior is what lead to the bug as in this case).

> The fix here should be to set `isSession` to `false` instead of `true` for affected cookies when the lifetimePolicy pref is set.

As you already know, all cookies are session cookies when the lifetimePolicy pref is set, personally I think that the `session` property should still reflect that, 
did your comment mean that you think that `session` should be `false` in the cookie details we return to the extensions?

Also based on what the [inline doc for ` nsICookie.isSession` says](https://searchfox.org/mozilla-central/rev/9975889f5c0d5c59bd22121a454beba774cbae71/netwerk/cookie/nsICookie.idl#84-87):
> note that expiry time will also be honored for session cookies (see below); thus, whichever is the more restrictive of the two will take effect.

and so I'm not sure that omitting the value set in expires for session cookies is actually right in general, because we may be omitting an information that could actually make a difference
as it did in the scenario described in the bug.

It is also worth to notice that the inline comment doesn't not explicitly mention the lifetimePolicy as the only case when a session cookie may also have
an expire date, and so I'm not sure we should care about this scenario only when the lifetimePolicy is set to ACCEPT_SESSION.

It may be worth to ask to Andrea given that it looks that he may have wrote the inline comment I linked and quoted above."
118591,https://phabricator.services.mozilla.com/D118591,Bug 1691386 - Cookies API should not omit cookie expirationDates on session cookies that have an expire date set. r?robwu!,PHID-USER-eixhsnpzpzu5ezloexjr,2021-06-23 17:48:52,"According to the documentation, `expirationDate` is only set for persistent cookies - https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/cookies/Cookie

The fix here should be to set `isSession` to `false` instead of `true` for affected cookies when the lifetimePolicy pref is set."
118540,https://phabricator.services.mozilla.com/D118540,Bug 1717709 - Temporarily disable WebRender on gen6 to get more sw-wr+D3D11 testing.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-22 20:19:16,Software WebRender rollout
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-hvjw2anoq2st4rvqlvij,2021-06-25 10:04:49,"That looks solid to me, r=ckerschb"
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,"We know the exact size of the null principal path because we know the size of UUIDs, so it might be nice to use a precisely sized `nsAutoCStringN<NSID_LENGTH>` here"
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,"We should probably respect the behaviour from `NS_NewURI` which will use a different URI type depending on a pref. Specifically https://searchfox.org/mozilla-central/rev/f213971fbd82ada22c2c4e2072f729c3799ec563/netwerk/base/nsNetUtil.cpp#1982-1989: 

We can do this with something like:

```
nsCOMPtr<nsIURIMutator> mutator;
if (StaticPrefs::network_url_useDefaultURI()) {
  mutator = new mozilla::net::DefaultURI::Mutator();
} else {
  mutator = new mozilla::net::nsSimpleURI::Mutator();
}

nsCOMPtr<nsIURI> uri;
MOZ_ALWAYS_SUCCEEDS(NS_MutateURI(mutator)
                        .SetSpec(NS_NULLPRINCIPAL_SCHEME "":""_ns + uuid)
                        .Finalize(getter_AddRefs(uri)));
```"
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,"Should probably be part of the ""Remove NullPrincipalURI"" patch."
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,"This should perhaps be part of the ""remove NullPrincipalURI"" patch."
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,"This change looks like it was perhaps intended to be part of the ""remove `NullPrincipalURI` patch?"
118489,https://phabricator.services.mozilla.com/D118489,"Bug 1714645: Use nsSimpleURI instead of NullPrincipalURI. r=ckerschb,nika",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-06-23 19:04:25,In general functions like this in gecko return `already_AddRefed<nsIURI>` instead of `RefPtr<nsIURI>`
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-06-25 06:53:46,"Use more concise code, quote spec prose, and remove `*/`"
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-zb2d32xafgr6qarnlvuu,2021-06-25 04:55:37,"The case of exposed via `enumerateDevices()` but not permitted to play seemed a somewhat unexpected one to me, so I included the comment to help explain.

I'll add """" to clarify that it is a quote."
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-06-24 21:23:55,"Do we need spec prose in comments? — I thought `sinkId` referred to some test variable for a moment, which confused me.

If so, remove the redundant `*/`"
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-06-24 21:23:55,"This is totally fine. Just in case you like one-liners. YMMV
```
const exposedGroupIds = new Set(audioInputList.map(d => d.groupId));
```"
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-06-24 21:23:55,"Nit: `device` appears unused.
```
  for (const { deviceId, groupId } of outputDevicesList) {
```"
118439,https://phabricator.services.mozilla.com/D118439,Bug 1493982 use getUserMedia() to expose some output devices r?jib,PHID-USER-lzblq7ywx2acsvsetnzh,2021-06-24 21:23:55,"Ideally, tests that conditionally test A or B, should be broken into two tests: one that tests A and another that tests B. But this seems hard to do in WPT without more infrastructure."
118389,https://phabricator.services.mozilla.com/D118389,Bug 1713529 - widget/gtk/nsClipboard.cpp: do not use 'else' after 'return' r=jhorak,PHID-APPS-PhabricatorHeraldApplication,2021-06-22 14:40:40,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
118389,https://phabricator.services.mozilla.com/D118389,Bug 1713529 - widget/gtk/nsClipboard.cpp: do not use 'else' after 'return' r=jhorak,PHID-USER-cje4weq32o3xyuegalpj,2021-06-21 18:14:31,"Code analysis found 2 defects in the diff 453180:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/453180) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9bf7069b8eac2d8f9903e0d38c1ae7ffd8476f0a)."
118339,https://phabricator.services.mozilla.com/D118339,Bug 1703443 - pt 4. Move the CC runner into CCGCScheduler r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-07-09 04:52:04,"Code analysis found 4 defects in the diff 457232:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/457232) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7f2f0b72e68a6fffbea421728c10138cad0290ee)."
118339,https://phabricator.services.mozilla.com/D118339,Bug 1703443 - pt 4. Move the CC runner into CCGCScheduler r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-07-08 07:06:27,"Code analysis found 4 defects in the diff 456830:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/456830) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f06e0826d51a210bf141f4da2dc6497318aff4fa)."
118339,https://phabricator.services.mozilla.com/D118339,Bug 1703443 - pt 4. Move the CC runner into CCGCScheduler r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-06-25 04:48:39,"Code analysis found 4 defects in the diff 454853:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/454853) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=40974886ad5f077b6d46553480c0b499176435e8)."
118339,https://phabricator.services.mozilla.com/D118339,Bug 1703443 - pt 4. Move the CC runner into CCGCScheduler r=smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-06-24 11:05:46,"Code analysis found 4 defects in the diff 454415:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/454415) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=240d157398175f0d1eef6c043ced09b772b756b5)."
118289,https://phabricator.services.mozilla.com/D118289,Bug 1713525 - removed 'else' after 'return'. r=gerald,PHID-USER-cje4weq32o3xyuegalpj,2021-06-20 07:55:28,"Code analysis found 1 defect in the diff 452914:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452914) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=438f65144bddf03a9f81f42ef3a753a6fdfbf970)."
118289,https://phabricator.services.mozilla.com/D118289,Bug 1713525 - removed 'else' after 'return'. r=gerald,PHID-USER-6gilzlesrxygczj5xep5,2021-06-20 05:42:52,"{nav,  icon=pencil, name=suggestion:} Optional, as it's not just ""removing else after return"": The branch above is for a non-null `stream`, so you could `return true;` at the end of the block, and then you could remove the `else` and also remove the `return stream != nullptr` because it would be the same as the `return false;` that follows."
118289,https://phabricator.services.mozilla.com/D118289,Bug 1713525 - removed 'else' after 'return'. r=gerald,PHID-USER-6gilzlesrxygczj5xep5,2021-06-20 05:42:52,"r+ as-is, but please have a look at the optional suggestion if it's worth it and appropriate here."
118289,https://phabricator.services.mozilla.com/D118289,Bug 1713525 - removed 'else' after 'return'. r=gerald,PHID-USER-cje4weq32o3xyuegalpj,2021-06-19 14:38:17,"Code analysis found 1 defect in the diff 452894:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452894) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc4e3d53bfd0a914579526d69af979dd76e67104)."
118289,https://phabricator.services.mozilla.com/D118289,Bug 1713525 - removed 'else' after 'return'. r=gerald,PHID-USER-xsug3d47ikapt73uamb6,2021-06-19 14:28:28,I think gerald will be enough ;)
118239,https://phabricator.services.mozilla.com/D118239,Bug 1713334 - Part 6: Actively prevent text deletion in DeleteRangeTransaction r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-17 23:24:33,Good job!
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-s4ef4eaetjgrdjzssh5o,2021-07-06 20:18:46,I tested this on Windows and Mac and it looks good. Thanks!
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-06-18 20:47:14,"Code analysis found 1 defect in the diff 452850:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452850) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=52201eab8ff4174166db8e23f4667cd021d103e5)."
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-18 20:34:28,Add missing semicolon on macOS
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-06-18 19:25:41,"Code analysis found 1 defect in the diff 452839:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452839) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=212abec88bec1595b32305ea7657425f624fca08)."
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-18 19:09:39,fix windows
118188,https://phabricator.services.mozilla.com/D118188,"Bug 1716546 - Fix and cleanup bookmarks submenu styling. r=dao,#desktop-theme-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-17 15:16:52,"Gotta fix windows, hold on :)"
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-cje4weq32o3xyuegalpj,2021-06-23 21:19:25,"Code analysis found 1 defect in the diff 454256:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/454256) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a58be8593ef46f067dc124722c26b22ef83d9046)."
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-06-23 21:11:21,I'll try to address it in a follow-up bug.
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-cluzkujx45iif5fejoai,2021-06-17 14:35:23,"See the discussion in patch D118133, thanks."
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-cluzkujx45iif5fejoai,2021-06-17 10:59:27,"Again I think, `Pending` could be enough."
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 08:27:26,"Code analysis found 1 defect in the diff 452214:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452214) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=52a0164e3c328fc0cbee708b9c21e24a34572dea)."
118138,https://phabricator.services.mozilla.com/D118138,Bug 1716568 - Consolidate InitializationInfo::AutoInitializationAttempt class; r=#dom-storage,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 07:59:22,"Code analysis found 1 defect in the diff 452200:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452200) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=858e69e80b0e61e9002edbedf279bd4bddb38b96)."
118088,https://phabricator.services.mozilla.com/D118088,Bug 1716043 - Support Wasm `try` block with no other clauses,PHID-USER-xulvsgmphh3daacojaw7,2021-06-17 23:00:16,Thanks for the suggestion! I've added a comment here now.
118088,https://phabricator.services.mozilla.com/D118088,Bug 1716043 - Support Wasm `try` block with no other clauses,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-06-17 21:19:16,"This will shift the index space of tryNotes after tryNoteIndex, as a catchless-try may contain catchful-tries. This seems safe-enough as the only place we index try notes is using controlItem(), and all nested try blocks will be popped at this point. But I had to think about it a bit, so a quick code comment would be useful."
118088,https://phabricator.services.mozilla.com/D118088,Bug 1716043 - Support Wasm `try` block with no other clauses,PHID-USER-xulvsgmphh3daacojaw7,2021-06-16 21:25:57,"Try run (with unwind, wat vendor patches applied) https://treeherder.mozilla.org/#/jobs?repo=try&revision=71d5230e4ed53c082c331bf1eafaaed46df7626e"
118038,https://phabricator.services.mozilla.com/D118038,Bug 1713725 - update the SmartBlock shim for Rich Relevance; r?denschub,PHID-USER-h44m7p3obyvtzlsak2vi,2021-06-16 17:39:52,test are on github
117988,https://phabricator.services.mozilla.com/D117988,Bug 1716731 - Update Yandex favicons and tippytop icons. r=Standard8,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-06-16 11:21:18,typo
117988,https://phabricator.services.mozilla.com/D117988,Bug 1716731 - Update Yandex favicons and tippytop icons. r=Standard8,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-06-16 11:15:48,add to allowed-dupes.mn
117988,https://phabricator.services.mozilla.com/D117988,Bug 1716731 - Update Yandex favicons and tippytop icons. r=Standard8,PHID-USER-2unm6j7c36hylplkvkb6,2021-06-16 10:51:34,"Looks good, thank you."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-08-19 00:49:57,">>! In D117938#3947110, @canaltinova wrote:
> Looks good to me. Thanks! reviewbot complains about `OS.File` being deprecated, but it works for me with either a follow-up or a bug filed.

I've filed https://bugzilla.mozilla.org/show_bug.cgi?id=1726471 and https://bugzilla.mozilla.org/show_bug.cgi?id=1726480."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 20:38:44,"Thanks for the review!

>>! In D117938#3947110, @canaltinova wrote:
> reviewbot complains about `OS.File` being deprecated, but it works for me with either a follow-up or a bug filed.

I will file a bug once this has landed and I can link to the code in the bug description."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 20:04:39,"Yeah, I thought that was the buffer length at first, and was trying to see where we are clamping it in the end. After looking at the rust code a bit more, realized that's not the case. Thanks!"
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 20:04:39,Thanks for the interface!
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 20:04:39,"Looks good to me. Thanks! reviewbot complains about `OS.File` being deprecated, but it works for me with either a follow-up or a bug filed.

`testing-exception-other`: We don't have an infrastructure to test it unfortunately. Tested it manually extensively and it's working correctly."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-cje4weq32o3xyuegalpj,2021-07-30 19:57:22,"Code analysis found 2 defects in the diff 465628:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/465628) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ffbfd4ca2127e9db90d1989f990a98a21b58ceba)."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 17:43:26,Addressed in https://github.com/mstange/profiler-get-symbols/commit/98fa8dd194b621223ae66e748fa7592684e8dc4d .
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,True! I will change the rust code to not pass the size param.
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,"I'm not sure I completely understand the question.

This value determines what we return from the `len()` method in the implementation of the `FileContents` trait: https://github.com/mstange/profiler-get-symbols/blob/4c600c3dd11d0713ab0a5c2449b8291872ce184f/wasm/src/lib.rs#L296-L298

There is no buffer with byteLength here - byteLength is the size of the entire file but we only make buffers for the parts we need."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,"Oops, yes."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,Good idea!
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,"Correct, it now throws objects with the properties `name` and `message`, by JSON-serializing a rust `GetSymbolsError` struct: https://github.com/mstange/profiler-get-symbols/blob/4c600c3dd11d0713ab0a5c2449b8291872ce184f/wasm/src/error.rs#L20-L24"
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-sasiqhjk3rmprfyixaj6,2021-07-30 15:45:37,"That's right, `destBuf` is created by wasm, here: https://github.com/mstange/profiler-get-symbols/blob/4c600c3dd11d0713ab0a5c2449b8291872ce184f/wasm/src/lib.rs#L166"
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:03:53,It looks like we don't use `size` parameter here.
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,"I guess we are changing this inside the wasm code to limit the max size, right? I'm not sure how this buffer byteLength is being set."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,"Return of this function should be a string array, right? It's `Array<{ path: string, debugPath: string }>` in the comment right now (since we are not checking this yet)."
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,"nit: It would be good to add a comment to the top of this class to mention that this is being passed to the wasm_bindgen's `getCompactSymbolTable` function. And it would be good to mention like which methods must be provided since they are being used by wasm bindgen function.

(Additionally, it could be also good to mention in the method comments below.)"
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,question: what's setting the initial length of the `destBuf`? is it set by wasm?
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,question: is this not the case anymore?
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,`Read parts of an open OS.File instance into the Uint8Array dataBuf.` 🎉
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,"It's a bit scary to download a binary and run it, but good thing is that we are checking the hash before and making sure that it's the correct one. Also google cloud url is kinda less scarier compared to the netlify one :)"
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,Looks like they match. 👍 Thanks for the comment on how to check is as well!
117938,https://phabricator.services.mozilla.com/D117938,Bug 1615066 - Add support for new profiler-get-symbols version which supports partial file reading. r=canaltinova,PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-07-30 15:01:43,"Nice work! Looks pretty good to me, but I have some small questions. I think it's mostly because I'm not sure how the wasm side work. It would be also good to add some comments on how that side works with some comments (as I mentioned below).
Requesting changed because I want to make sure before putting r+ but I don't see anything that could be a blocker.

Also thinking about if we can write a test for this, but I guess it's really hard to test this case."
117738,https://phabricator.services.mozilla.com/D117738,Bug 1716510 - Use correct dirType value for JS LDAP directories. r=rnons,PHID-USER-dw5lykey6useghnnszst,2021-06-15 08:20:36,Thanks.
117537,https://phabricator.services.mozilla.com/D117537,Bug 1715985 - [devtools] Upgrade to pretty-fast 0.2.7. r=jdescottes.,PHID-USER-6oeredp5pcvqrg736rdc,2021-06-11 12:58:40,Thanks for handling the PR and udpate in m-c so quickly. Will be great to switch to node 12!
117487,https://phabricator.services.mozilla.com/D117487,WIP: Add a temporary showcase page for managing services in settings UI,PHID-USER-sjb23lkvqglp6kixwyq2,2021-06-11 01:05:14,Accidentally created this revision while updating D117355
117437,https://phabricator.services.mozilla.com/D117437,Bug 1715577 - [devtools] Remove testActor#reloadFrame. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-06-11 05:57:18,rebase and address comments
117437,https://phabricator.services.mozilla.com/D117437,Bug 1715577 - [devtools] Remove testActor#reloadFrame. r=jdescottes.,PHID-USER-6oeredp5pcvqrg736rdc,2021-06-10 16:47:24,Thanks!
117387,https://phabricator.services.mozilla.com/D117387,Bug 1698693 - Make the GetNearestScrollableFrame() call in GetBoundingFrameRect() stop at the document's root scroll frame. r=tnikkel,PHID-USER-n65mahsof3iw653q75na,2021-06-10 04:47:19,"I'm going to propose the testing tag ""testing-exception-other"" here as, to the extent that this is a behaviour change, it's very much an edge case and not worth trying to craft a testcase for."
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-USER-cje4weq32o3xyuegalpj,2021-06-09 16:59:57,"Code analysis found 1 defect in the diff 449167:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/gc/GC.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/EOLuAaLDSeWQD3sg6wwVbA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-pru6w53v5wfv7tvgomqc.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/449167) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fbdc4857ad0de0bc86aed8335a9dcc9d2c0f4454)."
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-USER-cje4weq32o3xyuegalpj,2021-06-09 16:49:21,"Code analysis found 1 defect in the diff 449164:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/gc/GC.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/bgVEGkN3S6eF9ZsnqPPxuQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-4z5qxs4blym4tojttohg.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/449164) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f07ce142d2fbe911ccea9818d382ee2ea2f641b0)."
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-06-09 16:45:15,Add test
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-APPS-PhabricatorHeraldApplication,2021-06-09 16:34:30,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-USER-ursddouwkmzhineuaj7s,2021-06-09 16:34:30,"Great.

Can you add a test case?"
117337,https://phabricator.services.mozilla.com/D117337,Bug 1714532 - do not yield during an incremental GC that was turned nonincremental by gray root buffering failure,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-06-09 16:31:54,do not yield during an incremental GC that was turned nonincremental by gray root buffering failure
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-21 12:53:17,"Code analysis found 8 defects in the diff 453063:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/453063) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=70e5a478fc27213d9ad2ff56989e31e223b51ddd)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-18 21:11:34,"Code analysis found 8 defects in the diff 452854:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452854) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2e4cdbb52dfcf930a85d7f64a92ec53d4614efa5)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-18 20:57:12,"do you need this condition, it could just be a second line on the existing skip-if."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-18 20:57:12,does the extra parens here work vs `skip-if(winWidget&&!is64Bit)`
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 21:30:21,"Code analysis found 8 defects in the diff 452594:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452594) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fd0f181bff65d45a09af09d50d3a184d5d85144b)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-17 20:03:40,just sanity checked the updates since this morning :)
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 20:03:20,"Code analysis found 8 defects in the diff 452538:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452538) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0a48ca8e9c65feb5905bdfa2dd9dc4e2f23101fd)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-17 17:11:47,ideally everything will be webrender and this entire file can be deleted- a future cleanup
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-17 17:11:47,"thanks for doing such a widesweeping cleanup.  As this is focused on win32 I am more apt to r+ and ignore the failures.  With that said, the comment about revisiting annotated tests for webrender in H2 seems useful.  We should be able to only run tests that have an annotation in 2 ways:
1) to make sure they work without the other tests
2) remove the expectations/skips and see what is automatically green.

that should at least reduce the amount of work"
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 17:10:29,"Code analysis found 8 defects in the diff 452459:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452459) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=baa976a6225dfaf137ad8a7cbe56a03f1f2f2335)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 12:53:09,"Code analysis found 8 defects in the diff 452312:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452312) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a30caf9756252dd554e5533cc78c59070f4f7217)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 12:38:48,"Code analysis found 8 defects in the diff 452309:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/452309) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=66d11f2459984d2c700f9100119ea506165bcf7f)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-17 12:20:34,"We're going to have to do an audit of all bugs disabled with skip-if, random-if and fails-if for WebRender in H2 to see what we can turn back on as other bugs get fixed."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-17 12:13:58,try after adjusting more fuzz: https://treeherder.mozilla.org/#/jobs?repo=try&revision=a7bed757a15ea5c7ef9290f25aab04d34de0f976
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-eixhsnpzpzu5ezloexjr,2021-06-16 20:17:28,Will this skip-if be removed at some point even without a reference to a bug?
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-16 17:17:30,WebRender related crashes. We have a slew of bugs blocked against bug 1715303. The old test configs are meaningless now since 95+% of users run in release now and 100% in 91.
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-eixhsnpzpzu5ezloexjr,2021-06-16 16:14:40,"Why was this `browser_ext_devtools_page_incognito.js` test skipped? I'm not seeing it in the try pushed linked above, and the test itself doesn't do anything particularly special."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-16 15:54:16,"Code analysis found 8 defects in the diff 451884:
 - 8 defects found by perfdocs-verify (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/451884) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ea0108c4c8a4f0812ff5f8186c24be781d46a1a2)."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-16 15:31:06,"try: https://treeherder.mozilla.org/jobs?repo=try&revision=9cae4eee348a1881fc0d8e75f85d4b9990014327

I didn't fuzz Fission since we haven't turned it on by default in CI yet afaict."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-09 13:32:18,"2 things:
1) windows10-32 is win32 and we have never had -qr on that before; it is an unsupported OS from Microsoft- we want to support it given the percentage of our users.  Happy to switch to -qr if we want to, if we do, we should switch windows7-32 as well.
2) try jobs have been backed up for >2 days, don't expect windows try jobs that depend on hardware to complete anytime soon."
117287,https://phabricator.services.mozilla.com/D117287,Bug 1715515 - Part 1. Switch Windows 32 and mingwclang tests to WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-09 11:38:55,"try: https://treeherder.mozilla.org/jobs?repo=try&revision=fb184e18041421dd9d5734d10b78f34b057c22bc
try again for jobs that never got scheduled: https://treeherder.mozilla.org/jobs?repo=try&revision=fb184e18041421dd9d5734d10b78f34b057c22bc"
117237,https://phabricator.services.mozilla.com/D117237,Bug 1715335 - Part 2. Enable reftest-snapshot tests on Linux WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-09 03:08:18,"thanks for adding in -swr variant.  If you need a hand with the reftest stuff, I can help out."
117237,https://phabricator.services.mozilla.com/D117237,Bug 1715335 - Part 2. Enable reftest-snapshot tests on Linux WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-09 00:33:06,"try, round 2 of fuzzing: https://treeherder.mozilla.org/#/jobs?repo=try&revision=edb464be2e13794d78e8a575b5a3698a788fee28"
117237,https://phabricator.services.mozilla.com/D117237,Bug 1715335 - Part 2. Enable reftest-snapshot tests on Linux WebRender.,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-08 21:43:39,"this looks straightforward, thanks"
117237,https://phabricator.services.mozilla.com/D117237,Bug 1715335 - Part 2. Enable reftest-snapshot tests on Linux WebRender.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-06-08 21:42:56,"try, might require a few iterations on the fuzz: https://treeherder.mozilla.org/jobs?repo=try&revision=b0d64715f78676372865299c43a649e85bb35315"
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 18:27:27,"Sweet, thank you!"
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-7z6vux4zj2jrt4mggoyy,2021-06-08 18:20:20,"Using `ref-filled-green-100px-square-only.html` is great! I wasn't even aware of shared references being a thing. I've adjusted the test to use that reference, and I also applied your other suggestions.

>>! In D117187#3814304, @emilio wrote:
> though I'd rather change blue for green (as it's the more common ""pass"" color)

Yeah that's fair. I usually try to avoid red/green to make people with a color blindness happy, but you're not wrong noting that red/green is what everyone expects. Now that I'm using the shared reference, this point is irrelevant anyway. :)"
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 18:04:10,"nit: I'd link to the draft instead, so `https://drafts.csswg.org/css-flexbox/#propdef-order`. Let's add also `<link rel=""help"" href=""https://bugs.chromium.org/p/chromium/issues/detail?id=606208"">`"
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 18:04:10,"nit: I usually remove the `<html>` / `<head>` / `<body>` tags and deindent stuff, as they're added by the HTML parser, but your call."
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 18:04:10,"Let's simplify the reference. In fact, what do you think about using `/css/reference/ref-filled-green-100px-square-only.html` as a reference?

The reference doesn't need to use any of the features that we're testing, so it can be much simpler."
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 18:04:10,"Looks good, though I'd rather change blue for green (as it's the more common ""pass"" color), and then remove the reference, wdyt?"
117187,https://phabricator.services.mozilla.com/D117187,Bug 1715302 - Add WPT coverage for the drawing order of absolutely positioned boxes inside flex items. r?emilio,PHID-USER-7z6vux4zj2jrt4mggoyy,2021-06-08 16:10:51,"This WPT is known to fail everywhere but Firefox. The behavior spec'ed matches what Firefox is doing, but there currently is no coverage here.

The reference is using the same code, but I flipped the order of the flex items. If we're following the spec, both cases should behave exactly the same, so this is probably not the worst way to test this. If there is a way to make this test more elegant, or a better title/filename, please do let me know. :)"
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 09:43:38,Search and replace fail... But this constant is unused so I'll just remove it :)
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 09:43:38,"I usually prefer the shorter cast, but if you feel pretty strongly I'd be ok switching back to `static_cast`. It's just a very big mouthful. Would using `(FormControlType)Foo` be better? That usually has trickier semantics, though for enums I don't think it matters much..."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-08 09:43:18,nits
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,Looks like function calls... Up to you whether to use `static_cast` or keep going as-is.
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,Ditto.
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,"I wrote it as below, this looks like a function call, so, I like using `static_cast` better, but up to you."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,InputReset ?
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,"Here looks like a function call too, but up to you."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,"So, not using `static_cast` makes developers confused in this case (looks like a function)."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,"I like using `static_cast` for clearer code, but it was removed from out coding style guide, so, up to you."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,"In theory, using `switch` is faster here, but up to you. It must be optimized automatically in these days."
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-06-08 03:13:27,I don't understand this change... Why mixing lower cases??
117087,https://phabricator.services.mozilla.com/D117087,"Bug 1715134 - Make form control type an enum class. r=masayuki,smaug",PHID-USER-cje4weq32o3xyuegalpj,2021-06-07 21:49:57,"Code analysis found 1 defect in the diff 448161:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/448161) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4a03e10fe449b5715706c0ed55eac9a41d5c134e)."
117037,https://phabricator.services.mozilla.com/D117037,Bug 1712047 - keep Skia temporary data surface alive. r?jrmuizel,PHID-USER-23vjewznejm4mnldghrh,2021-06-07 16:10:39,No way to reproduce yet.
116937,https://phabricator.services.mozilla.com/D116937,Bug 1714103 - Fallback to unthemed scrollbars if the thumb wouldn't be visible. r=stransky,PHID-USER-cje4weq32o3xyuegalpj,2021-06-06 11:22:36,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a9d034b89341705fb6390ec6a4c111794b1ae5d0&selectedTaskRun=UvsBpVjFQICQB-uFrNcjjw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
116887,https://phabricator.services.mozilla.com/D116887,Bug 1700396 - Bump updatebot to avoid the None phab revision bug r?jewilde,PHID-USER-xsgci3i2hsoare3yoz63,2021-06-04 19:55:27,"Double checked revision hash, looks great!"
116837,https://phabricator.services.mozilla.com/D116837,Bug 1553572 - test win10 v2004 on beta r=jmaher,PHID-USER-mefa72mp4kzwenywt7gj,2021-06-04 14:14:54,nice!
116787,https://phabricator.services.mozilla.com/D116787,Bug 1714390 - P6: Make more attribute keys static atoms. r?Jamie,PHID-USER-cje4weq32o3xyuegalpj,2021-06-07 19:53:04,"Code analysis found 1 defect in the diff 448050:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/448050) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=af3f9a88341d5ce58b0a758b565770a5a7514095)."
116787,https://phabricator.services.mozilla.com/D116787,Bug 1714390 - P6: Make more attribute keys static atoms. r?Jamie,PHID-USER-cje4weq32o3xyuegalpj,2021-06-07 18:54:01,"Code analysis found 1 defect in the diff 448020:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/QSMWkXHmQpG42OY2yEJ4Sg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-4eiuci5nsiaeuc5zwcdi.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/448020) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4b2702409d4b6bf07a16635f41f485d87f0a2eb5)."
116787,https://phabricator.services.mozilla.com/D116787,Bug 1714390 - P6: Make more attribute keys static atoms. r?Jamie,PHID-USER-cje4weq32o3xyuegalpj,2021-06-04 22:25:26,"Code analysis found 6 defects in the diff 447538:
 - 6 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/eoL--6klTIqqaNW75PqRBQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-unhl7mfvolutubhenfv4.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/447538) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=212256a22703a9ed9199bdb717b6079f8220b77a)."
116787,https://phabricator.services.mozilla.com/D116787,Bug 1714390 - P6: Make more attribute keys static atoms. r?Jamie,PHID-USER-cje4weq32o3xyuegalpj,2021-06-03 23:48:01,"Code analysis found 166 defects in the diff 447098:
 - 166 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/KG5KLd2LSGmFIqmSnkzEXA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-kny3jviuz5bpy4uysh54.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5e00e4b2b180e1bc0ec476a399dc2627801b4a7a&selectedTaskRun=V1PkROcIRIKo7NysSE49jw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/447098) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5e00e4b2b180e1bc0ec476a399dc2627801b4a7a)."
116737,https://phabricator.services.mozilla.com/D116737,Bug 1683865 - Replace xul:image usage in tab drop indicator. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-06-04 10:37:06,"LGTM, r=mkmelin"
116737,https://phabricator.services.mozilla.com/D116737,Bug 1683865 - Replace xul:image usage in tab drop indicator. r=mkmelin,PHID-USER-gtndpi2kd2urmcq5tt2z,2021-06-03 16:10:42,"This used to be vertically center aligned, but I thought top aligned looked better given than the indicator icon has a circle at the top. But I can easily change it back to center."
116687,https://phabricator.services.mozilla.com/D116687,Bug 1710023 - Implement saslBind in LDAPOperation.jsm. r=darktrojan,PHID-USER-dw5lykey6useghnnszst,2021-06-08 02:59:35,"Add some comments, use ChromeUtils.defineModuleGetter"
116687,https://phabricator.services.mozilla.com/D116687,Bug 1710023 - Implement saslBind in LDAPOperation.jsm. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-06-08 02:39:51,No docs?
116687,https://phabricator.services.mozilla.com/D116687,Bug 1710023 - Implement saslBind in LDAPOperation.jsm. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-06-08 02:39:51,No docs?
116637,https://phabricator.services.mozilla.com/D116637,Bug 1714159 - Handle `c:/...` and `C:/...` when making relative paths in `mozlint`. r?ahal,PHID-USER-cje4weq32o3xyuegalpj,2021-06-02 19:40:36,"You have touched the documentation in diff 446507, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/bd201112-c3d5-11eb-8fcd-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
116637,https://phabricator.services.mozilla.com/D116637,Bug 1714159 - Handle `c:/...` and `C:/...` when making relative paths in `mozlint`. r?ahal,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-06-02 19:27:40,"Makes sense, thanks!"
116587,https://phabricator.services.mozilla.com/D116587,"Bug 1713996 - Deal with nested panels / popups correctly, and fix native panels in Windows 7/8. r=dao,Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-06-03 13:33:18,That sounds useful. I filed https://bugzilla.mozilla.org/show_bug.cgi?id=1714357 for this.
116587,https://phabricator.services.mozilla.com/D116587,"Bug 1713996 - Deal with nested panels / popups correctly, and fix native panels in Windows 7/8. r=dao,Gijs",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-03 12:50:00,"Perhaps this should be turned into a `-moz-native-contextmenus` query that does the `-moz-windows-default-theme and windows-win10` thing? That way it's easy to turn then on / off anyways, and the CSS looks nicer as well."
116587,https://phabricator.services.mozilla.com/D116587,"Bug 1713996 - Deal with nested panels / popups correctly, and fix native panels in Windows 7/8. r=dao,Gijs",PHID-USER-zp4gy3jjzfehipsktf6x,2021-06-03 12:48:36,"I don't feel _that_ strongly about it, it was nice to be able to debug this from win10 compared to having to spawn a VM, package the build, send it, etc."
116587,https://phabricator.services.mozilla.com/D116587,"Bug 1713996 - Deal with nested panels / popups correctly, and fix native panels in Windows 7/8. r=dao,Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-06-03 12:45:14,You said elsewhere that you wanted to keep the `-moz-proton-contextmenu` bits to allow checking the state of native menus using win10. Can you elaborate on how strong a requirement that is? I was hoping to remove most/all of the proton-related prefs during the 91 cycle.
116587,https://phabricator.services.mozilla.com/D116587,"Bug 1713996 - Deal with nested panels / popups correctly, and fix native panels in Windows 7/8. r=dao,Gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-06-03 12:45:14,"Thanks, this makes sense and looks like it works on Windows and fixes the Win7 issues, and the issue highlighted in the bug."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 19:13:01,https://bugzilla.mozilla.org/show_bug.cgi?id=1717096
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 18:53:53,Lando'ed! :) Thank you!
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 18:53:53,I'll file a followup bug.
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 18:46:13,Landing them resolving in the future/reporting a bug is a WFM 👍
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 18:46:13,"Oops, my mistake :) Let's land this!"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-52tll3zmlcopd5aoarnv,2021-06-17 18:32:45,"I've asked, and he replied

> IIRC, it was about serializers being pretty rude and indeterministic to the content

Which is not really helpful, because here we're only parsing? Up to you, but personally I'd really like this code to land, then make improvements as needed.

For what it's worth, compare-locales seems to be using pytoml https://hg.mozilla.org/l10n/compare-locales/file/tip/compare_locales/paths/configparser.py"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 18:17:51,@mhentges we activate the virtualenv and install pip requirements using requirements.in at the beginning of the command here?
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 18:02:31,"> I did make sure that dataclasses is installed in the virtualenv if we're <py37.

True, but I believe only CI respects `tools/compare-locales/requirements.in`, unless I'm mistaken.

> I'd lean towards not rewriting now

I agree that we shouldn't rewrite this right now, that doesn't make sense.
What about validating at the start of `cross_channel()` that `dataclass` can be imported? If not, then fail immediately there and say ""either install `dataclass` or use Python 3.7+""?"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 17:53:12,"I can wait to land until we resolve this, or we can file something as a followup. I'm open."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 17:50:15,"I'd lean towards not rewriting now, but we could revisit. I did make sure that `dataclasses` is installed in the virtualenv if we're <py37."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 17:50:15,"I hadn't used it much previously, but I agree."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 17:50:15,"Generally it's race conditions. If someone else pushes to the quarantine repo after we pull but before we push, we'll purge the commit, repull, and push a clean commit or find that there are no additional changes.

It's possible we won't have anyone pushing concurrently, but it was easy to add the retry.

Also, occasionally hg will hiccup and recover; this makes the task a bit more robust. If this were the only task we were maintaining, we could easily notice and rerun. Given thousands upon millions of tasks running, having each self-maintain as much as possible is important."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-17 17:50:15,"Thanks for the review!

>>! In D116537#3844880, @mhentges wrote:
> I'm a little worried about state modification outside of the tree (which `hgrc` is being edited?), but improving that is work that can be done in the future.
> Thanks for making this patch Aki 👍 

The hgrc is only modified if `MOZ_AUTOMATION` is set and the hgrc doesn't already exist, so I'm less worried about this."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-52tll3zmlcopd5aoarnv,2021-06-17 15:43:33,"I have a feeling we are doing this for issues with existing TOML libraries, but Axel is the one who could confirm (trying to see if I can get hold of him, and if he remembers)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,What's the fallible part that requires retries? I suppose that `hg` is hitting the network at some point?
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,Nit: this can be inlined
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,"Are we parsing `toml` with regex here?
Perhaps we should use `pytoml`?"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,Should these functions be `snake_case()`?
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,"Imagine if we always used `pathlib` everywhere in Mach instead of string paths 😍 😍 😍 😍 
The dream."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,"Heads up that `@dataclass` is new in Python 3.7, and Mach runs with Python 3.6+.
Is it possible to use `attrs` instead?
Alternatively, can you validate at command runtime that the current Python version is 3.7+?"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-06-17 15:36:29,"I'm a little worried about state modification outside of the tree (which `hgrc` is being edited?), but improving that is work that can be done in the future.
Thanks for making this patch Aki 👍"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-14 21:30:10,"Yeah. I could split the config out into a separate file, or add an option for this, but a) it's an abspath, and b) it's only used in automation."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-14 21:20:51,"mozilla-unified has the `central`, `beta`, etc bookmarks already pre-set-up. I install the `firefoxtree` extension to allow for the same for `comm`, `comm-beta`, and `comm-esr78` per https://bugzilla.mozilla.org/show_bug.cgi?id=1659691#c22 ."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-14 21:19:23,"Agreed on the comment. And I was thinking about removing this check, and then I realized I didn't know if the l10n internals required the directory name to be en-US somewhere and left it."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-06-14 20:40:14,"Ah, because it's a `path` instance, and `name` is just the last part. Maybe this deserves a comment if we both tripped up on it. (In an ideal world it could be named anything though...)"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-14 20:38:45,"I made this mistake too. It needs to be named `en-US`, but it can be at any absolute path as long as the name is `en-US`. So `../en-US` and `/tmp/en-US` would work."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-APPS-PhabricatorHeraldApplication,2021-06-14 20:34:00,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-06-14 20:34:00,This comment looks wrong? this block is doing firefox-ey set-up.
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-06-14 20:34:00,"If there's only one valid value for this, can we remove the option?"
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-06-14 20:34:00,"It's not ideal to be determining what is essentially a runtime workdir at the global level, but since it ends up as an absolute path, it's probably doing no harm."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-06-14 20:34:00,Feel free to ignore any of my comments; I don't think we should block on improvements as long as this is working for now.
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-14 20:02:31,"Code analysis found 1 defect in the diff 450836:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/450836) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d704e192162f5438b54942ff35485dccf117df3a)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-09 01:47:32,"Code analysis found 1 defect in the diff 448825:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/448825) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6e52258bdb2acf15daa7d82a5d866636c246ae5b)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-04 04:03:50,"Code analysis found 1 defect in the diff 447120:
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/447120) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=44be0deffa5203d2f1a54d9f137bb2360b06fecd)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-04 02:59:58,"Code analysis found 1 defect in the diff 447115:
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/447115) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fee281fe9a6a6e9a5a1859a22623fa4f59e48ab5)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-04 02:45:14,I've refactored the configs to be a single config dictionary.
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-04 02:43:30,"Ah, you probably mean the commit message. Fixed."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-03 02:07:40,"Code analysis found 2 defects in the diff 446698:
 - 1 defect found by py-black (Mozlint)
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/446698) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0fd975951fd490f104b068649efa59a6308a8e72)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-03 01:42:06,"Code analysis found 2 defects in the diff 446689:
 - 1 defect found by py-black (Mozlint)
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/446689) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ca346a97e1b516a21ae0125ce7bb22683ff675c3)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-03 01:36:52,"Or rather, it's probably the absolute path that removes the need for a softlink."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-03 01:34:50,"Ah, ok. I'll try specifying a path outside the sourcedir and see what happens."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-03 01:34:50,"Hm, I don't see a time in the commit comment in, e.g. https://hg.mozilla.org/users/axel_mozilla.com/gecko-strings-quarantine/rev/e0e5bf98bdbe99040acebd18afc356685b080586 ."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-52tll3zmlcopd5aoarnv,2021-06-02 06:53:41,"You actually want to clone the quarantine repository in the first step.

This is the typical scenario:
- Changes are pushed to quarantine on a daily basis
- Changes are pushed to gecko-strings in batches, once or twice a week. The timing depends on several factors (presence of issues, need to run fluent migrations, lack of new content).

You get an idea if you compare the two pushlogs
https://hg.mozilla.org/users/axel_mozilla.com/gecko-strings-quarantine/pushloghtml
https://hg.mozilla.org/l10n/gecko-strings/pushloghtml

And the final push would be to gecko-strings-quarantine.

Additional note: the list of branches changes over time. We'll need to add esr91 in a couple of months, and drop esr78 as well.

Locally I didn't have to softlink anything for comm/en-US. My `en-US` lives outside of the mozilla-unified clone, and I just run `./mach create-x-channel /home/flodolo/src/en-US/` without any issue."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-52tll3zmlcopd5aoarnv,2021-06-02 06:53:41,"Looking at the current history, we might want to add a time here
https://hg.mozilla.org/users/axel_mozilla.com/gecko-strings-quarantine/

It would probably make sense to run this twice a day, when we do merges to mozilla-central."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-02 01:54:46,"Code analysis found 1 defect in the diff 446164:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/446164) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9f1368c179c8513d7b30cbc76e7c6cfe5a5cf591)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-cje4weq32o3xyuegalpj,2021-06-02 01:52:45,"Code analysis found 1 defect in the diff 446163:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/446163) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3b12702c9af039092202bf9c174fa387f1f55e8b)."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-02 01:49:44,"I'm thinking either we want a `prep-x-channel`, maybe even a `clobber-x-channel`, or we want command line args to this command to allow for clobbering/prepping the clones.

For this to work, we need to:

- clone https://hg.mozilla.org/l10n/gecko-strings to `./en-US`
- clone https://hg.mozilla.org/comm-central/ to `./comm`
- `hg pull comm-beta` in `./comm`
- `hg pull comm-esr78` in `./comm`
- `hg pull comm-release` in `./comm` (we should get this list from `mozxchannel.branches` or `mozxchannel.REPOS` rather than hardcode here)
- softlink `./en-US` to `comm/en-US`

after this, `./mach create-x-channel en-US` will create a commit in `./en-US` that we either want to
- publish as a taskcluster artifact,
- push to phab, or
- push directly to gecko-strings."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-02 01:49:44,"I don't love that we have a destination arg that needs to be `en-US`. Either hardcode the path for real, or allow us to use a configurable path."
116537,https://phabricator.services.mozilla.com/D116537,Bug 1659691 - Update cross-channel algorithm to not replay history. r=#build,PHID-USER-ibmu5rn27dsuobpvfgtv,2021-06-02 01:49:44,"I'd like to go through the actual code logic and make sure I generally understand what it's doing.
Once I do that, I may change some of the code to be more pythonic and/or readable. After that, I'll submit for review."
116487,https://phabricator.services.mozilla.com/D116487,"Bug 1706445 - Only expect ContentSessionStore.jsm to load without Fission, r?gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-06-01 16:55:47,Thanks!
116487,https://phabricator.services.mozilla.com/D116487,"Bug 1706445 - Only expect ContentSessionStore.jsm to load without Fission, r?gijs",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-06-01 16:16:42,">>! In D116487#3790740, @kashav wrote:
> hi @gijs, do we prefer something like this instead?
> 
> ```
> if (!gFissionBrowser) {
>   known_scripts.modules.add(...)
> }
> ```


Yes please! That would be great, because it'll discover if we accidentally introduce loading it in the fission case, and/or if we stop loading it in the non-fission case, too.

> 
> Kinda surprised that there aren't any other (non-)Fission special cases already.

I think this test gets changed relatively little in general."
116487,https://phabricator.services.mozilla.com/D116487,"Bug 1706445 - Only expect ContentSessionStore.jsm to load without Fission, r?gijs",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-06-01 15:35:36,"hi @gijs, do we prefer something like this instead?

```
if (!gFissionBrowser) {
  known_scripts.modules.add(...)
}
```

Kinda surprised that there aren't any other (non-)Fission special cases already."
116437,https://phabricator.services.mozilla.com/D116437,Bug 1713733 - Remove WASM_LDFLAGS.,PHID-APPS-PhabricatorHeraldApplication,2021-06-01 14:58:55,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
116386,https://phabricator.services.mozilla.com/D116386,Bug 1713610: Require PyPI-vendored packages be added to requirements.in,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-05-31 22:09:12,"👋 Thanks for the fast review :)
I don't fully understand the suggestion - which workflow/use case will this address?

Is this to catch the case where someone runs `./mach vendor python` without changing anything?"
116386,https://phabricator.services.mozilla.com/D116386,Bug 1713610: Require PyPI-vendored packages be added to requirements.in,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-05-31 21:34:31,"I'm not convinced this idea is worth it, so feel free to ignore..

But we could compare the newly generated requirements.txt with the old requirements.txt (by comparing the hash before/after), and if they were identical we could print the the help message about modifying `requirements.in` first."
116386,https://phabricator.services.mozilla.com/D116386,Bug 1713610: Require PyPI-vendored packages be added to requirements.in,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-05-31 21:34:31,"Thanks, I 100% agree with this change."
116386,https://phabricator.services.mozilla.com/D116386,Bug 1713610: Require PyPI-vendored packages be added to requirements.in,PHID-USER-cje4weq32o3xyuegalpj,2021-05-31 14:51:21,"You have touched the documentation in diff 444868, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/0daf4f4a-c21d-11eb-8916-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
116386,https://phabricator.services.mozilla.com/D116386,Bug 1713610: Require PyPI-vendored packages be added to requirements.in,PHID-USER-cje4weq32o3xyuegalpj,2021-05-31 14:34:04,"You have touched the documentation in diff 444854, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b3591ca8-c21a-11eb-a8c9-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
116336,https://phabricator.services.mozilla.com/D116336,Bug 1713550 - Fix includes in js/public/GCVector.h. r?jandem,PHID-USER-ir4emeapesorzd6nq5ut,2021-05-31 06:50:30,"Makes sense, thanks for fixing!"
116286,https://phabricator.services.mozilla.com/D116286,Bug 1711573 - Revert NimbusFeatures.upgradeDialog to use its own feature r?k88hudson,PHID-USER-5tyh6lu2ycegxsjx6542,2021-05-28 20:07:32,https://hg.mozilla.org/mozilla-central/rev/d70a37d3e1b9
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 21:12:44,review fixes
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 21:12:43,"No, the point of this is so you can override default pref values (otherwise you could just do a normal merge)"
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,Could we please move this to head.js looks like every file uses it.
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,I think it's missing a test for remote defaults?
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,extra line?
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,`setupForExperiment` should already do this.
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,Shouldn't defaultValues go first?
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-28 14:59:29,looks good I just had nits
116236,https://phabricator.services.mozilla.com/D116236,Bug 1711885 - Add NimbusFeature.getAllVariables and deprecate Feature.getValue,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 12:16:30,"Landing this now in case we need to uplift changes

We can change .getValue() usages in 91."
116186,https://phabricator.services.mozilla.com/D116186,"Bug 1708446 - Add a browser mochitest to make sure the jank notification works properly for popup windows in the browser process. r?boris!,botond!,sotaro!",PHID-USER-n65mahsof3iw653q75na,2021-05-29 00:38:20,Nice test as usual :)
116186,https://phabricator.services.mozilla.com/D116186,"Bug 1708446 - Add a browser mochitest to make sure the jank notification works properly for popup windows in the browser process. r?boris!,botond!,sotaro!",PHID-USER-laiy2eaopxzo3vm6tath,2021-05-28 09:56:06,"{nav,  icon=info-circle, name=nitpick:} s/witdh/width/"
116186,https://phabricator.services.mozilla.com/D116186,"Bug 1708446 - Add a browser mochitest to make sure the jank notification works properly for popup windows in the browser process. r?boris!,botond!,sotaro!",PHID-USER-b7l2bar52zjm3qjrdkjb,2021-05-28 06:04:37,"Thanks for creating the test!
I do not know about the marker. But I confirmed animation jank happened and test failure with WebRender was addressed by D115470."
116186,https://phabricator.services.mozilla.com/D116186,"Bug 1708446 - Add a browser mochitest to make sure the jank notification works properly for popup windows in the browser process. r?boris!,botond!,sotaro!",PHID-USER-c6de5rnxld25mqp4pngs,2021-05-28 05:48:10,I had to disable this test on Mac since on Mac popup windows (at least the popup window opened by this test) uses basic layers for some reasons so no animation can run on the compositor.
116036,https://phabricator.services.mozilla.com/D116036,"Bug 1713000 - Convert condprof unittests to use Python 3, r?#releng-reviewers!",PHID-APPS-PhabricatorHeraldApplication,2021-05-26 20:23:06,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-29 11:49:58,Intentionally left this here and not moved to `value` to ensure backwards compatibility.
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 11:05:01,"What's the scenario where you would need to call `isEnabled` without defining `enabled` in the manifest? Alternatively, you could check the manifest first and return early."
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 11:05:01,good catch
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-dzwflhn6vv2l3fub734z,2021-05-28 11:05:01,Needs comment
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-27 08:29:21,"I've switched this around, apparently we used to do `remote >> userprefs` but that doesn't fit in with the `getVariable` convention."
115986,https://phabricator.services.mozilla.com/D115986,Bug 1710858 - Deprecate featureConfig.enabled in Experiment/Rollout definition,PHID-USER-wbnyz3tcqayarugxsdd2,2021-05-27 08:29:21,If the variable name is `enabled` and the value is `false` it wouldn't work correctly.
115936,https://phabricator.services.mozilla.com/D115936,Bug 1712815 - Fix the 'remove a file from a moz.build file' logic r?jewilde,PHID-USER-xsgci3i2hsoare3yoz63,2021-05-26 20:42:08,Looks great!
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-cje4weq32o3xyuegalpj,2021-05-27 09:03:23,"Code analysis found 3 defects in the diff 443601:
 - 3 defects found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/443601) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d4c79e1c185e47a4c0fcc7c7ed6ce1186eedbc39)."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-cje4weq32o3xyuegalpj,2021-05-26 15:37:40,"Code analysis found 3 defects in the diff 443281:
 - 3 defects found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/443281) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ddf48fd033b0cc57a90b607f6fcc7262141e616d)."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-gey4r4t5bybaqyglewhd,2021-05-26 14:58:56,"DropJSObjects doesn't use the participant, it just ends up calling `CycleCollectedJSRuntime::RemoveJSHolder`. I guess we could do something with another template argument to catch this, I'll add a patch for that."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-gey4r4t5bybaqyglewhd,2021-05-26 14:58:56,"Yeah, me too. But note also that the wrapper holds a strong reference to the object, so the destructor can't really be reached if we still have a preserved wrapper. And calling `ReleaseWrapper` if the wrapper isn't preserved is pointless."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-cje4weq32o3xyuegalpj,2021-05-25 15:19:12,"Code analysis found 3 defects in the diff 442731:
 - 3 defects found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/442731) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=418164cfc727eb901e1b0945593413bfb5c699a6)."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-bprqqtj6efvesojmjvm7,2021-05-25 14:55:36,What in the world? How did this even compile? This isn't nsISupports and doesn't have a cycle collector inner class.
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-bprqqtj6efvesojmjvm7,2021-05-25 14:55:36,"Weird, I'd somehow forgotten that DropJSObjects had a special case for wrapper cached objects."
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-bprqqtj6efvesojmjvm7,2021-05-25 14:55:36,"We should probably add a comment to HoldDropJSObjects.h that says that it does this clearing, if we're going to rely on it.

micronit: In the commit message: ""There's a pattern of clearing SJ things"".  SJ -> JS"
115885,https://phabricator.services.mozilla.com/D115885,Bug 1712725 - Stop clearing JS things when calling mozilla::DropJSObjects. r?mccr8!,PHID-USER-cje4weq32o3xyuegalpj,2021-05-25 13:21:08,"Code analysis found 4 defects in the diff 442691:
 - 1 defect found by py-black (Mozlint)
 - 3 defects found by code coverage analysis

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/442691) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ecad88ab898dd8ec0bb9ddfc226f60d8e75899da)."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 16:22:41,Follow up filed as Bug 1713344 (and added mention to it in the inline comment here).
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 16:07:23,Added mention to followup Bug 1713344 in the inline comments nearby the changes applied on test_ext_management.js.
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 15:33:59,"agreed

I'm going to file the follow up as P3/S4."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 15:33:59,New push to try:  https://treeherder.mozilla.org/#/jobs?repo=try&revision=34a0ad6ba30cb7511df745b30a4fed3244312b50
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-udrckg4snwyg3bct4zkg,2021-05-28 15:23:14,"Ideally the api would not return these.

Given that these internal and only possibly seen by privileged or mozilla extensions, I'm not really concerned about it.  Low prio/sev bug to followup?"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 15:11:09,"Honestly, I'm not sure that we should return internal permissions as part of the results of `browser.management.getSelf` (I haven't double-checked yet if they are also part of the results of some of the other management APIs, but I would assume that to be very likely the case).

This isn't actually new, I'm pretty sure it was already happening for the ""internal:privateBrowsingAllowed"" permission, the only reason why we haven't noticed it before is that the new internal permission is added automatically on startup for the test extensions identified as privileged, while the ""internal:privateBrowsingAllowed"" is only added automatically if the addon is privileged but not installed temporarily (because its purpose is to allow system and built in addon to get that permission automatically).

Now:
- for this particular bug we may choose to:
   - proceed with the current patch as is (given that this patch does not include also the tweaks to the tests that were not expecting the new internal permissions)
   - or do something similar to the private browsing permission and don't add the internal svg permission if are detected as privileged but installed temporarily. 

As additional follow up:
- do we want to actually filter out all internal permissions from management API results? (in that case I would file a follow up now and eventually mention it nearby the changes in this patch that could be ripped of once we fixed the follow up)
- this test file looks out of place in toolkit/mozapps/extensions, I think we may added here long long time ago just by mistake (and we do have another management API xpcshell test with the same exact name in our xpcshell tests at toolkit level, maybe we should roll this into that one)

@mixedpuppy wdyt?"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-28 14:59:10,Applied fixes to webextensions tests that were failing on permissions related assertions (because they didn't expect the new internal permission added automatically to privileged test extensions)
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:42:06,"ouch, I really hate my english typos :-(

thanks for spotting it, now should be fixed."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:42:06,"@mixedpuppy would you mind to set the testing policy tag?

No need to rush, this will wait until we are starting the 91 nightly cycle, and I'll have to come back to this to look to the results in the push to try to make sure everything passed as expected and none of the oranges are related to any of these changes."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:39:05,Fix typo
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-APPS-PhabricatorHeraldApplication,2021-05-27 20:32:04,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-cje4weq32o3xyuegalpj,2021-05-27 20:26:09,"Code analysis found 1 defect in the diff 443908:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/443908) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6f3a312a38fc6a68f26dac7fffd5e9597b69ca8d)."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-yzcqr7nfrnrx5fddj6af,2021-05-27 20:13:55,nit: that are owned by Mozilla (missing are)
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:12:43,"Push to try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=9755c5a34bc44d5173b09532e45829225ac7d80e
(the trailing whitespace linting error in fixed in the last update, it doesn't seem worth interrupting this try run just for that nit)."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:11:10,Fix linting error (removed trailing whitespace from mochitest)
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-27 20:06:19,"@mixedpuppy as discussed over Matrix:

- the proposed approach sounds reasonable and it does help to reduce the changes applied to XPIProvider.jsm to just a simple 1-line change.

- `isMozillaExtension` is now a private helper function and not a getter anymore (to avoid to assume that it can be accessed in other places where we do have access to the extension instance object) and it does throw an explicit error if `extension.startupReason` isn't one of the expected ones (this should make it ever more unlikely to start using it in other places where we can't guarantee that).

- to make the test_chrome_ext_svg_context_fill.html test able to complete successfully, I had to:
  - add `useAddonManager: ""temporary""` to make sure that `startupReason` will be set as it would be if the extension was installed through the AddonManager
  - apply a small change to ExtensionTestCommon.jsm to be able to mock the expected `startupReason` when we have to test the privileged extension (due to the limitation with how we can mock the privileged signature in a mochitest-browser)"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-xumvt235xw6lumpq5yog,2021-05-26 22:42:31,"{nav,  icon=info-circle, name=nitpick:} This sentence needs an update (right now it says ""we only enable context-paint for extensions that are signed by Mozilla"" - really the condition is now ""extensions that have the svgContextPropertiesAllowed permission"" or somesuch.  That's a bit abstract, though, so it'd probably still be worth noting that this is intended to be the set of Mozilla-authored extensions which we conceivably could rewrite once we have a better standards-based solution available, so that we can remove this feature at that point.)"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-xumvt235xw6lumpq5yog,2021-05-26 22:42:31,"{nav,  icon=keyboard-o, name=typo:} s/extension/extensions/ in the last line here."
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-xumvt235xw6lumpq5yog,2021-05-26 22:42:31,"r=me on the SVGContextPaint.cpp changes, modulo my inline comments. Thanks!"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-udrckg4snwyg3bct4zkg,2021-05-26 21:59:07,"Permissions are maintained in the permissions db, we don't need to set it on every startup.  install/upgrade/downgrade should have the addonwrapper, thus the recommendationState is available (I only verified install).

Thus...I would only do this logic for install/upgrade/downgrade.  That obviates the need for most of the changes in D115836, and what is necessary could probably just merge into this patch.

```
if ([""ADDON_INSTALL"", ""ADDON_UPGRADE"", ""ADDON_DOWNGRADE""].includes(this.startupReason)) {
  if (this.isMozillaExtension) {
    ...
  } else {
    ....
  }
}
```"
115835,https://phabricator.services.mozilla.com/D115835,"Bug 1710917 - Introduced internal:svgContextPropertiesAllowed webextension permission. r?dholbert!,mixedpuppy!",PHID-USER-5fjyseoxs2dahs7ryywh,2021-05-24 20:04:18,"@dholbert @mixedpuppy as a side note: no need to rush to this review, this wouldn't be something I would land so near to the soft-freeze anyway, I mainly wanted to draft it now that I was still around here.

(this patch to be honest shouldn't be too risky, but the one that is build on this one does need a couple more changes to the XPIProvider and I would prefer that to have some more backing time on nightly, and without the other patch this one doesn't technically make any difference in practice)."
115785,https://phabricator.services.mozilla.com/D115785,Bug 1540037 - part 17: Move `TextEditor::OnInputText()` into `EditorBase` r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-05-25 04:04:10,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115785,https://phabricator.services.mozilla.com/D115785,Bug 1540037 - part 17: Move `TextEditor::OnInputText()` into `EditorBase` r=m_kato!,PHID-USER-cje4weq32o3xyuegalpj,2021-05-24 08:34:05,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f1c33b69fa4da3f68af53cf6ad9aff73baae2ade&selectedTaskRun=eNCb7Z8KRAGTMLeedrvwJQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-28 15:04:07,I removed the `query_type` column and filed a followup: https://bugzilla.mozilla.org/show_bug.cgi?id=1713324
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-27 23:46:02,"You should be able to remove this `query_type` param altogether since we don't need it in the SQL query results anymore. If you're comfortable with doing that please go ahead. You'll need to remove the `:query_type` column from the `SELECT` statement in `SQL_ADAPTIVE_QUERY` and decrement all the indexes by 1 in the `QUERYINDEX` object.

Like Marco said, we should also probably modify the logic that gets the column values (now in `startQuery`) so that it uses column names instead of indexes, but we can leave that for a follow-up IMO unless you're eager to do it now.

If you'd rather not remove `query_type` here, that's fine, we can leave that for the same follow-up."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-erxup3oqd7if4an5l7ut,2021-05-27 09:11:21,Agreem we should just use column names and stop using indices here.
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-27 06:11:36,"Same here, with separate providers there's not really an expectation that different internal SQL queries share the same column indexes. I guess a lot of them do in practice since they were factored out of UnifiedComplete, so if you think it's a good idea to centralize them here, I'm OK with that, but I would still probably make these internal consts within each provider that needs them."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-27 06:11:36,"Do these values really need to be centralized somewhere anymore? They were used within UnifiedComplete by the SQL-query row processing function to tell which query a row came from. In theory that's not necessary in a world with separate providers except for when a provider runs multiple types of queries. AFAICT `AUTOFILL_ORIGIN` and `AUTOFILL_URL` are used only in the autofill provider, `FILTERED` isn't used at all (UnifiedComplete uses its own similar const), and `ADAPTIVE` isn't necessary anymore."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-27 06:11:36,"OK, r+ with:

* The maxResultCount changes in the muxer reverted (i.e., the changes not related to deduping)
* The buckets as I suggested earlier -- we may want another round of comments from @mak about that, or feel free to use your best judgment

testing-exception-elsewhere: Tests are in D115737"
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-27 05:38:41,"To recap the discussion and make sure we're on the same page, IMO this is the key point for this revision right now:

>>! In D115735#3773995, @mak wrote:
> My best guess is that for the same word, the user is likely to pick the same url, or a variation of it. I'd thus expect (again, we should verify with numbers at a certain point) top picks to be 1 or 2 entries. I think we'd be ""safe"" if we could define a minimum of 2 input history results in addition to flexibility. Can we do that?

That seems like a reasonable goal to me.

@harry your latest diff adds support for `maxResultCount` siblings of flexed buckets. We could do that, but we can also accomplish the same thing within the current simpler system. We can use the fact that buckets that don't have a max count try to fill up as much as possible (within their parent), kind of like a flex:

```lang=js
      // general
      {
        children: [
          {
            maxResultCount: 2, // or 3 to match UnifiedComplete?
            group: UrlbarUtils.RESULT_GROUP.INPUT_HISTORY,
          },
          {
            group: UrlbarUtils.RESULT_GROUP.GENERAL,
          },
        ],
      },
    ],
```

The GENERAL child doesn't have a max count, so it takes up the space that's left over in the top-level general bucket after filling in the input history sibling.

With your other revsions for remote tabs and about-pages, it would ultimately be:

```lang=js
      // general
      {
        children: [
          {
            maxResultCount: 2, // or 3 to match UnifiedComplete?
            group: UrlbarUtils.RESULT_GROUP.INPUT_HISTORY,
          },
          {
            flexChildren: true,
            children: [
              {
                flex: 1,
                group: UrlbarUtils.RESULT_GROUP.REMOTE_TAB,
              },
              {
                flex: 2,
                group: UrlbarUtils.RESULT_GROUP.GENERAL,
              },
              {
                flex: 2,
                group: UrlbarUtils.RESULT_GROUP.ABOUT_PAGES,
              }
            ],
          },
        ],
      },
    ],
```

We might want to remove the max count in the input history bucket altogether. That way it would fill up as much as possible (within the top-level general bucket).

Or we could have two input history buckets to more or less do what UnifiedComplete does, with up to 3 input history at the beginning and the rest at the end (and we could just use MATCH_ANYWHERE for all of them, like Marco suggests in the bug):

```lang=js
      // general
      {
        children: [
          {
            maxResultCount: 3,
            group: UrlbarUtils.RESULT_GROUP.INPUT_HISTORY,
          },
          {
            flexChildren: true,
            children: [
              {
                flex: 1,
                group: UrlbarUtils.RESULT_GROUP.REMOTE_TAB,
              },
              {
                flex: 2,
                group: UrlbarUtils.RESULT_GROUP.GENERAL,
              },
              {
                flex: 2,
                group: UrlbarUtils.RESULT_GROUP.ABOUT_PAGES,
              }
            ],
          },
          {
            group: UrlbarUtils.RESULT_GROUP.INPUT_HISTORY,
          },
        ],
      },
    ],
```

I guess my opinion is that we should do this last one -- i.e., preserve the UnifiedComplete behavior since it's possible to do that -- until we get telemetry or make a considered decision about changing it.

The simpler versions above would be fine with me too, where there's one input history bucket with a max count of 2 (or 3). In practice I'd guess having the final input history fallback bucket wouldn't matter too much since it would only come into play when there's not enough remote tabs + general + about-pages to fill up the remainder of the top-level general bucket."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 20:56:21,"Allow flexed result bucket children to define a maxResultCount property instead of flex. When this is set, we fill the child bucket up to that number of results. Its siblings flex as if it didn't exist. I'll write tests and documentation if this is deemed to be a good approach. Also modified muxer deduping code to dedupe results with identical URLs that come from different providers."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 17:46:14,"ah, wait. These new flex values mean that there are `Math.round(9 * ((3 + 4) / (3 + 4 + 6))) = 5` slots for top picks and general when we have sufficient input history. I didn't see that in my manual testing but maybe I didn't have enough input history. So this won't work :/

I'll see what else I can think of."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 17:38:51,"@adw, what do you think of this approach to buckets? It achieves a minimum of two input history results without losing flex or the ability to get granular with result type ordering. One drawback is that we show quite a lot of input history when search suggestions are shown first and we have no search suggestions. Input history can outnumber general results in a 4:3 ratio in that case. This case is tested in the changes to `browser_inputHistory` in Part 3. This seems like an extreme edge case since it also requires there being a large amount of input history for a term that is specific enough to not yield any search suggestions (or the user has disabled search suggestions). I also like these buckets since they set us up to try something like Marco suggested of a ""Top Picks"" category indicated in the UI."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 17:29:19,"Fix tests, reorder patch that introduces helper functions,  and rebase on input history bucket changes. Try from tip (including ProviderAboutPages): https://treeherder.mozilla.org/#/jobs?repo=try&revision=174eb755a73ec4b5b47322bcd29bcb6695c4c742"
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 14:31:19,"Thanks everyone for the feedback.

>>! In D115735#3773995, @mak wrote:
> 1. land this at the beginning of a Nightly cycle, get more users testing

This patch stack is quite large at this point and I was planning on waiting until the 91 cycle to land.

> 2. evaluate if we can put a minimum of 2 results of this kind, to cover the most common case we can think about

I think the revision I just pushed achieves this. I'm looking forward to review feedback.

> 3. evaluate adding telemetry for input history before the end of the cycle where this lands, there should be a bug for it already. We may not just report user picks like we do for other results, but also how many results of this kind we leave out because there's no space, is it a common thing?

Good idea, can do!

> Alternative path: as Drew suggested split the provider but still put its results in the general group. I'd do this only if it's a trivial amount of work over what has already been done, and we have no way to keep at least 2 results of this kind in the most common case for the current approach

My concern with keeping it in the general group is that we wouldn't be able to put other result groups between input history and general results. For example, UnifiedComplete currently puts remote tabs in that position. We wouldn't want remote tabs to come before input history."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-26 14:20:15,Ensure at least two 'top pick' results by creating a new top pick bucket separate from suggestions and general.
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-erxup3oqd7if4an5l7ut,2021-05-26 11:47:32,">>! In D115735#3772434, @adw wrote:
> * When search suggestions come before general (the default of course), there are only 3 slots for input history and general. That means there's only one slot for input history (3 * (1 / 3) = 1)
> * When search suggestions come after general, there are 6 slots for input history and general, so there are only 2 slots for input history (6 * (1 / 3) = 2)

I see those concerns, and unfortunately I cannot provide a definite answer, because we don't yet have telemetry about input history!
In general I think splitting input history into its own group is a good long term goal, we discussed in the past about a ""top picks"" section of results and making it made up of input history. It may also simplify recognizing results to properly add telemetry (Well I guess also checking their providerName would suffice), because currently we have no trivial way to distignuish what comes from input history.
The downside is what you pointed out, we risk to show fewer results of this kind compared to before. What we must understand if whether that, in practice, is a problem, and telemetry is what usually would tell that to us.
Without it, we can only do a best guess, that is more or less how we came to the current input history expiration strategy. Indeed the current stat is also not based on numbers, thus we cannot tell if it's working well. My feeling is that input history expiration could be a lot more aggressive...

My best guess is that for the same word, the user is likely to pick the same url, or a variation of it. I'd thus expect (again, we should verify with numbers at a certain point) top picks to be 1 or 2 entries. I think we'd be ""safe"" if we could define a minimum of 2 input history results in addition to flexibility. Can we do that?
A good chunk of this problem is imo also due to the fact Search Suggestions take a lot of space, and maybe 6 suggestions IS excessive, and I'm also not convinced the current default composition (with suggestions on top) is doing good to revenue, we only know it helps with search volume, those things in the past were often confused. I think we should seriously evaluate to reduce them, but of course that requires the involvement of a product manager. IMHO a good composition would include 2 top picks, 3 search suggestions and then general.

Going more into analysis of the problem:
Good:
* easier to control the group relative size
* easier to distinguish adaptive results VS others, thus to report telemetry
* easier in the future to label and move this group
Bad:
* may show less results of this type
* we have no data to tell if the current situation is good and we're making it worse, or the opposite, only a best guess

In my opinion, if I look at long term goals and technicals, splitting them has more benefits than downsides. BUT, I'd evaluate whether we could:
1. land this at the beginning of a Nightly cycle, get more users testing
2. evaluate if we can put a minimum of 2 results of this kind, to cover the most common case we can think about
3. evaluate adding telemetry for input history before the end of the cycle where this lands, there should be a bug for it already. We may not just report user picks like we do for other results, but also how many results of this kind we leave out because there's no space, is it a common thing?
4. Speak with Natalie to see what we want to do long term. Should we do an A/B test showing more/less of these results and see if users pick those? Do we want to experiment showing this group before Search Suggestions and see how it goes? Do we want to experiment a composition with LESS search suggestions and more Firefox Suggest results?

Alternative path: as Drew suggested split the provider but still put its results in the general group. I'd do this only if it's a trivial amount of work over what has already been done, and we have no way to keep at least 2 results of this kind in the most common case for the current approach."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-25 23:13:08,">>! In D115735#3772434, @adw wrote:
> I think we should consider keeping the current composition. We can still split out input history into its own provider, but we'd include its results in the general bucket and make sure the first 3 are sorted before other general results.

There may be some way we can do this with a separate input history bucket. I don't want to get bogged down in the technical details right now. First I want to discuss the outcome we want, and then we can figure out the implementation."
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-aaptg3a34v3lr4kblwu6,2021-05-25 23:03:00,"I think we need to be really careful with input history. Any changes we make to composition WRT to input history have the potential to discard results people might be used to seeing for certain search strings they're in the habit of using.

Currently the general bucket can contain [up to 3 input history results](https://searchfox.org/mozilla-central/rev/95c41d54c3fd65d51976d5188842a69b459a7589/toolkit/components/places/UnifiedComplete.jsm#1644) before other general results. With this revision, if we assume that there are ample search suggestions and general results so that those buckets fill up, then:

* When search suggestions come before general (the default of course), there are only 3 slots for input history and general. That means there's only one slot for input history (3 * (1 / 3) = 1)
* When search suggestions come after general, there are 6 slots for input history and general, so there are only 2 slots for input history (6 * (1 / 3) = 2)

So if I'm using the default of showing suggestions before general and I'm used to seeing even just 2 results with my usual ""foo"" search string, the second one is now gone. Are there actually people who rely on results after the first one like that? It doesn't seem super likely, but can we rule it out? And of course the story is more complex than this because of flex, so this is the worst case.

I think we should consider keeping the current composition. We can still split out input history into its own provider, but we'd include its results in the general bucket and make sure the first 3 are sorted before other general results.

If we really want a separate input history bucket, then first we might want to collect some telemetry over a period of time that would help us make decisions so we don't break people's habits.

What do you think? @mak?"
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-25 18:07:17,Switch result buckets from a 3:3:6 ratio to a 1:1:2 ratio.
115735,https://phabricator.services.mozilla.com/D115735,Bug 1662167 - Split UrlbarInputHistoryProvider from UnifiedComplete. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-25 17:57:19,"As noted in https://phabricator.services.mozilla.com/D114896#3763692, I realized I had to port UrlbarProviderInputHistory before landing UrlbarProviderRemoteTabs. I've reordered set of patches on Phabricator to reflect the order they will land: UrlbarProviderInputHistory first, then UrlbarProviderRemoteTabs, then UrlbarProviderAboutPages. Here are try runs up to and including each part:
InputHistory: https://treeherder.mozilla.org/jobs?repo=try&revision=4b7e38e233d996313d0dee839fb05a9dfa1e8a90
RemoteTabs: https://treeherder.mozilla.org/#/jobs?repo=try&revision=22a469cbb416058a21eff7e37f65082f66fbd9dd
AboutPages: https://treeherder.mozilla.org/jobs?repo=try&revision=4b7e38e233d996313d0dee839fb05a9dfa1e8a90

I'm going to land each part separately so its easier to catch regressions."
115685,https://phabricator.services.mozilla.com/D115685,Bug 1499679 - [devtools] Display private properties in ObjectInspector. r=bomsy.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-26 12:23:35,rebase + addressing review comments
115685,https://phabricator.services.mozilla.com/D115685,Bug 1499679 - [devtools] Display private properties in ObjectInspector. r=bomsy.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-25 15:04:09,"{nav,  icon=question-circle, name=question:} No `assertionName` needed here?"
115685,https://phabricator.services.mozilla.com/D115685,Bug 1499679 - [devtools] Display private properties in ObjectInspector. r=bomsy.,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-25 15:04:09,LGTM! Thanks @nchevobbe
115685,https://phabricator.services.mozilla.com/D115685,Bug 1499679 - [devtools] Display private properties in ObjectInspector. r=bomsy.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-25 07:29:36,"this would fail if we're connecting to an older server, where the `PrivatePropertiesActor` does not exist, but we don't have to do a backward compat check as this will only be called if we have a grip with a non-falsy `privatePropertiesLength` property, which will only happen on server that does have `PrivatePropertiesActor`"
115685,https://phabricator.services.mozilla.com/D115685,Bug 1499679 - [devtools] Display private properties in ObjectInspector. r=bomsy.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-25 07:29:36,TRY looks fine https://treeherder.mozilla.org/jobs?repo=try&revision=3c651a8d2122c260523eea9d6d24ae9daa909033
115534,https://phabricator.services.mozilla.com/D115534,Bug 1699106 - Update tests for room type changing. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-27 10:15:58,Fix conversation status icon not updating and remove some dead lines
115534,https://phabricator.services.mozilla.com/D115534,Bug 1699106 - Update tests for room type changing. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-25 15:59:57,"Yes, it spins until the end of the current microtask queue (as in, any promise created after this one will not be waited for)."
115534,https://phabricator.services.mozilla.com/D115534,Bug 1699106 - Update tests for room type changing. r=clokep,PHID-USER-dwpfvsjwm7z2pc33irbh,2021-05-25 15:58:44,What's the point of awaiting on a resolved promise? Does this just spin a bit?
115534,https://phabricator.services.mozilla.com/D115534,Bug 1699106 - Update tests for room type changing. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-19 19:59:09,Try: https://treeherder.mozilla.org/jobs?repo=try-comm-central&selectedTaskRun=QeBNT76tSUSWol5rMnp9Iw.0&revision=594e48eeff26338ef3a8d52877588da8aacd5272
115484,https://phabricator.services.mozilla.com/D115484,Bug 1695911 - Flip dom.security.secFetch.enabled pref to true. r=ckerschb,PHID-APPS-PhabricatorHeraldApplication,2021-05-19 14:04:30,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115484,https://phabricator.services.mozilla.com/D115484,Bug 1695911 - Flip dom.security.secFetch.enabled pref to true. r=ckerschb,PHID-USER-nuepobnv4pvugt3cop6w,2021-05-19 14:04:30,That's great! I take it @ngogge will email an intent to ship as per https://wiki.mozilla.org/ExposureGuidelines? Are we also planning a blog post? This seems like a good feature to highlight.
115484,https://phabricator.services.mozilla.com/D115484,Bug 1695911 - Flip dom.security.secFetch.enabled pref to true. r=ckerschb,PHID-USER-hvjw2anoq2st4rvqlvij,2021-05-19 12:37:51,"Hey Anne, we got all of the blockers of this bug out of the way.
FWIW, I don't think Bug 1596402 is a blocker (more a nice to have) and Bug 1648825 will land in the upcoming hours.

Anything we are missing or are we good to go?"
115433,https://phabricator.services.mozilla.com/D115433,Bug 1711805 - Extract uses of gBrowser in PrintUtils in a way that can be easily overridden. r?emilio,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-05-19 10:45:59,">>! In D115433#3754074, @emilio wrote:
> Might be good to at least move createBrowser somewhere else if thunderbird needs it, but this is fine for now of course.

Yeah, there's a bunch of related stuff that could probably be generalised and moved to toolkit, but for now I'm just trying to make it work."
115433,https://phabricator.services.mozilla.com/D115433,Bug 1711805 - Extract uses of gBrowser in PrintUtils in a way that can be easily overridden. r?emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-05-19 09:06:26,"Might be good to at least move createBrowser somewhere else if thunderbird needs it, but this is fine for now of course."
115433,https://phabricator.services.mozilla.com/D115433,Bug 1711805 - Extract uses of gBrowser in PrintUtils in a way that can be easily overridden. r?emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 00:21:49,"Code analysis found 2 defects in the diff 440047:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440047) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a9c1e3af79e78086ec2e5f9b1177d24477bb2982)."
115433,https://phabricator.services.mozilla.com/D115433,Bug 1711805 - Extract uses of gBrowser in PrintUtils in a way that can be easily overridden. r?emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 00:20:47,"Code analysis found 2 defects in the diff 440046:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440046) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=41d1c8be3efdad90d38a09ff6899cc5d006dc861)."
115433,https://phabricator.services.mozilla.com/D115433,Bug 1711805 - Extract uses of gBrowser in PrintUtils in a way that can be easily overridden. r?emilio,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-05-19 00:04:28,I missed a bit. Always happens!
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-ebebpbp2fnufsd3f2mah,2021-06-06 16:14:34,That's a very good point. Most of the locking infra in this code has been designed over a decade ago and it can use an overhaul. I'll file a follow-up to do this.
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-ruq5ejjhx3x6j2plczmr,2021-06-04 18:57:31,"Unrelated thought - I feel like `isSafeToDump` could be [[ https://searchfox.org/mozilla-central/rev/bf8d5de8528036c09590009720bc172882845b80/xpcom/threads/DataMutex.h#16-37 | one of our data mutex types  ]] instead of holding an actual safety lock every time we need to access it. That way we will always hold a locked ref of it when we need it, and guarantees that we don't make any unsafe calls into `isSafeToDump` which would most definitely cause a race."
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-ruq5ejjhx3x6j2plczmr,2021-06-04 18:57:31,Nit: I see why we want multiple locks holding this section based on what we're accessing into. It'll help with readability though if we put this part in a block.
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-ruq5ejjhx3x6j2plczmr,2021-06-04 18:57:31,"Whoops, I had comment drafts in another tab that I didn't save. Insert me being bad at phabricator"
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-APPS-PhabricatorHeraldApplication,2021-06-03 16:33:18,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-ruq5ejjhx3x6j2plczmr,2021-06-03 16:33:18,"Sorry for the wait on these, looks good so far"
115379,https://phabricator.services.mozilla.com/D115379,Bug 1697895 - Register the WER runtime exception module in child processes r=KrisWright,PHID-USER-cje4weq32o3xyuegalpj,2021-05-18 16:00:56,"Code analysis found 11 defects in the diff 439831:
 - 11 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e54c497f9805b99994280fbfb3545c21f5ef36df&selectedTaskRun=MaAThbdDS3CTNGiVAp_TiQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/439831) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e54c497f9805b99994280fbfb3545c21f5ef36df)."
115329,https://phabricator.services.mozilla.com/D115329,Bug 1711627 - Avoid xptdata.h being (indirectly) included so much.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-18 20:56:06,">>! In D115329#3752398, @glandium wrote:
>>>! In D115329#3750818, @nika wrote:
>> Taking a quick look at the generated code again, it looks like `xptdata.h` doesn't generate include guards, so code will break if it is included multiple times. Given that we're now encouraging including the header directly from the use site I think it would be good add include guards to the generated header in `xptcodegen.py`.
> 
> I don't think anything is expected to include the header but StaticComponents.cpp.

I don't think anything currently does other than that header, but I would rather code not break if we add another file which includes the header.  Could we add some include guards to the strings we're writing out here? https://searchfox.org/mozilla-central/rev/98a9257ca2847fad9a19631ac76199474516b31e/xpcom/reflect/xptinfo/xptcodegen.py#471-483"
115329,https://phabricator.services.mozilla.com/D115329,Bug 1711627 - Avoid xptdata.h being (indirectly) included so much.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-05-18 20:22:12,">>! In D115329#3750818, @nika wrote:
> Taking a quick look at the generated code again, it looks like `xptdata.h` doesn't generate include guards, so code will break if it is included multiple times. Given that we're now encouraging including the header directly from the use site I think it would be good add include guards to the generated header in `xptcodegen.py`.

I don't think anything is expected to include the header but StaticComponents.cpp."
115329,https://phabricator.services.mozilla.com/D115329,Bug 1711627 - Avoid xptdata.h being (indirectly) included so much.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-05-18 17:57:23,"Yeah, I think this method logically belongs on `nsXPTInterfaceInfo`. Forward declaring `nsXPTInterface` in `xptinfo.h` seems like the best option at this point. The only reason I originally wrote it this way was that we still couldn't use `enum class` forward declarations in tree at that point."
115329,https://phabricator.services.mozilla.com/D115329,Bug 1711627 - Avoid xptdata.h being (indirectly) included so much.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-18 14:18:03,"nit: IIRC we can keep this around by forward-declaring `nsXPTInterface` with `enum class nsXPTInterface : uint16_t`, and I think I prefer keeping the cast in the header file :-)"
115329,https://phabricator.services.mozilla.com/D115329,Bug 1711627 - Avoid xptdata.h being (indirectly) included so much.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-18 14:18:03,"Taking a quick look at the generated code again, it looks like `xptdata.h` doesn't generate include guards, so code will break if it is included multiple times. Given that we're now encouraging including the header directly from the use site I think it would be good add include guards to the generated header in `xptcodegen.py`."
115228,https://phabricator.services.mozilla.com/D115228,Bug 1711073 - wasm: Move SymbolicAddress family to WasmBuiltins. r?lth,PHID-USER-cje4weq32o3xyuegalpj,2021-05-27 03:37:12,"Code analysis found 8 defects in the diff 443549:
 - 8 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/443549) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=19efa005a3eb09c0420441492d7d603bd1cd43fb)."
115228,https://phabricator.services.mozilla.com/D115228,Bug 1711073 - wasm: Move SymbolicAddress family to WasmBuiltins. r?lth,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 23:03:14,"Code analysis found 8 defects in the diff 440513:
 - 8 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440513) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a435eb2595830f0e2d33ba94b0fe14a8875b0672)."
115178,https://phabricator.services.mozilla.com/D115178,Bug 1627175 - part 66: Move `HTMLEditor::IsTextPropertySetByContent()` to `HTMLEditUtils` r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-05-18 06:45:23,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
115128,https://phabricator.services.mozilla.com/D115128,Bug 1710495 - Remove unused args from ReportInNotObjectError r?mgaudet,PHID-USER-4bmd7d25nix2m4x6y6uw,2021-05-17 14:29:13,"Looks great! I'll submit this to try, then approve it and land it."
115078,https://phabricator.services.mozilla.com/D115078,Bug 1711118 - Part 1. Allow Software WebRender for all desktop users in release.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-13 20:15:15,"Code analysis found 1 defect in the diff 438753:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/GfxInfo.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Bw65-_9KSOG7OYKa3NOpxQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-sxvwir7i6khkkg5mc6o7.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/438753) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4a179a91bdac786a879950fdd5ce860e3ede16f4)."
115078,https://phabricator.services.mozilla.com/D115078,Bug 1711118 - Part 1. Allow Software WebRender for all desktop users in release.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-13 19:57:32,"Code analysis found 1 defect in the diff 438749:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/GfxInfo.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/a6D3A4bKSBmR4ux_ZGs6cA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-eq27wnl3qup6tbgflqkk.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/438749) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=57edbc70576c7be93809c3326d951fd0bc7a9b99)."
115078,https://phabricator.services.mozilla.com/D115078,Bug 1711118 - Part 1. Allow Software WebRender for all desktop users in release.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-13 19:55:31,"Code analysis found 1 defect in the diff 438742:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p widget/cocoa/GfxInfo.mm`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/LF1FtiFfSj65KmLQ7-Y4VA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-e45t3arbghguc3efhiax.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/438742) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=784226f27ac110312a4e84105eb0dfc8d66a1760)."
115027,https://phabricator.services.mozilla.com/D115027,Bug 1710951: Explicitly set mainCommentMessage in PublicPing,PHID-USER-n77lkspun6bajdj6gwx4,2021-05-25 16:01:13,r=dkl
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-rhunb45lsx37xy7qj2nh,2021-05-27 14:59:21,https://treeherder.mozilla.org/jobs?repo=try&revision=8e5e0cd0004f8c3847cc1d4dc1dbc24cacf61179
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-27 14:44:26,nit: remove blank line
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-27 14:44:26,I think we can remove this line and line 31
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-27 14:44:26,nit: add a blank line after this
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-27 14:44:26,"Looks good now, thanks!

Before landing though, could you make a try run for some browsertime tests to make sure we didn't break anything there?"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-wvz3wsjgnskz5wwionsn,2021-05-26 10:57:19,lint errors
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-26 10:18:38,"Code analysis found 1 defect in the diff 443161:
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/443161) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d7f291b5a1b83aaa498b07b2608cbadaaf7eab19)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-wvz3wsjgnskz5wwionsn,2021-05-26 08:07:39,some reviewbot tests are failing
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:20:13,"I think this test should be raising an expection or a failure of some sort.

EDIT: Ah the `p.wait(10) == 4 ` gives us that - could you add a comment about that?"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:20:13,"nit: There's something odd going on in this string, you could change it to:
```
""The path to the binary being tested (typically firefox).""
```"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:20:13,I think there's just a few more things to change then the patch will be good.
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:15:03,"That works for me, thanks!"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:14:36,"Ok, let's change it to `file`"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-21 14:14:36,"Ok, could you add a CLI option (--verbose/-v) so we can do this easily without modifying the mozproxy code?"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-wvz3wsjgnskz5wwionsn,2021-05-20 07:29:10,you have mozlint failures
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 21:05:55,"Code analysis found 4 defects in the diff 440471:
 - 2 defects found by py-black (Mozlint)
 - 2 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440471) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1a7b9b1c61ac3ec529d9503461269265aad7bd40)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 21:03:14,"Code analysis found 4 defects in the diff 440467:
 - 2 defects found by py-black (Mozlint)
 - 2 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440467) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=09752f1508ff0bb41d5fd1505783c32fb2449881)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 20:48:30,"Code analysis found 4 defects in the diff 440450:
 - 2 defects found by py-black (Mozlint)
 - 2 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440450) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=db0f489f8f8455c72a93f7c344e36a43fb82eed1)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 20:48:16,"Code analysis found 4 defects in the diff 440444:
 - 2 defects found by py-black (Mozlint)
 - 2 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440444) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c89db8ef835d195e04a18ecb455b65a21781520b)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 20:30:05,"Code analysis found 4 defects in the diff 440441:
 - 2 defects found by py-black (Mozlint)
 - 2 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440441) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=425cdff011f46c6b2f0f1d2d23b0ab2071602e79)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-rhunb45lsx37xy7qj2nh,2021-05-19 20:17:15,">> Also, what do you think about renaming this to files or file?
your choice I'm ok with any option"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-rhunb45lsx37xy7qj2nh,2021-05-19 20:17:15,"the -v adds to much information in the logs.
info that is mitm specific. if we need it we can have a try build with -v"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-rhunb45lsx37xy7qj2nh,2021-05-19 20:17:15,"we can rename the function `start_mitmproxy` and that should solve the confusion.

Having a separate method would create a lot of duplication"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:38,"We should add a couple more tests for handling multiple files being given in record mode, and not enough files being given."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:38,"We could change this to `nargs=""+""` to make sure there is always at least 1 file being provided."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:38,Let's clarify this help message to say something like `Recording will be saved to ...`
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:38,Capitalize `Run` and add a period.
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:38,Missing period
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,Capitalize the `t` in `the` and add a period to the end of the sentence.
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,`The host to use for the proxy server.`
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,"We should clarify this help comment to differentiate between record and playback modes.

For instance:
```
The playback files to replay, or the file that a recording will be saved to. For playback, it can be any combination of the following: zip file, manifest file, or a URL to zip/manifest file. For recording, it <...>
```"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,"nit: Use the following:
```
Proxy server mode. Use `playback` to replay from the provided file(s). Use `record` to generate a new recording at the path specified by `--filepath`.
```"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,"This should be a required argument, and we should also check to make sure that we only have one filepath when we are in record mode (raising an error or warning if we have more than one).

Also, what do you think about renaming this to `files` or `file`?"
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,nit: get rid of this blank space
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,nit: get rid of this blank space
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,Did you remove this on purpose?
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,"This is confusing. Why do we have this in the `start_mitmproxy_playback` function, shouldn't we have a separate method for record mode? If there's a reason behind this decision, we should document that here."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-b567qwxved23xbtlnn6y,2021-05-19 18:07:37,It's getting there!
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-rhunb45lsx37xy7qj2nh,2021-05-18 20:11:37,https://treeherder.mozilla.org/jobs?repo=try&revision=f8fe47033a4265bbad25b4f777f077944783f046
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-12 14:30:12,"Code analysis found 2 defects in the diff 438277:
 - 1 defect found by py-black (Mozlint)
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/438277) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5472f7a1f8f0112659318f8ba233dec93dc3b6f8)."
114977,https://phabricator.services.mozilla.com/D114977,Bug 1706676 - [mozproxy] Add mozproxy record mode r=sparky,PHID-USER-cje4weq32o3xyuegalpj,2021-05-12 14:25:23,"Code analysis found 2 defects in the diff 438275:
 - 1 defect found by py-black (Mozlint)
 - 1 defect found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/438275) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0d41c505d1a9c647ecae29ba091909cf877847f6)."
114927,https://phabricator.services.mozilla.com/D114927,"Bug 1710674 - [devtools] Fix target-mixin resource cache mechanism. r=ochameau,bomsy.",PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-12 14:04:52,rebase and address review comments
114927,https://phabricator.services.mozilla.com/D114927,"Bug 1710674 - [devtools] Fix target-mixin resource cache mechanism. r=ochameau,bomsy.",PHID-USER-aqylzdu7ya2kd4nq4man,2021-05-12 12:54:16,"Whaaa nice catch! I completely miss the buggy call to off() during review.

It is interesting as I suggested to Julian this morning something that would probably help getting rid of all that complexity.
Today resource-*-form event are sent onto the target actor. It makes the whole Watcher actor watchResource API bound to fronts, protocol.js and instanciated actor.
Whereas this API was a first step toward being independant from all that.
For example, we tried to avoid having resources to be fronts.

More concretely, here these resource-*-form may be communicated manually via the target helper and custom JSWindowActor message up to the parent process,
from there we could:
* emit an ""unexpected event"", a JSON packet in RDP not bound to any actor (probably not a good idea today)
* emit the event onto the watcher actor, like parent process resources and have to resource bound to the right target via browsingContextID attribute.
As WatcherFront is always available and ready to receive and listen events, we would *not* have to do this little dance here...!"
114927,https://phabricator.services.mozilla.com/D114927,"Bug 1710674 - [devtools] Fix target-mixin resource cache mechanism. r=ochameau,bomsy.",PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-12 10:40:34,LGTM! Thanks @nchevobbe
114927,https://phabricator.services.mozilla.com/D114927,"Bug 1710674 - [devtools] Fix target-mixin resource cache mechanism. r=ochameau,bomsy.",PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-12 07:14:40,fix test failures
114927,https://phabricator.services.mozilla.com/D114927,"Bug 1710674 - [devtools] Fix target-mixin resource cache mechanism. r=ochameau,bomsy.",PHID-USER-dpdc2o7i5cltf25wy6ul,2021-05-12 06:22:20,TRY push for the queue: https://treeherder.mozilla.org/jobs?repo=try&revision=f9124e5708f6ce49e5bc553c7d2bd3d5826d2eff
114877,https://phabricator.services.mozilla.com/D114877,Bug 1702957 - Wait for compose window being ready before using set/getComposeDetails. r=mkmelin,PHID-USER-4wdjal4tjyfedkowehzk,2021-05-11 17:46:52,This is the actual bug fix. Await the composer being ready before calling `GetComposeDetails.`
114877,https://phabricator.services.mozilla.com/D114877,Bug 1702957 - Wait for compose window being ready before using set/getComposeDetails. r=mkmelin,PHID-USER-4wdjal4tjyfedkowehzk,2021-05-11 17:46:52,"Learned from Standard8, that the eventListener is not removed if `composeWindow.composeEditorReady` is already set. Reworked this code in the new `composeWindowIsReady` function. Decided to move it into a dedicated function for re-usability."
114877,https://phabricator.services.mozilla.com/D114877,Bug 1702957 - Wait for compose window being ready before using set/getComposeDetails. r=mkmelin,PHID-USER-4wdjal4tjyfedkowehzk,2021-05-11 17:46:52,"Moved closer to the creation of the window, for better readability."
114827,https://phabricator.services.mozilla.com/D114827,Bug 1520983 - part 2: Make `IMEInputHandler::InsertTextAsComittingComposition()` use `eContentCommandInsertText` event if there is no composition r=m_kato,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-05-12 23:27:05,"Adding `MOZ_DIAGNOSTIC_ASSERT` here for detecting a bug. This must not be occur since the caller should handle it with doing nothing or ""delete selection"" content command by the caller.
https://searchfox.org/mozilla-central/rev/e3c34d34cc7dce56df377f05183ad379ac1de123/widget/cocoa/TextInputHandler.mm#2288,2337"
114827,https://phabricator.services.mozilla.com/D114827,Bug 1520983 - part 2: Make `IMEInputHandler::InsertTextAsComittingComposition()` use `eContentCommandInsertText` event if there is no composition r=m_kato,PHID-USER-dn2p6nmnntc3pcwsvrhy,2021-05-11 12:23:52,"To writing test, we need something mock level implementation for IME. But actually, there is no way to write mock on macOS."
114827,https://phabricator.services.mozilla.com/D114827,Bug 1520983 - part 2: Make `IMEInputHandler::InsertTextAsComittingComposition()` use `eContentCommandInsertText` event if there is no composition r=m_kato,PHID-APPS-PhabricatorHeraldApplication,2021-05-11 12:22:15,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
114777,https://phabricator.services.mozilla.com/D114777,Bug 1709931 - Properly shut down ParticularProcessPriorityManager when destroying it.,PHID-APPS-PhabricatorHeraldApplication,2021-05-12 20:09:47,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
114777,https://phabricator.services.mozilla.com/D114777,Bug 1709931 - Properly shut down ParticularProcessPriorityManager when destroying it.,PHID-USER-ebebpbp2fnufsd3f2mah,2021-05-12 20:09:46,LGTM
114677,https://phabricator.services.mozilla.com/D114677,Bug 1710193 - Return correct dir from `PathUtils.getLocalProfileDir`. r?barret,PHID-USER-2gujohlr3u3puvz4jmvz,2021-05-11 20:59:39,"#check-in_needed handled, landing queued."
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-cje4weq32o3xyuegalpj,2021-08-31 14:20:52,"Code analysis found 10 defects in the diff 476445:
 - 10 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/476445) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3e4567dbb86f80b709832d573bbcd92aa810c0a0)."
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-26 16:01:07,nit: No need for `mozilla::` here.
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-26 16:01:07,Perhaps just use `CSSPixel::ToAppUnits` consistently?
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-zp4gy3jjzfehipsktf6x,2021-08-26 16:01:07,"Makes sense to me. If you want to fix that inconsistency by using `CSSPixel::ToAppUnits` and also add the braces that clang-tidy requests, it'd be great."
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-cje4weq32o3xyuegalpj,2021-08-26 09:47:18,"Code analysis found 2 defects in the diff 475226:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/475226) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=eb1512ecb5ecbb97147553590f26f5746f7f4b18)."
114577,https://phabricator.services.mozilla.com/D114577,"Bug 1708709 Use appunits for mScreenRect to avoid rounding errors, r?emilio",PHID-USER-cje4weq32o3xyuegalpj,2021-05-07 08:58:53,"Code analysis found 5 defects in the diff 436665:
 - 2 defects found by clang-format
 - 3 defects found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach clang-format -p layout/xul/nsMenuPopupFrame.h layout/xul/nsMenuPopupFrame.cpp`
 - `./mach lint --warnings --outgoing`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/RLBBd-ADSYC5DV_hxAV7Tg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-h37pwezwxrngi4grk4ii.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/436665) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3d113577a917fc09e9ec49742668822cf3d9897a)."
114527,https://phabricator.services.mozilla.com/D114527,Bug 1709918 - Process --gecko-profile* options correctly.,PHID-USER-quoh3mwvqjdpzkhrtcuf,2021-05-13 14:49:30,Thanks for the fix and test!
114527,https://phabricator.services.mozilla.com/D114527,Bug 1709918 - Process --gecko-profile* options correctly.,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-05-06 18:23:55,Process --gecko-profile* options correctly.
114477,https://phabricator.services.mozilla.com/D114477,Bug 1709678 - Restore topic when leaving log view. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-06 18:15:36,rebase
114477,https://phabricator.services.mozilla.com/D114477,Bug 1709678 - Restore topic when leaving log view. r=clokep,PHID-USER-dwpfvsjwm7z2pc33irbh,2021-05-06 17:46:05,"I had some trouble reproducing the current bug, but I think the changes here are OK."
114477,https://phabricator.services.mozilla.com/D114477,Bug 1709678 - Restore topic when leaving log view. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-06 17:29:29,Add some JSDoc
114477,https://phabricator.services.mozilla.com/D114477,Bug 1709678 - Restore topic when leaving log view. r=clokep,PHID-USER-dwpfvsjwm7z2pc33irbh,2021-05-06 17:18:08,"I'm fairly certain that this is OK, but while we're here could we add some JSDoc to the methods we're touching? I'd love to start incrementally documenting the internals a bit."
114477,https://phabricator.services.mozilla.com/D114477,Bug 1709678 - Restore topic when leaving log view. r=clokep,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-06 11:30:07,Try: https://treeherder.mozilla.org/jobs?repo=try-comm-central&revision=90fe436e2cc5ccdc27adf3ed2505cef4dda1864d
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-cje4weq32o3xyuegalpj,2021-07-12 19:17:40,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e2f853352065a3e17975682ca6d371fd8af5c1fb&selectedTaskRun=d4YjLtFfQWaYQLK9WSKwfw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-07-12 19:02:11,rebase
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-07 22:38:00,remove unneeded sGetCurrentPackage cache
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-07 16:54:08,"I was thinking we might need the package ID itself eventually, though that could also just be collected at init. So I'll remove the cached ptr."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-hkitahbkppitqpq54yj3,2021-05-07 15:47:13,"I don't think this patch needs to store this pointer, we're only going to call the function once ever. It's fine if you're planning on adding a utility here later on that needs this pointer though."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 20:27:33,I'm going to factor this out into WinUtils to make it simple to get at from C++ (for use in nsWindowsShellService).
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 16:30:06,">>! In D114427#3718422, @agashlin wrote:
> It will be straightforward to add this to telemetry later within delayedInit, once we understand how the data review is to proceed.

Filed [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1709892 | bug 1709892 ]]."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 16:15:37,">>! In D114427#3716520, @agashlin wrote:
> I'm just going to keep this simple and put it right on sysinfo.

Scratch that late-night frustration, I'll leave this as-is. It will be straightforward to add this to telemetry later within delayedInit, once we understand how the data review is to proceed."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 06:52:28,I'm just going to keep this simple and put it right on sysinfo. It's not as if kernel32 would need to load.
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 02:11:48,prevent hasPackageId from getting into the telemetry environment
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 01:35:17,">>! In D114427#3715724, @mhowell wrote:
> I found [[ https://searchfox.org/mozilla-central/rev/e08a9aa5c5dfb77e8847ab7af3f753a9c3e551f8/toolkit/components/telemetry/app/TelemetryEnvironment.jsm#1012-1015 | this bit in telemetry ]] that we should probably also update here and perhaps add this to the ping environment (or to the docs if the new property would get picked up automatically, which I think it might).

Good catch. Because it isn't removed here it ends up as `cpu.hasProcId`, which isn't ideal. It doesn't get automatically added, the Wow64 values are set [[ https://searchfox.org/mozilla-central/rev/e08a9aa5c5dfb77e8847ab7af3f753a9c3e551f8/toolkit/components/telemetry/app/TelemetryEnvironment.jsm#1050 | down here]]. (It might have come in during the initial setup [[ https://searchfox.org/mozilla-central/rev/e08a9aa5c5dfb77e8847ab7af3f753a9c3e551f8/toolkit/components/telemetry/app/TelemetryEnvironment.jsm#936 | in EnvironmentCache() ]], but the delayed init wouldn't have happened yet.)

I'll consider adding it to the environment doc, it's something we'd like to have. But it'd be simpler to just remove it before it gets into the environment, or just move all this to sysinfo init."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-hkitahbkppitqpq54yj3,2021-05-06 00:48:46,"I found [[ https://searchfox.org/mozilla-central/rev/e08a9aa5c5dfb77e8847ab7af3f753a9c3e551f8/toolkit/components/telemetry/app/TelemetryEnvironment.jsm#1012-1015 | this bit in telemetry ]] that we should probably also update here, and perhaps add this to the ping environment (or to the docs if the new property would get picked up automatically, which I think it might).

testing-exception-other: We have no way to either generate a package or to run and test a packaged app in automation at the moment."
114427,https://phabricator.services.mozilla.com/D114427,Bug 1709131 - Report whether the current process has a package identity. r?mhowell!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-05-06 00:22:41,"Manually tested (by typing `await Services.sysinfo.processInfo` in Browser Console) on Win 7 RTM, and on Win 10, both from an installed MSIX package and when installed normally."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-09-27 07:06:30,Confirmed there are no conflicts. Landing ...
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-09-01 07:37:33,"LGTM! @delosrogers.

Lets see how TRY looks https://treeherder.mozilla.org/#/jobs?repo=try&revision=8198e176458b050bde88aa95ae2758f246d5e904"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-24 20:02:56,"Ok, I've fixed up the typo and updated the tests.

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-24 19:51:38,"Yes, that's very helpful, I'll write it that way."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-24 19:46:07,"Its fine to test for the whole notification string. You already know the type of error you expect, 
so you can test `Response body is not available to scripts (Reason: CORSMissingAllowOrigin)` for example.

The localization strings do not change much and if a string changes we can update the test.
 Does that help?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-24 18:53:40,"I agree that it would be good to ensure that the correct CORS error is shown, however I'm not sure the best way to test for it. To me it seems like it might not be the best idea to test for the text content of the notification string because any changes to the localization strings would break the test. One idea I had is to use a regular expression to pull out just the CORS error. I was thinking something like `\(Reason:\s([\w\s]+)\)`. The notifications are formatted as `Response body is not available to scripts (Reason: %S)` so this would pull out what is formatted into the `%S` location of the string which comes from a constant in the code. This seems a little less prone to breaking but it also doesn't seem like a great solution. Do you have a better idea on how to test for the CORS error without making to fragile a test or do you think it's OK to just test for the whole notification string?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"{nav,  icon=pencil, name=suggestion:} it would be nice to also assert that we are showing the expected CORS error. It will make sure we do not show the wrong error."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"{nav,  icon=keyboard-o, name=typo:}"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"Same as {nav,  icon=pencil, name=suggestion:} from line 12"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"Same as {nav,  icon=info-circle, name=nitpick:} on line 11"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"{nav,  icon=info-circle, name=nitpick:} not a big deal, but it'd be great to name this function for clarity, as we have multiple task in this file.
e.g `add_task(async function testCORSNotificationVisible() {`"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"{nav,  icon=pencil, name=suggestion:} Lets add an info before this line which clearly specifies what the test is doing. its helpful when debugging test failures.
e.g `info(""Test to make sure the CORS Notification is visible"")`."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-08-23 09:41:07,"Hey @delosrogers 
Thanks for getting back to this. It all looks good.
I just have a few tiny issues"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-20 21:56:07,"@bomsy this patch is ready for review, I think it's pretty much done

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-14 23:33:52,"@Honza Thanks for the clarification about the CORS errors and what documentation they should point to.

I updated the URL map and fixed the tooltip localization string as recommended.

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-08-14 06:36:57,"Good point. 

I think it should be ""Learn more about this CORS error"""
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-08-14 06:36:57,"Thank for getting back to this, it's very close to the completion.

Here is the list of defined CORS error constants for the platform
https://searchfox.org/mozilla-central/rev/95d8478112eecdd0ee249a941788e03f47df240b/netwerk/base/nsILoadInfo.idl#1270-1312


>>! In D114377#3979298, @delosrogers wrote:
>   - ""CORS Multiple Origin Not Allowed"" I'm not sure if this should point to ""Multiple CORS header 'Access-Control-Allow-Origin' not allowed""

I think it's correct

>   - ""CORS No Allow Credentials"" I don't know where this should point. I would think it might go to ""expected ‘true’ in CORS header ‘Access-Control-Allow-Credentials'"" but there is another `constants.js` blocked reason ""CORS Missing Allow Credentials"" which seems like a better fit

I believe that it's: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSNotSupportingCredentials 
https://searchfox.org/mozilla-central/rev/95d8478112eecdd0ee249a941788e03f47df240b/netwerk/protocol/http/nsCORSListenerProxy.cpp#565-578


>   - ""CORS Origin Heading Missing"" I'm not sure if this should point to ""CORS header origin cannot be added""

Yes, I think it's correct


Honza"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-52tll3zmlcopd5aoarnv,2021-08-14 04:42:33,"Should this be ""errors"", or ""this CORS error""?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-11 22:02:11,I'll update these and remove the comments once I get feedback on the ones I'm unsure about
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-11 19:55:08,"Hi,

I'm working on dynamically appending building the CORS error MDN link and there are a few blocked reasons from `constants.js` that I'm not sure how they match to the CORS error reasons from MDN. They are:


  - ""CORS Multiple Origin Not Allowed"" I'm not sure if this should point to ""Multiple CORS header 'Access-Control-Allow-Origin' not allowed""
  - ""CORS No Allow Credentials"" I don't know where this should point. I would think it might go to ""expected ‘true’ in CORS header ‘Access-Control-Allow-Credentials'"" but there is another `constants.js` blocked reason ""CORS Missing Allow Credentials"" which seems like a better fit
  - ""CORS Origin Heading Missing"" I'm not sure if this should point to ""CORS header origin cannot be added""

Right now I'm just having them go to the generic CORS error page.

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-08-11 16:52:16,">>! In D114377#3769817, @Honza wrote:
>
> 1) I know the original mockup attached to the bug was showing the Headers panel, but shouldn't we show the info message in the Response panel instead?

I agree that the response panel would be a better place for the message. The only reason that I see for putting it in the headers panel is to make sure that people see the message as soon as they click on the request, but the request list already says that there was a CORS error so I don't think that is important in this situation.

Also, sorry I was away for a while but I'm ready to finish this bug up now.

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-05-31 09:16:16,">>! In D114377#3785320, @delosrogers wrote:
> I was starting to work on dynamically appending the reasons to the MDN URLs. I noticed that you can't just append the blocked reasons to a base MDN URL like is done for HTTP headers. I was going to create a map in the `mdn-utils.js` file from blocked reasons to the corresponding string to append to the base MDN url. This seems like it would work but also seems a little hacky, what do you think?

Why you can't append the reason to the URL? 

Otherwise, yes a map in mdn-utils.js is fine.
You can always fallback to ""https://developer.mozilla.org/docs/Web/HTTP/CORS/Errors/"" in case you don't have more specific info."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-05-30 02:20:07,">>! In D114377#3769817, @Honza wrote:
> Thank you for working on this, it'll be great feature!
> 
> Couple of comments
> 1) I know the original mockup attached to the bug was showing the Headers panel, but shouldn't we show the info message in the Response panel instead?
> 2) The ""Learn more"" link should use an icon (the same as we use for HTTP headers) and it should point to MDN
> 
> Here is the base URL:
> ""https://developer.mozilla.org/docs/Web/HTTP/CORS/Errors/""
> 
> And we can dynamically append the reason, to point to related page:
> https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin
> 
> 3) top/bottom paddings should be fixed (as @bomsy mentioned)
> 
> 4) No close button in the notification box
> 
> 
> 
> 
> 
> 
> Honza

I was starting to work on dynamically appending the reasons to the MDN URLs. I noticed that you can't just append the blocked reasons to a base MDN URL like is done for HTTP headers. I was going to create a map in the `mdn-utils.js` file from blocked reasons to the corresponding string to append to the base MDN url. This seems like it would work but also seems a little hacky, what do you think?

Also, I agree that the response panel seems lika a better place for the message.

Mattias"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-05-25 10:46:16,"Agreed, notification fits better here.

Attaching a screenshot of a notification from the Console panel (we can use the same style)

{F2860077}"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-05-25 10:46:16,"We could enhance a bit:

Response body is not available to scripts (Reason: %S)"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-05-25 10:46:16,"Thank you for working on this, it'll be great feature!

Couple of comments
1) I know the original mockup attached to the bug was showing the Headers panel, but shouldn't we show the info message in the Response panel instead?
2) The ""Learn more"" link should use an icon (the same as we use for HTTP headers) and it should point to MDN

Here is the base URL:
""https://developer.mozilla.org/docs/Web/HTTP/CORS/Errors/""

And we can dynamically append the reason, to point to related page:
https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS/Errors/CORSMissingAllowOrigin

3) top/bottom paddings should be fixed (as @bomsy mentioned)

4) No close button in the notification box






Honza"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-25 10:02:17,">>! In D114377#3760418, @delosrogers wrote:
> @bomsy I think that these two patches are ready for another review. Also, do you think that I could get L1 commit access so that I can test my patches in try.

Sure. You'll need to follow the instructions here and ping me on the bug to vouch for you
https://www.mozilla.org/en-US/about/governance/policies/commit/#procedure"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,This would probably be `info`
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,@Honza  Do you have any inputs or additions to this text?
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,We can make this `PriorityLevels.PRIORITY_INFO_HIGH` instead based on the reasons i gave above in the other comment.
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,"{nav,  icon=info-circle, name=nitpick:} i think this is more useful if it checked first i.e 
`if (typeof blockedReason != ""number"" || blockedReason < 1000 || blockedReason > 1015)`
That way it does not try to check against `1000` if it is not a  number"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,"This probably feels more like a notification than a warning. A warning might be a bit scary. Maybe lets use a blue that matches with what we use in the console `--theme-selection-background-hover`

@Honza What do you think?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-24 17:41:33,"Its looking good! I added some inline comments.

One other CSS issue , when the text wraps we loose the top and bottom padding.
See {F2856751}. I think we can add paddings to `.notificationInner` or something to  fix it."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-05-20 18:06:20,"@bomsy I think that these two patches are ready for another review. Also, do you think that I could get L1 commit access so that I can test my patches in try."
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-15 08:53:45,See changes requested in D114420
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-05-08 22:25:37,changes made in the subsequent revision in the stack
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-08 21:08:01,"{nav,  icon=keyboard-o, name=typo:} This should probably be `eventCallback`, right?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-08 21:08:01,"{nav,  icon=info-circle, name=nitpick:}  Wondering if `if (blockedReason < 1001 || blockedReason > 1015) {` might easier to read?"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-08 21:08:01,i think we can remove this
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-08 21:08:01,"{nav,  icon=info-circle, name=nitpick:} I guess  we can do this here
```lang=js
let { NotificationBox, PriorityLevels } = require(""devtools/client/shared/components/NotificationBox"");
NotificationBox = createFactory(NotificationBox);
```"
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-ci5kitnqqnu6cv55ght7,2021-05-08 21:08:01,Thanks for working on it. This is looking good. i have a few comments ..
114377,https://phabricator.services.mozilla.com/D114377,Bug 1671147 - Show when responses have been blocked by CORS. r=bomsy,PHID-USER-pnvuh2fbt3wvj52xrj5k,2021-05-05 17:08:33,"In progress patch, I still need to add styling for the notification box and add a test."
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-o6p7bq6gdylqvs4dsthv,2021-05-06 12:48:16,In local testing I get I get about 40 notification. Let's see.
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-05-06 12:37:55,If it gets intermittent we could just change it to > 2; but I agree that it's OK for now. 🤷
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-o6p7bq6gdylqvs4dsthv,2021-05-06 12:27:46,Address comments
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-05-05 08:25:38,
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-05-05 08:25:38,nit: We could call the variable `onProgressMaxNotificationCount` or something similar.
114326,https://phabricator.services.mozilla.com/D114326,Add test for OnProgress notifications for HTTP/3,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-05-05 08:25:38,Thanks for the test!
114276,https://phabricator.services.mozilla.com/D114276,Bug 1632996: Use security group to authorize email endpoint,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-05-06 14:43:12,Good call 👍
114276,https://phabricator.services.mozilla.com/D114276,Bug 1632996: Use security group to authorize email endpoint,PHID-USER-n77lkspun6bajdj6gwx4,2021-05-05 21:49:43,Would this be the shorter project name instead of the description? Such as mozilla-phabricator-emails which is more consistent to other project/group naming we use.
114226,https://phabricator.services.mozilla.com/D114226,Bug 1708704 - Check for null pointers when using GetWindowContext() r=ckerschb,PHID-APPS-PhabricatorHeraldApplication,2021-05-04 12:28:57,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
114226,https://phabricator.services.mozilla.com/D114226,Bug 1708704 - Check for null pointers when using GetWindowContext() r=ckerschb,PHID-USER-hvjw2anoq2st4rvqlvij,2021-05-04 12:28:57,"thanks, looks ok to me, r=ckerschb!"
114176,https://phabricator.services.mozilla.com/D114176,Bug 1708444 - Don't create compositor surfaces inside blend containers.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-03 22:22:33,"Code analysis found 10 defects in the diff 435041:
 - 10 defects found by clippy (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/435041) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ab2f647992a2a302f106283dcf2271c79de333f7)."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-uuytwybbth3oonyz7fml,2023-09-02 01:08:50,">>! In D114126#6191961, @nbp wrote:
>>>! In D114126#6190456, @owlish wrote:
>> So, to make sure I understand: have you fixed the junit failure?
> 
> No, I did not knew where to start investigating the timeouts.

The patch looks fine to me. The failures need to be resolved - otherwise it will be backed out anyways. Feel free to request review once you're ready. Also, if you have difficulty building, debugging or any other types of questions - feel free to ask in geckoview channel on Matrix."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2023-08-31 13:23:22,">>! In D114126#6190456, @owlish wrote:
> So, to make sure I understand: have you fixed the junit failure?

No, I did not knew where to start investigating the timeouts."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-uuytwybbth3oonyz7fml,2023-08-30 23:19:30,"So, to make sure I understand: have you fixed the junit failure?"
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-uuytwybbth3oonyz7fml,2023-08-28 20:31:13,Adding myself as a reviewer to add this into my queue. I'll take a look in the next couple of days.
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2023-04-03 14:34:58,"Looking at the errors on treherder, I am noticing for the first time the following assertion failure:
  “exceptionHandlerIsSet (Should have been able to set remote exception handler)""

This assertion is raised when failing to interpret the last argument of the command line where the crash reporter argument is expected at a fixed location relative to the end."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2023-04-03 14:34:58,"I am no expert in IPC /Java code, but this looks good to me (despite failing on Treeherder)."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-6rdibiwcq3nuj7op2com,2021-05-14 17:23:03,">>! In D114126#3739435, @nbp wrote:
>>>! In D114126#3714673, @aklotz wrote:
>> Seems okay, but we obviously need to fix that JUnit failure first...
> 
> Is there a bug which is tracking this issue?

Sorry, I used a ""coaxing we"" in my comment, but I actually meant ""you"": I would say that's up to the patch author to debug, just as if this patch had induced a test failure on Windows, Mac, or Desktop Linux."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2021-05-12 17:18:04,">>! In D114126#3714673, @aklotz wrote:
> Seems okay, but we obviously need to fix that JUnit failure first...

Is there a bug which is tracking this issue?"
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2021-05-07 09:39:26,"I doubt this would be the root cause, unless I have bad luck at finding unique names.
The flag is something I came up with to carry metadata about the file descriptor, and we need a way to transmit the mapped content size.

I scheduled a build where I replaced `-jsInit` by `-javascriptInit`:
https://treeherder.mozilla.org/#/jobs?repo=try&revision=47a92c5080fb229fb06e2db260b7a8919a3a3565

The same error appears."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-6rdibiwcq3nuj7op2com,2021-05-05 19:48:21,Could this be cause of your test failure? I don't think you want to be using this flag on Android.
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-6rdibiwcq3nuj7op2com,2021-05-05 19:48:21,"Seems okay, but we obviously need to fix that JUnit failure first..."
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2021-05-04 09:41:49,">>! In D114126#3706830, @agi wrote:
>>>! In D114126#3705555, @nbp wrote:
>> I have a question for gecko-view reviewer, which is that test-runs are preventing this patch from landing as the following failure happens quite frequently:
>> ```
>> TEST-UNEXPECTED-FAIL | org.mozilla.geckoview.test.crash.ParentCrashTest.crashParent | org.mozilla.geckoview.test.util.UiThreadUtils$TimeoutException: Timed out after 30000m
>> ```
>> 
>> It seems that the test case already take ~29s to run, and I have no idea how this patch causes such issue.
> 
> can you link a try run?

https://treeherder.mozilla.org/jobs?repo=try&collapsedPushes=810961%2C809570%2C808715%2C808674%2C807659%2C807635%2C494637%2C491572%2C490401%2C814298%2C837057%2C837145%2C837040%2C837018%2C836564%2C836545%2C836520%2C836498%2C836418%2C841442%2C837181%2C837161%2C859382%2C859523%2C859437%2C858734%2C858680%2C860923%2C841394%2C894378&selectedTaskRun=COxcG--EQty6eI1nXcAVKQ.0&revision=0a7af5258b066a00a702d702992611bb6536ac31"
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-oszpryzadx4pdqrckjlp,2021-05-03 21:13:36,">>! In D114126#3705555, @nbp wrote:
> I have a question for gecko-view reviewer, which is that test-runs are preventing this patch from landing as the following failure happens quite frequently:
> ```
> TEST-UNEXPECTED-FAIL | org.mozilla.geckoview.test.crash.ParentCrashTest.crashParent | org.mozilla.geckoview.test.util.UiThreadUtils$TimeoutException: Timed out after 30000m
> ```
> 
> It seems that the test case already take ~29s to run, and I have no idea how this patch causes such issue.

can you link a try run?"
114126,https://phabricator.services.mozilla.com/D114126,WIP: Bug 1710884 - Use shared memory for JS initialization on Android.,PHID-USER-feptxo7ei2kymsj45spd,2021-05-03 17:59:49,"I have a question for gecko-view reviewer, which is that test-runs are preventing this patch from landing as the following failure happens quite frequently:
```
TEST-UNEXPECTED-FAIL | org.mozilla.geckoview.test.crash.ParentCrashTest.crashParent | org.mozilla.geckoview.test.util.UiThreadUtils$TimeoutException: Timed out after 30000m
```

It seems that the test case already take ~29s to run, and I have no idea how this patch causes such issue."
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-2gujohlr3u3puvz4jmvz,2021-05-05 08:36:49,"#check-in_needed handled, landing queued."
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-03 18:01:46,Add test for append without file existing
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-geresfpgziqivp6chwbj,2021-05-03 16:18:31,I made a typo while running the command 😅
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-geresfpgziqivp6chwbj,2021-05-03 16:18:31,Can you add a test to test_ioutils_read_write.html ?
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-oz5kq3cuc3sqmhsb7ev7,2021-05-03 16:05:16,"It does, as I found out by trying to use it without a file existing. It will throw a `NotFoundError: Could not open the file at ...`."
114075,https://phabricator.services.mozilla.com/D114075,Bug 1709056 - Fix IOUtils append mode documentation and overwrite error. r=barret,PHID-USER-geresfpgziqivp6chwbj,2021-05-03 16:00:54,This is not correct.  Append does not require the file to exist.
114025,https://phabricator.services.mozilla.com/D114025,Bug 1708783 - Update the tracking protection icons used in about:protections. r?sfoster!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-05-03 15:58:02,UX asked that we not use icons for these larger illustrations.
113975,https://phabricator.services.mozilla.com/D113975,Bug 1707930 - Account for reversed stops in the gradient cache key. r=#gfx-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-05-03 09:26:44,"Code analysis found 10 defects in the diff 434581:
 - 10 defects found by clippy (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/434581) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fbd8fc589f6f249166657992769c4baea58c5963)."
113825,https://phabricator.services.mozilla.com/D113825,Bug 1708501 - Compact the AppMenu FxA menuitem when signed out. r?emalysz!,PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-04-29 17:51:21,No worries at all - thanks for the quick review!
113825,https://phabricator.services.mozilla.com/D113825,Bug 1708501 - Compact the AppMenu FxA menuitem when signed out. r?emalysz!,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-04-29 17:38:54,Thanks for doing this! Sorry for missing it in review
113725,https://phabricator.services.mozilla.com/D113725,"Bug 1704113 - fix fonts subdialog cut-off in the preferences, r?jaws",PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-04-28 23:40:52,The 32px is from https://searchfox.org/mozilla-central/rev/2819d981824ad8a707885346d7ddb3bd3e077c9c/toolkit/themes/shared/in-content/common.inc.css#385
113625,https://phabricator.services.mozilla.com/D113625,Bug 1706772 use size_t for RevebAccumulationBuffer read index r?padenot,PHID-USER-rip425pakj57je44bgzq,2021-04-28 10:13:48,See https://bugzilla.mozilla.org/show_bug.cgi?id=1706772#c4.
113575,https://phabricator.services.mozilla.com/D113575,Bug 1708010 - fix temperature conversion from Celsius to Fahrenheit. r=daisuke,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-04-29 09:42:31,"As D108166 was landed successfully, please land this patch as well.
Thanks!"
113575,https://phabricator.services.mozilla.com/D113575,Bug 1708010 - fix temperature conversion from Celsius to Fahrenheit. r=daisuke,PHID-USER-s6dndcbf3g4mbn73dt5s,2021-04-27 22:39:45,"Thank you very much for fixing this!
Yes, I was wrong. And the patch looks good to me.

However, unfortunately, the patch that introduced the unit converter was backed out now,,
https://bugzilla.mozilla.org/show_bug.cgi?id=1697722

I will give r+ to this patch when I could land the unit converter again.
Thanks!"
113525,https://phabricator.services.mozilla.com/D113525,Bug 1707731 - Wait for checkboxes to update before proceeding with the test.,PHID-USER-mefa72mp4kzwenywt7gj,2021-04-27 18:55:19,"it appears this doesn't solve the problem, I am not sure what will- but you can try a few other things if you have more ideas:
https://treeherder.mozilla.org/jobs?repo=try&revision=39ccc968648d07fddbb4d66bd2764cd317d92320&searchStr=bc7"
113525,https://phabricator.services.mozilla.com/D113525,Bug 1707731 - Wait for checkboxes to update before proceeding with the test.,PHID-USER-mefa72mp4kzwenywt7gj,2021-04-27 17:17:30,I am testing this out on try:  https://treeherder.mozilla.org/#/jobs?repo=try&revision=39ccc968648d07fddbb4d66bd2764cd317d92320
113525,https://phabricator.services.mozilla.com/D113525,Bug 1707731 - Wait for checkboxes to update before proceeding with the test.,PHID-USER-mefa72mp4kzwenywt7gj,2021-04-27 15:34:35,"have you ran this on try server:
`./mach try fuzzy -q 'test-macosx1100 browser-chrome'`

I would also remove the skip-if from the browser.ini file- if this was not removed we would see the TEST-UNEXPECTED-PASS in the failure job: https://treeherder.mozilla.org/jobs?repo=mozilla-central&tier=1%2C2%2C3&searchStr=silicon%2Casbc (which can also run on try server)"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-12 18:28:36,"yeah, and it doesn't make sense to keep it, because if we are shutting down and don't have the observer service to remove our observers,  it's probably fine and there is no need for a warning."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-12 01:42:44,Log spam?
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-07 20:33:07,"Right, but the name of the method might suggest that it's getting called for pagehide events for all types of browsers, even though we only call it for non-remote browsers?"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-07 20:26:29,"It does need to be here, otherwise the browser is never in the crashed set when we DO expect it to be there."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,"This should now be

```
LazyModules.SessionStore?.onBrowserPageHide(this);
```"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,I think I prefer onBrowserPageHide here. It shouldn't matter to SessionStore if it's a remote or non-remote browser.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,This comment doesn't apply. I think we can just remove the element from the set unconditionally.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,Do we ever fallback on the WGP's URI here?
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,Commented out code.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,I don't think we need a helper for this. Let's just duplicate the ProcessHangMonitor code? We should add a helper to XPCOMUtils if this ends up being a pattern that we need again and again.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-07 20:21:42,Should be removed now.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-06 14:45:44,"After thinking about this a little more, I think it'd make most sense if this just called a `SessionStore.onBrowserPageHide()`, which handled all the internal SessionStore bits (and included all the relevant explanations). Will allow us to keep SessionStore a little more self-contained."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 21:05:01,I think it'd be good if we could pinpoint it to something. It seems bad that an about:tabcrashed document would have an about:blank URI when being navigated away.
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-05 20:52:14,"I haven't discovered a pattern for when a document would have an about:blank URI, is this something I should spend time to investigate?"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-05 20:51:01,"`...` meant to indicate that it starts with about:tabcrashed and it's irrelevant what the rest of the uri is, but i'll just change the sentence to say so"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 20:46:42,Is it possible to specify when an about:tabcrashed document would have an about:blank URI?
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 20:46:42,nit: `...`
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 20:46:42,Can we include a comment about why we're doing this on pagehide? The ContentSessionStore code has a fair bit of context which we'll be losing
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 20:46:42,nit
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-05 20:46:42,"I think we avoid loading modules into `this` here. We'll probably want to do something similar to how ""ProcessHangMonitor"" is loaded: https://searchfox.org/mozilla-central/rev/e08a9aa5c5dfb77e8847ab7af3f753a9c3e551f8/toolkit/content/widgets/browser-custom-element.js#52-69"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-cje4weq32o3xyuegalpj,2021-05-05 20:16:17,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=90ad92b7301da9d496a2c7dede4b5b97fbef26f3&selectedTaskRun=aOrYtNqeQGGVpwwOwIsfKQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-cje4weq32o3xyuegalpj,2021-05-05 20:15:20,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=480e05dc7927577ef43b9c419ad1359ef83e4787&selectedTaskRun=IOqz6CBfQzKWMFetP_rsIQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-05 20:01:44,"Going to let @kashav take the review here, thanks! :-)"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:53:43,"(ignore the first comment here, must've forgot to delete)"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,"I think we try to forward these completely to SessionStoreInternal (so that calling this from within SessionStoreInternal is identical to calling it via SessionStore), so we do the check there instead."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,(although if we do the above this check won't be required anymore)
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,"Maybe like this instead?

Although I think it might be a little cleaner if SessionStore did the about:tabcrashed URI checks? So we'd directly pass the browser here."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,Unused
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,"I'm not sure that this check is doing what the comment says. `_sessionInitialized` will necessarily be true by the time we're removing a browser from this set, no? Are we ever calling this before we can initialize SessionStore?"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-05-04 23:50:46,"nit: mochitest ini files support multiline skip-ifs without `||`, which should make it a little clearer which condition each comment is referring to (see for example https://searchfox.org/mozilla-central/rev/2f109387cc6886859d3f985ed9aca352fff653b8/editor/libeditor/tests/mochitest.ini#243-246)

(I've no clue why we'd fail to get `dumpID`)"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-05-04 21:46:56,"The new test I wrote fails without any of my patches with this configuration too, so I'm skipping it here. See https://treeherder.mozilla.org/jobs?repo=try&collapsedPushes=890817%2C890816%2C890812%2C891568&resultStatus=success%2Cpending%2Crunning%2Ctestfailed%2Cbusted%2Cexception%2Cretry%2Crunnable&revision=3c464f7e897731372c2edc1170c606ffbaaf01b5&selectedTaskRun=XuKHSsLDSV2Qm_MifZ3f6w.0"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-04-27 16:09:27,"Mentioned on Matrix: we might be able to just use ""browsing-context-discarded"" for this."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-04-27 16:09:27,"We should be able to do this for SHIP and non-SHIP (and then remove the stuff in ContentSessionStore.jsm completely), so we probably don't have to indent at all"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-04-27 16:09:27,"Left some comments. 

Also https://developer.mozilla.org/en-US/docs/Mozilla/Developer_guide/Coding_Style/Formatting_JS_Code_With_Prettier_and_eslint#commit_hook to get rid of the eslint comments"
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-26 23:22:30,"Code analysis found 11 defects in the diff 431919:
 - 11 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/431919) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=25137120f7dbac9f43f03a3f451a4f2921c41ae1)."
113425,https://phabricator.services.mozilla.com/D113425,"Bug 1703326 - Stop relying on ContentSessionStore for SessionStore:crashedTabRevived, r=kashav!",PHID-USER-uozl45bdkrhn3fi65gdj,2021-04-26 22:54:40,uploading to get some help from @kashav
113371,https://phabricator.services.mozilla.com/D113371,Bug 1707614 - Remove one unused usage of :-moz-devtools-highlighted. r=nchevobbe,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-27 06:50:13,"Thanks Emilio!

{nav,  icon=tags, name=testing-exception-unchanged:} Removing dead code"
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-05-03 19:32:42,"> I still don't understand what .git/.arcconfig comes from, and some stackoverflow comments suggest that maybe it is .git/arc/config? Unclear.

`moz-phab` is based on `arc`, and to maintain compatibility with it, we pull config from the same locations. Since `arc` supports `<topsrcdir>/.<vcs>/.arcconfig`, that twisted our arm.
Most people probably have it at `<topsrcdir>/.arcconfig`, but to maintain compatibility our hands are tied."
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-USER-m7as7lsok35qgsp2cq5b,2021-04-30 19:01:27,"WFM to unbreak bootstrap.

I still don't understand what `.git/.arcconfig` comes from, and some [stackoverflow](https://stackoverflow.com/questions/35743582/phabricator-first-time-arc-land-fails) comments suggest that maybe it is `.git/arc/config`? Unclear."
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-USER-m7as7lsok35qgsp2cq5b,2021-04-26 16:51:05,I will take you up on your offer.
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-USER-4ytd6b7d62yvifo7nfyh,2021-04-26 16:39:09,"Ah, when grafting this logic from `moz-phab`, I missed the [[ https://github.com/mozilla-conduit/review/blob/e927434d576a0b872fdf0cc966b55d5fac4d9f7b/mozphab/git.py#L45-L49 | worktree logic ]].
We should tweak this logic to do something similar, however, that might require adjusting this quite a bit. I'll happily commandeer this patch if you don't want to walk into the weeds too much here.

> This is a spot-fix only. I'm not sure what the usecase of storing .arcconfig in the source-control metadata is

Great question, I'm not sure either. It could be an artifact from `arc`, or there may be a use case that I'm missing. Either way, we should match the behaviour that `moz-phab` uses.

> Also, any tips on how/if to test this?

If you delete your `~/.mozbuild/machrc` (or at least remove the telemetry settings), then the next time you run mach (e.g.: `./mach python -c pass`), it'll execute the logic adjusted in this patch."
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-APPS-PhabricatorHeraldApplication,2021-04-26 13:19:29,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
113320,https://phabricator.services.mozilla.com/D113320,"Bug 1707546: Support git worktrees when finding "".arcconfig""",PHID-USER-m7as7lsok35qgsp2cq5b,2021-04-26 11:50:55,"This is a spot-fix only. I'm not sure what the usecase of storing `.arcconfig` in the source-control metadata is, so I don't know if it is a problem that this wallpapers over git-worktrees. With this patch, it checks the `.arcconfig` in $TOPSRC and I get the expected behaviour.

Also, any tips on how/if to test this?"
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-6gilzlesrxygczj5xep5,2021-05-31 13:11:43,Upcoming rewrite.
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-cje4weq32o3xyuegalpj,2021-05-20 13:37:44,"Code analysis found 94 defects in the diff 440774:
 - 87 build errors and 7 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440774) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0b3c7966bce5ddde55c9cbf90b3a30ecd977e3c7)."
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-6gilzlesrxygczj5xep5,2021-05-20 13:21:23,"@gsvelto: I somewhat cheated by replacing macros with `constexpr` bool&tests, but I think it's much clearer now, so hopefully it's acceptable.
I may still consider using abstract+final classes if&when I implement this on other platforms that would have different needs, but I'd prefer to wait to know exactly what it needed elsewhere, before trying to make this code here too abstract or generic."
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-6gilzlesrxygczj5xep5,2021-05-20 13:18:13,"StackWalkControl now uses a class-static constexpr bool to indicate support, instead of macros. Moved couldResumeAfterSp lambda into separate function."
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-6gilzlesrxygczj5xep5,2021-05-19 11:44:11,"Thanks for this first review, much appreciated. I see your point about too many preprocessor guards making things hard to read, I'll see what I can do..."
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-ebebpbp2fnufsd3f2mah,2021-05-18 08:03:54,Sorry for the delay but I haven't looked at this stuff in ages. I'm OK-ish with the logic even though I share Mike's opinion that deploying frame pointers would be much better. I don't mind going with this approach since this fixes a real issue and provides an immediate benefit to users so that's OK. My biggest gripe is how preprocessor-guard-happy this is. In D113271 there's three levels of nesting in the preprocessor guards and it makes understanding what's going on painfully hard and that's on top of `DoMozStackWalkThread()` being already huge and preprocessor-guard-happy. I'd be much happier if `StackWalkControl` here would be abstract and we'd have platform-specific implementations of it.
113270,https://phabricator.services.mozilla.com/D113270,"Bug 1707489 - Implement StackWalkControl struct on x64-64 - r?glandium!,canaltinova",PHID-USER-6gilzlesrxygczj5xep5,2021-05-10 00:01:14,Rebase. 2nd patch: Increased StackWalkControl::scMaxResumePointCount from 8 to 32 to handle more JIT frames.
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-28 15:04:37,"Code analysis found 1 defect in the diff 432860:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 432860, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/abe35d30-a82f-11eb-a73c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/432860) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=56dcf99a261dfe7c581d4521a2f23c8d11b32635)."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-APPS-PhabricatorHeraldApplication,2021-04-28 14:10:19,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-27 17:13:17,"Code analysis found 1 defect in the diff 432305:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 432305, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a18e0ec8-a778-11eb-8222-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/432305) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ffd1b1742865033c9412e7e90cca7da91cadca15)."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-b567qwxved23xbtlnn6y,2021-04-27 14:54:34,I'm not sure why the reviewbot is giving that error even though everything is working fine and there are actually no errors.
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-fflfehopgwumu7ayu44r,2021-04-27 14:24:54,"Okay, I guess we'll land the patches once we figure out the missing blue frame issue. 

This patch looks good!"
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-27 14:19:19,"Code analysis found 1 defect in the diff 432226:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 432226, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/5c63f4c4-a760-11eb-af14-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/432226) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=096564cff94068010b5ff9e4d369f1fb1bd58659)."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-b567qwxved23xbtlnn6y,2021-04-27 13:38:14,@sefeng so regarding your question about if it's supposed to be blue rather than red. You were right it should be showing blue. I'm seeing some videos (like the one which I showed in perftest) that are missing the blue frame but not many. I'm looking into how to get browsertime to record for 1 second after the page load is completed.
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-b567qwxved23xbtlnn6y,2021-04-26 15:36:37,"Ok, let's leave them both for now and see how it looks overtime (in case they do differ) - one extra metric isn't problematic here.

SpeedIndex will be measured in either case - it's specified in the visual-metrics code."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-fflfehopgwumu7ayu44r,2021-04-26 15:23:58,"I'd write this as 

```
if (urls.length != 2) {
    context.log.error(""Incorrect URLs were given. Giving: %d, expecting %d"", urls.length, 2);
    return false; 
}
```
The current code feels too verbose."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-fflfehopgwumu7ayu44r,2021-04-26 15:23:58,"The non blank paint and first contentful paint should be the same for this test, so we only need one here I think. 

Is speedindex something we could add here? Despite it seems well correlated with load time"
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-23 13:30:19,"Code analysis found 1 defect in the diff 431247:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 431247, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/cb2de6a6-a433-11eb-80ed-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/431247) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=04bbc87c4deb21f54cb250bfbb46b18d5e76f1ec)."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-23 13:25:52,"Code analysis found 1 defect in the diff 431243:
 - 1 defect found by rst (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 431243, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/bcdf7e94-a432-11eb-bfaa-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/431243) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a80fbc1b55929428d6744e7a98f205da7f799101)."
113220,https://phabricator.services.mozilla.com/D113220,"Bug 1704129 - Add a test to measure process switch time. r?#perftest,sefeng!",PHID-USER-b567qwxved23xbtlnn6y,2021-04-23 12:34:44,"Patch works locally, but I need to get the recordings uploaded to tooltool"
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-sqzi3myw3ybsofxmewmp,2021-04-29 19:45:14,"I've tested this with alpenglow, a theme from AMO, HCM (for both Firefox themes), with Classic and Basic Windows' themes and it looks great.
Hopefully I haven't missed anything.

Thanks!"
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-nlulagzxcxzordsbcw42,2021-04-29 15:36:00,"I kept these changes here since this rule will override the one above it, and if a theme does provide a header image then we should also show any additional images if they are present."
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-04-29 07:32:18,"this is intentionally not set for additional_backgrounds. Some adjustments are not relevant for additional_backgrounds, like the text-shadow.


Could you instead add extra background-image/position/repeat rules as necessary on :root:-moz-lwtheme (like it's done on #navigator-toolbox) ?

```
  background-image: var(--lwt-additional-images);
  background-repeat: var(--lwt-background-tiling);
  background-position: var(--lwt-background-alignment);
```"
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-sqzi3myw3ybsofxmewmp,2021-04-27 21:33:14,"Thanks for flagging me!
This fixes the issue for the classic theme, but for basic theme (""Windows 7 Basic"") the issue is still there:
{F2829010}

Requesting changes just to make sure you intended to not fix it here."
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-27 20:49:52,r+ with the caveat that I'm not actually able to test this.
113169,https://phabricator.services.mozilla.com/D113169,Bug 1707076 - Draw the webextension-theme additonal backgrounds on Windows 7 and Windows 8 even if the header image isn't specified.,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-26 21:37:55,"@Itiel Do you happen to have a Windows 7 machine? If not, I can give this r+ without actually being able to test it. We set these values on #navigator-toolbox [here](https://searchfox.org/mozilla-central/source/browser/base/content/browser.css#64-68). We actually have a workaround for Windows 7 just below it, so it seems good to be able to use the standard implementation in some cases on Windows 7."
113114,https://phabricator.services.mozilla.com/D113114,"Bug 1706960 - IsSingleLineFormControl shouldn't return true for datetime-local if it creates a widget. r=edgar,smaug",PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-22 15:14:16,(See above.)
113114,https://phabricator.services.mozilla.com/D113114,"Bug 1706960 - IsSingleLineFormControl shouldn't return true for datetime-local if it creates a widget. r=edgar,smaug",PHID-APPS-PhabricatorHeraldApplication,2021-04-22 13:05:20,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
113114,https://phabricator.services.mozilla.com/D113114,"Bug 1706960 - IsSingleLineFormControl shouldn't return true for datetime-local if it creates a widget. r=edgar,smaug",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-22 13:05:20,Testing will happen as part of datetime local work
113014,https://phabricator.services.mozilla.com/D113014,Bug 1706746 - New user onboarding - Remove urlbar focus by default,PHID-USER-wbnyz3tcqayarugxsdd2,2021-04-26 16:14:22,Thanks
113014,https://phabricator.services.mozilla.com/D113014,Bug 1706746 - New user onboarding - Remove urlbar focus by default,PHID-USER-wbnyz3tcqayarugxsdd2,2021-04-22 08:08:29,I think tests need to be updated.
113014,https://phabricator.services.mozilla.com/D113014,Bug 1706746 - New user onboarding - Remove urlbar focus by default,PHID-USER-3h6otuy64aw665igdl5x,2021-04-21 19:48:45,https://treeherder.mozilla.org/#/jobs?repo=try&revision=d1c245346770b7bd0fdb5e2ef3e5f8bfced194c3
112913,https://phabricator.services.mozilla.com/D112913,"Bug 1706520 [Linux] Add missing WidgetUtilsGtk.h headers to widget/gtk, r?jhorak",PHID-USER-cje4weq32o3xyuegalpj,2021-04-21 12:58:37,"Code analysis found 1 defect in the diff 430202:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/430202) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=df342ba40627e6467be698bc83eb31f566ca1d02)."
112913,https://phabricator.services.mozilla.com/D112913,"Bug 1706520 [Linux] Add missing WidgetUtilsGtk.h headers to widget/gtk, r?jhorak",PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-21 10:07:48,rs+ :)
112863,https://phabricator.services.mozilla.com/D112863,Bug 1654112 - Alias Ssrc types. r?ng!,PHID-USER-5imfqbjzbqyocyfuyykx,2021-08-10 12:56:01,Making a new patch for those suggestions.
112863,https://phabricator.services.mozilla.com/D112863,Bug 1654112 - Alias Ssrc types. r?ng!,PHID-USER-d37r7ftyo2tyk7ulqtne,2021-04-20 23:49:19,optional: `... GetLocalSSRCs() const = 0`?
112863,https://phabricator.services.mozilla.com/D112863,Bug 1654112 - Alias Ssrc types. r?ng!,PHID-USER-d37r7ftyo2tyk7ulqtne,2021-04-20 23:49:19,optional: `virtual Maybe<Ssrc> GetRemoteSsrc() const = 0;`?
112863,https://phabricator.services.mozilla.com/D112863,Bug 1654112 - Alias Ssrc types. r?ng!,PHID-USER-d37r7ftyo2tyk7ulqtne,2021-04-20 23:49:19,r+ with or without changes
112813,https://phabricator.services.mozilla.com/D112813,"Bug 1592920 - Modify test_autofill_from_bfcache.html to work with Fission+bfcache, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-04-21 22:05:35,BroadcastChannels are truly a wonder
112813,https://phabricator.services.mozilla.com/D112813,"Bug 1592920 - Modify test_autofill_from_bfcache.html to work with Fission+bfcache, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-20 19:48:56,https://treeherder.mozilla.org/#/jobs?repo=try&revision=f5d7d6cf696e488d68a7d05edc06a1a959128824
112763,https://phabricator.services.mozilla.com/D112763,"Bug 1706365 - Part 1: Safely invoke destructors and constructors in mozilla::Queue,",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-06 20:00:22,We don't want to use `UniquePtr` as we don't actually want to run destructors for the stuff in the head array (they're uninitialized). You're right that we should be nulling though. Fixed.
112763,https://phabricator.services.mozilla.com/D112763,"Bug 1706365 - Part 1: Safely invoke destructors and constructors in mozilla::Queue,",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-05-06 20:00:22,">>! In D112763#3710993, @kmag wrote:
> I suppose adding unit tests wouldn't be a bad idea, though.

I've added a part 2 which contains unit tests."
112763,https://phabricator.services.mozilla.com/D112763,"Bug 1706365 - Part 1: Safely invoke destructors and constructors in mozilla::Queue,",PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-05-04 20:47:34,"I suppose adding unit tests wouldn't be a bad idea, though."
112763,https://phabricator.services.mozilla.com/D112763,"Bug 1706365 - Part 1: Safely invoke destructors and constructors in mozilla::Queue,",PHID-APPS-PhabricatorHeraldApplication,2021-05-04 20:30:45,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
112763,https://phabricator.services.mozilla.com/D112763,"Bug 1706365 - Part 1: Safely invoke destructors and constructors in mozilla::Queue,",PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-05-04 20:30:45,"Kind of feel like `mHead` should be a `UniquePtr`... but *shrug*

But, anyway, shouldn't this also set it to `nullptr` if it's freeing it?"
112713,https://phabricator.services.mozilla.com/D112713,Bug 1706246 part 8 - Make Shape::attributes private. r?jonco!,PHID-APPS-PhabricatorHeraldApplication,2021-04-20 14:31:09,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
112663,https://phabricator.services.mozilla.com/D112663,Bug 1685484 - Split nsIMsgFolderListener.itemEvent() into separate methods. r?mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-04-20 09:06:29,"Looks good, r=mkmelin"
112563,https://phabricator.services.mozilla.com/D112563,Bug 739096 - Cherry-pick https://gitlab.freedesktop.org/cairo/cairo/-/commit/7ac8220c1fd4afb259e53b7a5cd93a23859bdbda,PHID-USER-cje4weq32o3xyuegalpj,2021-04-19 16:39:47,"Code analysis found 3 defects in the diff 428942:
 - 3 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b5757889040fcddd23fea001208fa12b4e52ad81&selectedTaskRun=Q7rjOh18ThKgnmlI3iN6oQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/428942) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b5757889040fcddd23fea001208fa12b4e52ad81)."
112513,https://phabricator.services.mozilla.com/D112513,Bug 1627175 - part 23: Move `HTMLEditor::IsEmptyNode()` into `HTMLEditUtils` with making it take `EnumSet` instead of `bool` arguments r=m_kato!,PHID-APPS-PhabricatorHeraldApplication,2021-04-20 01:03:14,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
112463,https://phabricator.services.mozilla.com/D112463,Bug 1703272 - Send a mouse exit / mouse enter events around native menu opening and closing. r=#mac-reviewers,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-19 16:53:17,Tests will be added in https://bugzilla.mozilla.org/show_bug.cgi?id=1700727.
112463,https://phabricator.services.mozilla.com/D112463,Bug 1703272 - Send a mouse exit / mouse enter events around native menu opening and closing. r=#mac-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-04-19 16:44:55,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 22:12:58,"Code analysis found 1 defect in the diff 428515:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/428515) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7c3f8a2406f0823dca509b2466dcaf1646aebe08)."
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-16 21:54:48,nits
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-04-16 21:36:07,"FWIW you can skip the `!aSourceBC.IsNull()`, as `MaybeDiscardedBrowsingContext::IsDiscarded()` is always false for null BCs."
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-04-16 21:36:07,nit: random blank line
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-04-16 21:36:07,tests are in a separate part
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 21:10:28,"Code analysis found 1 defect in the diff 428461:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/428461) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=44146749ef2db2c715f90a12e392a539d958c393)."
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-16 20:47:52,"somehow wrong ipdl syntax got into this patch after splitting it, huh"
112413,https://phabricator.services.mozilla.com/D112413,"Bug 1705757 - Make printing a single frame choose the right process for the preview frame. r=nika,jwatt",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 20:37:29,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=162592e8e9dc9c476122385c901e103940836d82&selectedTaskRun=Csf4pmZpQCWEonm8FpQ2zw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=162592e8e9dc9c476122385c901e103940836d82&selectedTaskRun=ZGujPVIhQCOAyos9nXPwVA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=162592e8e9dc9c476122385c901e103940836d82&selectedTaskRun=bGsx9BToSr6-El0NOGBS7w-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-19 05:21:45,rebase and address comments
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-19 05:19:57,good catch :)
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-19 05:19:57,Thanks for the review Julian
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-6oeredp5pcvqrg736rdc,2021-04-16 16:56:31,"{nav,  icon=info-circle, name=nitpick:} missing await"
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-6oeredp5pcvqrg736rdc,2021-04-16 16:56:31,Always interesting to see how some tests can be simplified :)
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-16 16:17:46,">>! In D112362#3651710, @nchevobbe wrote:
> Let's see if TRY is happy https://treeherder.mozilla.org/jobs?repo=try&revision=2f74690769a9f4d8b8079928187a0cf15893efca

It is ✅"
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-16 15:48:32,removed added check for document reload on setting custom ua as it's already done in changeUserAgentInput
112362,https://phabricator.services.mozilla.com/D112362,Bug 1705737 - [devtools] Refactor browser_page_redirection. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-04-16 15:20:28,Let's see if TRY is happy https://treeherder.mozilla.org/jobs?repo=try&revision=2f74690769a9f4d8b8079928187a0cf15893efca
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-cje4weq32o3xyuegalpj,2021-04-21 01:21:33,"Code analysis found 1 defect in the diff 430062:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p gfx/layers/apz/test/gtest/TestOverscroll.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/OWauPHCAS--uRL6aSIIiyA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-32ivca5l7yb4djm4c6n5.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/430062) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6c94418a3ffbb41f6d1259498cbd10b8670b4ea6)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-cje4weq32o3xyuegalpj,2021-04-20 05:13:18,"Code analysis found 1 defect in the diff 429440:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p gfx/layers/apz/test/gtest/TestOverscroll.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/PAL3gHNvQzePnyVrq20qAw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-dylwvyo2xtwdyn4t6joy.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/429440) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5e40ef75fc899551c422ac14425cddb95cbfe14c)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-20 04:45:54,keep ScopedLayerTreeRegistration alive
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-19 21:56:15,"I am concerned cases where we receive a different type of InputBlock once after we enqueued this pan-interrupted and if the InputBlock doesn't scroll at all for some reasons, we end up getting stuck in overscroll state becasue the new InputBlock calls CancelAnimationsForNewBlock (for example, [here](https://searchfox.org/mozilla-central/rev/46a67b8656ac12b5c180e47bc4055f713d73983b/gfx/layers/apz/src/InputQueue.cpp#153) in ReceiveTouchInput), then the enqueued event will be discarded but the overscroll state persists since the CancelAnimationForNewBlock is called [with ExcludeOverscroll flag](https://searchfox.org/mozilla-central/rev/46a67b8656ac12b5c180e47bc4055f713d73983b/gfx/layers/apz/src/InputQueue.cpp#533)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-n65mahsof3iw653q75na,2021-04-19 19:04:13,"I'm not clear on why this is necessary, can you help me understand?"
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-n65mahsof3iw653q75na,2021-04-19 19:04:13,"Now that we are only interacting with the APZC at de-queue time, I don't think it should
 be necessary for the target to be confirmed at enqueue time."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-18 21:10:11,Ah I see. I will revise it. thanks!
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-18 21:10:11,">>! In D112311#3654588, @botond wrote:
> I'm a bit confused about how this works. If the test is running with WebRender, doesn't it mean we get into [this if branch](https://searchfox.org/mozilla-central/rev/6a41d8d7ad42d57cf1adcc7067fd8f1689c42ab3/gfx/layers/apz/src/APZCTreeManager.cpp#2763), which requires the Rust part of WebRender to be running and have a display list?

In this particular test case (a case having only the root scrollable), [we always pick the root one](https://searchfox.org/mozilla-central/rev/6a41d8d7ad42d57cf1adcc7067fd8f1689c42ab3/gfx/layers/apz/src/APZCTreeManager.cpp#2773-2774) and it the right target APZC in this case."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-n65mahsof3iw653q75na,2021-04-17 02:24:31,"It feels like we are ""jumping the (input) queue"" here.

What if the input block is not confirmed yet (for example, because the content process is busy) when the END event arrives? I think the bug could still occur in that case.

--> I think it would be better to enqueue an event into the InputQueue, which the calls CancelAnimation() at de-queue time."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-n65mahsof3iw653q75na,2021-04-17 01:40:26,"I'm a bit confused about how this works. If the test is running with WebRender, doesn't it mean we get into [this if branch](https://searchfox.org/mozilla-central/rev/6a41d8d7ad42d57cf1adcc7067fd8f1689c42ab3/gfx/layers/apz/src/APZCTreeManager.cpp#2763), which requires the Rust part of WebRender to be running and have a display list?"
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 03:41:02,"The analysis task [source-test-mozlint-cpp-virtual-final](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e4bdcba13f6dc492c9c2e32d1b13a3c3b2b34f91&selectedTaskRun=Avv1hDwPTympt3EWvuhN0A-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e4bdcba13f6dc492c9c2e32d1b13a3c3b2b34f91&selectedTaskRun=Qy2x1hK8QxeBGzSkGyzF2g-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-codespell](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e4bdcba13f6dc492c9c2e32d1b13a3c3b2b34f91&selectedTaskRun=c0WonWBTSnmm8UHjCCAwBw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-file-whitespace](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e4bdcba13f6dc492c9c2e32d1b13a3c3b2b34f91&selectedTaskRun=f6RF_nKIS-mr9yzg92lkiQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-16 03:14:44,clang-format
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 03:12:35,"For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/DDoU5GMJRCeF6NgpA6EwAA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-wzey2zjwp7td4kuyuefd.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0b6aa22791160140ab5182ac3141d8978ac421d5&selectedTaskRun=HKBpQ18YRa-MZdl5j4lSIQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-codespell](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0b6aa22791160140ab5182ac3141d8978ac421d5&selectedTaskRun=NTmZle2PQ5-rF5l00SEXyw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-cpp-virtual-final](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0b6aa22791160140ab5182ac3141d8978ac421d5&selectedTaskRun=WVyWVmOSTVOx8ybxErZLYA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-cje4weq32o3xyuegalpj,2021-04-16 03:09:39,"For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/GTXG--PiTbWXLtlIL9kjuw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-irt7twfxoabryig45ytb.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=869ed574d51ba7b936335b180a899a081d9bbbc2&selectedTaskRun=HMECVxPJSLCJezB7MePW7Q-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-file-whitespace](https://treeherder.mozilla.org/#/jobs?repo=try&revision=869ed574d51ba7b936335b180a899a081d9bbbc2&selectedTaskRun=MOeEy6MDTrmEvpZlQ2cNKg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
112311,https://phabricator.services.mozilla.com/D112311,"Bug 1703705 - Add PanInterruped type pan gesture and send it to restore overscrolled state, etc. r?botond",PHID-USER-c6de5rnxld25mqp4pngs,2021-04-16 02:49:26,Renamed the gtest name
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-05-20 14:43:08,"Looks great, thanks for the example!"
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-05-20 14:41:03,"Here is a try: https://treeherder.mozilla.org/jobs?repo=try&revision=b790875db4a7dfd06c2eab33b0cbcc43db4f4b4e

Notice the profiles in the artifacts!
Note I slightly changed this patch to upload files named `profile_*` instead of `profile-*` because with the latter we have the automatic link ""open in profiler""."
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-6vzzkdarjtzknwfo7zp7,2021-05-19 17:35:19,"I stole this from Florian's code in https://hg.mozilla.org/try/rev/8664a277c246edaf73c0cc21e125d2e14b58e368 and https://searchfox.org/mozilla-central/rev/a8b75e4ba3f8ddf0e76b42681d0a7b7e78e67730/browser/base/content/test/performance/browser_startup_mainthreadio.js#879-897

TBH I don't remember if I tested this with treeherder (I tested locally for sure)... I'll do a try build with a failed test to make sure this works as expected."
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-05-17 15:52:40,Interesting. I haven't seen a test in our codebase that writes an artifact to the disc directly. Is this preserved correctly by treeherder? Do you have an example link to a treeherder job with this artifact maybe?
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-05-17 15:52:40,"Good idea for future debugging, just in case!"
112211,https://phabricator.services.mozilla.com/D112211,"Bug 1567222 - [profiler] Change the test utility to find the service worker thread, using a profiler marker r=canaltinova!",PHID-USER-pqk7ecjw7mij3wc2qu7q,2021-05-17 15:52:40,Changes look good to me. Thanks!
112161,https://phabricator.services.mozilla.com/D112161,Bug 1705340: Ensure .onion URLs are handled properly within HTTPS-First Mode,PHID-USER-hvjw2anoq2st4rvqlvij,2021-04-30 08:31:02,Updating D112161: Bug 1705340: Ensure localhost and .onion are handled properly within HTTPS-First Mode
112161,https://phabricator.services.mozilla.com/D112161,Bug 1705340: Ensure .onion URLs are handled properly within HTTPS-First Mode,PHID-USER-asgyxtv3cyxddvwqjw63,2021-04-20 11:36:48,"Okay, local addresses seem more complicated to test for. Maybe we can do that later :)"
112161,https://phabricator.services.mozilla.com/D112161,Bug 1705340: Ensure .onion URLs are handled properly within HTTPS-First Mode,PHID-USER-hvjw2anoq2st4rvqlvij,2021-04-20 09:22:40,">>! In D112161#3659741, @JulianWels wrote:
> I think the hack is totally okay, but I don't understand what's wrong with local addresses? What is different in this test than the one this is based on?

The original test relies on an XHR request (https://searchfox.org/mozilla-central/source/dom/security/test/https-only/browser_upgrade_exceptions.js#72-80) and we don't even observe the actual result. For top-level request we would fail hard hence the workaround."
112161,https://phabricator.services.mozilla.com/D112161,Bug 1705340: Ensure .onion URLs are handled properly within HTTPS-First Mode,PHID-USER-asgyxtv3cyxddvwqjw63,2021-04-19 19:56:09,"I think the hack is totally okay, but I don't understand what's wrong with local addresses? What is different in this test than the one this is based on?"
112161,https://phabricator.services.mozilla.com/D112161,Bug 1705340: Ensure .onion URLs are handled properly within HTTPS-First Mode,PHID-USER-hvjw2anoq2st4rvqlvij,2021-04-15 09:35:50,"Hey Julian, when testing I realized we are not treating `localhost` and `.onion` correctly for https-first. It's a pain to test that for top-level loads. For the `.onion` I came up with a hack, see my comment in the code, but for other local addresses I don't have a solid solution to test. I guess we should land that at least so we have `some` test coverage. At least we have coverage that we consult `OnionException` and `LoopbackOrLocalException` for https-first mode in some form."
112111,https://phabricator.services.mozilla.com/D112111,"Bug 1702997, change filled bookmark star's color to primary button's background color",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-04-16 14:56:02,Sounds good! I'll close this out then @harry
112111,https://phabricator.services.mozilla.com/D112111,"Bug 1702997, change filled bookmark star's color to primary button's background color",PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-16 14:50:39,"No, we shouldn't need it."
112111,https://phabricator.services.mozilla.com/D112111,"Bug 1702997, change filled bookmark star's color to primary button's background color",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-04-15 16:19:07,"Hey @harry, do we still need this now that bug 1704828 is closed out?"
112111,https://phabricator.services.mozilla.com/D112111,"Bug 1702997, change filled bookmark star's color to primary button's background color",PHID-USER-cic5kmkeckeqhd3ekoby,2021-04-14 23:11:33,"I think @harry already did this with https://bugzilla.mozilla.org/show_bug.cgi?id=1704828, not sure this is still needed."
112009,https://phabricator.services.mozilla.com/D112009,Bug 1704963 - fix browser_publicRecipientsWarning.js fails with Proton enabled. r=darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-04-14 09:24:17,"Now it'll fail with Proton disabled. If you're okay with that, r+."
111909,https://phabricator.services.mozilla.com/D111909,Bug 1704888 - Make browser/components/places/tests/browser/browser_addBookmarkForFrame.js work with native context menus r=#mac-reviewers,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-04-13 21:26:44,Heads-up that I'm racing with this patch in https://phabricator.services.mozilla.com/D111846 - there'll probably be conflicts. :-(
111858,https://phabricator.services.mozilla.com/D111858,Bug 1704840 - Remove expired Telementry probe D3D11_SYNC_HANDLE_FAILURE. r=chutten,PHID-USER-jbjyslult4pxam5s4f6h,2021-10-22 03:34:32,This is fine with chutten's comment fixed.
111858,https://phabricator.services.mozilla.com/D111858,Bug 1704840 - Remove expired Telementry probe D3D11_SYNC_HANDLE_FAILURE. r=chutten,PHID-USER-s6r36ube357uq2q3wv4p,2021-04-15 16:14:01,This won't compile. I'm pretty sure you need to delete the whole call to NS_DispatchToMainThread (so the two lines above this one).
111858,https://phabricator.services.mozilla.com/D111858,Bug 1704840 - Remove expired Telementry probe D3D11_SYNC_HANDLE_FAILURE. r=chutten,PHID-USER-s6r36ube357uq2q3wv4p,2021-04-15 16:14:01,The removal of all these empty lines appears unrelated to the change you intended to make. You should put them back for this patch.
111858,https://phabricator.services.mozilla.com/D111858,Bug 1704840 - Remove expired Telementry probe D3D11_SYNC_HANDLE_FAILURE. r=chutten,PHID-USER-s6r36ube357uq2q3wv4p,2021-04-15 16:14:01,"Bas' email's on the list, so I shouldn't be the only reviewer."
111808,https://phabricator.services.mozilla.com/D111808,Bug 1704744 part 8 - Use ShapeProperty more for GetExistingProperty/SetExistingProperty. r?jonco!,PHID-APPS-PhabricatorHeraldApplication,2021-04-14 15:29:56,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
111758,https://phabricator.services.mozilla.com/D111758,Bug 1704587 - Remove expired telemetry probe preferences.read_user_js,PHID-USER-nlulagzxcxzordsbcw42,2022-03-11 18:25:18,"The original change also included ""2) Rename and change the nsIPrefService.readUserPrefs API. The new API reads user prefs from a file but doesn't remember that location or save changed preferences to that location"", which should remain."
111758,https://phabricator.services.mozilla.com/D111758,Bug 1704587 - Remove expired telemetry probe preferences.read_user_js,PHID-USER-s6r36ube357uq2q3wv4p,2022-03-11 18:20:52,"Wow, this file's drifted somewhat since [the original change](https://hg.mozilla.org/mozreview/gecko/rev/3990cc17639d7aaf08b3dcb909a83d49550b7158). There's a lot more in the original change, though, than is being removed here. Is there anything else that should be taken out at the same time?

(( Also, removing instrumentation should be self-serve. A better reviewer might be someone who knows or could benefit from learning more about the code under instrumentation. I'm here anyway, and I'm confident in my r+, so no worries this time. ))"
111758,https://phabricator.services.mozilla.com/D111758,Bug 1704587 - Remove expired telemetry probe preferences.read_user_js,PHID-USER-nlulagzxcxzordsbcw42,2022-03-11 17:51:03,I applied the patch locally to m-c tip and it applies cleanly.
111708,https://phabricator.services.mozilla.com/D111708,Bug 1703126 - Replaced BrowserTestUtils.waitForCondition with TestUtils.waitForCondition in browser_geolocation_indicator.  r=prathiksha,PHID-APPS-PhabricatorHeraldApplication,2021-04-12 19:28:05,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
111708,https://phabricator.services.mozilla.com/D111708,Bug 1703126 - Replaced BrowserTestUtils.waitForCondition with TestUtils.waitForCondition in browser_geolocation_indicator.  r=prathiksha,PHID-USER-cfgbepamagj5j2eq6etb,2021-04-12 19:28:05,Thanks!
111606,https://phabricator.services.mozilla.com/D111606,Bug 1696158 - Move CanSavePresentation to the parent process. Move some code. r?smaug!,PHID-USER-cje4weq32o3xyuegalpj,2021-04-12 13:21:51,"Code analysis found 1 defect in the diff 425507:
 - 1 defect found by Coverity

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Y-4C0mZOSVSJvXoLcP4cqA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-7v6gp4h7idjzml4exzou.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/425507) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7bebdf9cb79ba228ed30a5bf09316841140b23ca)."
111606,https://phabricator.services.mozilla.com/D111606,Bug 1696158 - Move CanSavePresentation to the parent process. Move some code. r?smaug!,PHID-USER-cje4weq32o3xyuegalpj,2021-04-12 11:13:38,"Code analysis found 1 defect in the diff 425447:
 - 1 defect found by Coverity

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/dHqpjZ4HTTaOzhPScx39qg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-v2ra6fo4wfgnlkiwnthh.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/425447) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c7dc287b101677d142f66323247e6caa04c54a16)."
111556,https://phabricator.services.mozilla.com/D111556,WIP: Bug 1464457 Richtext and richtext update_from_upstream scripts were pointing to decommissioned repos. Updated scripts to include appropriate github repos instead.,PHID-USER-dn2p6nmnntc3pcwsvrhy,2021-04-14 01:36:26,ditto
111556,https://phabricator.services.mozilla.com/D111556,WIP: Bug 1464457 Richtext and richtext update_from_upstream scripts were pointing to decommissioned repos. Updated scripts to include appropriate github repos instead.,PHID-USER-dn2p6nmnntc3pcwsvrhy,2021-04-14 01:36:26,"Although I comment previous review, does this script work really?  This change doesn't work.

- Since Github doesn't speak subversion protocol, use git command instead of svn.
- git doesn't support to pull sub directory only. Replace with correct way.
- Last sed command is that it outputs current revision to current_revision. So this doesn't work on git command. So replace with git's way.

So if you change to github URL, please modify this and next line."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-08 00:18:32,"Code analysis found 1 defect in the diff 448216:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/448216) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9c8b343fb82e9a7d179ef6d0fb462a750d718adb)."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-06-07 23:40:56,"This makes more sense. Yes, let's move the handle of box-sizing into this function to avoid the potential incorrect calculation."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-06-07 23:40:28,Addressed comments and rebased.
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-05-07 23:05:59,"`aContainingBlockSize.ISize(aWM)` can be replaced by something like

```
aAvailableISizeOverride ? *aAvailableISizeOverride : aContainingBlockSize.ISize(aWM)
```"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-05-07 23:05:59,"If you agree the box-sizing should be handle in `ComputeISizeValue` in my other inline comment, this can be

```
    Maybe<nscoord> availbleISizeOverride;
    if (aSize.IsFitContentFunction()) {
      availbleISizeOverride.emplace(aSize.AsFitContentFunction().Resolve(
          aContainingBlockSize.ISize(aWM)));
    }
```"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-05-07 23:05:59,"{nav,  icon=pencil, name=suggestion:} I don't feel `aFitContentArg` is a good name because the `<length-percentage>` provided by `fit-content()` function is to override the available size from the containing block, i.e. `aContainingBlockSize.ISize()`. https://drafts.csswg.org/css-sizing-3/#available 

Even so, it's still unclear whether this available size override has already considered box-sizing or not. I'll prefer this doesn't consider `box-sizing` at all because we all do it in this function anyway.

How about we call this `aAvailableISizeOverride`, and add a document like the following ?

```
@param aAvailableISizeOverride If this has a value, it is used as the available inline-size instead of aContainingBlockSize.ISize(aWM) when resolving fit-content.
```

(Please double check if the suggestion wording is correct.)"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-01 00:09:19,"Code analysis found 1 defect in the diff 434418:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/434418) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=316ce63a2e33e7c8c3e67abf41899d2660785416)."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-04-30 23:22:57,"Rename enum arm name, FitContentFunction and address comments"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-30 11:33:31,"```
nscoord arg = aFitContentArg.valueOrFrom([&] {
    return aContainingBlockSize.ISize() - ...;
});
```"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-30 11:33:31,"I'd probably factor this into a separate variable, just for readability:

```
Maybe<nscoord> fitContentArg;
if (aSize.IsFitContentFunc()) {
  fitContentArg.emplace(ComputeISizeValue(aWM, aContainingBlockSize, aContentEdgeToBoxSizing, aSize.AsFitContentFunc());
}
return ComputeISizeValue(...);
```"
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-cje4weq32o3xyuegalpj,2021-04-29 01:30:47,"Code analysis found 1 defect in the diff 433170:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/433170) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6c4de359dd0635a362740a97ca17746ad8c0cb83)."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-04-29 00:51:48,Refine code
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-cje4weq32o3xyuegalpj,2021-04-28 00:00:43,"Code analysis found 1 defect in the diff 432562:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/432562) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e30b6cb4aa3111022e921b47599196e9fc8998a0)."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-04-27 23:24:35,Rebased
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-cje4weq32o3xyuegalpj,2021-04-21 22:42:34,"Code analysis found 1 defect in the diff 430608:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/430608) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ed2e393f93821e76f106b81beb4537d028ea959e)."
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-04-21 22:08:18,Update
111506,https://phabricator.services.mozilla.com/D111506,Bug 1312588 - Part 3: Implement the layout part of fit-content() without the intrinsic contribution.,PHID-USER-laiy2eaopxzo3vm6tath,2021-04-09 22:31:03,wip
111455,https://phabricator.services.mozilla.com/D111455,Bug 1703105 - wasm: Fix cranelift validation for global.set. r?lth,PHID-USER-cje4weq32o3xyuegalpj,2021-04-15 20:54:18,"You have touched the documentation in diff 427733, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a8c65e3a-9e2b-11eb-9590-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
111455,https://phabricator.services.mozilla.com/D111455,Bug 1703105 - wasm: Fix cranelift validation for global.set. r?lth,PHID-USER-cje4weq32o3xyuegalpj,2021-04-14 06:07:49,"You have touched the documentation in diff 426382, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/197262c8-9ce7-11eb-a6df-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-04-13 20:31:25,">>! In D111405#3626713, @nhnt11 wrote:
>>>! In D111405#3626703, @dragana wrote:
>>>>! In D111405#3625112, @nhnt11 wrote:
>>> I wonder if a better approach here is to convert these to use check the response version on nsIHttpChannelInternal. That way we don't have to update these assertions whenever the draft version is bumped up...
>>> 
>> 
>> Both are fine, I exoect in the next Nightly to expose the final version of HTTP3 (the RFC should be published soon.)
> 
> Very good to know!

Considering we don't expect the draft version to bump repeatedly in the future, I'm going to land this as-is."
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-04-12 08:23:39,">>! In D111405#3626703, @dragana wrote:
>>>! In D111405#3625112, @nhnt11 wrote:
>> I wonder if a better approach here is to convert these to use check the response version on nsIHttpChannelInternal. That way we don't have to update these assertions whenever the draft version is bumped up...
>> 
> 
> Both are fine, I exoect in the next Nightly to expose the final version of HTTP3 (the RFC should be published soon.)

Very good to know!

> 
>> edit: though, it looks like it may not always be possible, since we sometimes have only a request and not a channel - I need to investigate
> 
> he request is HttpChannel you should only query the interface, if you choose that path. Both versions are fine.

Nice, I was wondering if that was the case, didn't get a chance to poke around yet. Thanks!"
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-o6p7bq6gdylqvs4dsthv,2021-04-12 08:14:16,">>! In D111405#3625112, @nhnt11 wrote:
> I wonder if a better approach here is to convert these to use check the response version on nsIHttpChannelInternal. That way we don't have to update these assertions whenever the draft version is bumped up...
> 

Both are fine, I exoect in the next Nightly to expose the final version of HTTP3 (the RFC should be published soon.)

> edit: though, it looks like it may not always be possible, since we sometimes have only a request and not a channel - I need to investigate

he request is HttpChannel you should only query the interface, if you choose that path. Both versions are fine."
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-o6p7bq6gdylqvs4dsthv,2021-04-12 08:11:50,">>! In D111405#3625109, @nhnt11 wrote:
> @dragana, these tests were checking explicitly for ""h3"" as the protocol version. Could you confirm that the intention of these was mostly just to check the usage of h3 vs h2, and that expecting the draft version suffix now is correct?

Yes, this only wants to make sure that this is h3 not h2. Also with you patch we have the right version(implementation is [[ https://bugzilla.mozilla.org/enter_bug.cgi?product=Core&component=Networking:%20HTTP | here ]])"
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-04-12 08:03:41,">>! In D111405#3625109, @nhnt11 wrote:
> @dragana, these tests were checking explicitly for ""h3"" as the protocol version. Could you confirm that the intention of these was mostly just to check the usage of h3 vs h2, and that expecting the draft version suffix now is correct?

Ah, I should clarify: I'm thinking, whether we want to make these assertions ""future-proof"" when the draft version changes in the future - with this patch we will have to update all of them."
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-04-10 15:33:24,"I wonder if a better approach here is to convert these to use check the response version on nsIHttpChannelInternal. That way we don't have to update these assertions whenever the draft version is bumped up...

edit: though, it looks like it may not always be possible, since we sometimes have only a request and not a channel - I need to investigate"
111405,https://phabricator.services.mozilla.com/D111405,Bug 1704079 - Set negotiated NPN in Http3Session::SetSecInfo. r=#necko!,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-04-10 15:31:23,"@dragana, these tests were checking explicitly for ""h3"" as the protocol version. Could you confirm that the intention of these was mostly just to check the usage of h3 vs h2, and that expecting the draft version suffix now is correct?"
111355,https://phabricator.services.mozilla.com/D111355,Bug 1694721 - Don't do a debug render if there is no debug overlay. r?gw,PHID-APPS-PhabricatorHeraldApplication,2021-04-09 01:50:36,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
111305,https://phabricator.services.mozilla.com/D111305,Bug 1703105 - wasm: Remove old generated import of SIMD spec tests. r?lth,PHID-USER-jqou3mp2fdzb7uuohm53,2021-04-09 06:36:18,"New tests are being added, these old tests are being removed."
111305,https://phabricator.services.mozilla.com/D111305,Bug 1703105 - wasm: Remove old generated import of SIMD spec tests. r?lth,PHID-USER-cje4weq32o3xyuegalpj,2021-04-08 20:43:49,"You have touched the documentation in diff 424290, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b8118f46-98a8-11eb-a224-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
111255,https://phabricator.services.mozilla.com/D111255,Bug 1702259 - Mismatch for float32 size in ARM64 MacroAssembler in MacroAssembler::storeRegsInMask and FloatRegister::GetPushSizeInBytes.  r=nbp.,PHID-USER-feptxo7ei2kymsj45spd,2021-04-08 13:22:27,"nit: Leave this tiny piece of code to warn the next person:
```
#ifdef ENABLE_WASM_SIMD
    MOZ_RELEASE_ASSERT(reg.isDouble() || reg.isSingle());
#endif
```

and do the same in `PushRegsInMask`."
111255,https://phabricator.services.mozilla.com/D111255,Bug 1702259 - Mismatch for float32 size in ARM64 MacroAssembler in MacroAssembler::storeRegsInMask and FloatRegister::GetPushSizeInBytes.  r=nbp.,PHID-USER-feptxo7ei2kymsj45spd,2021-04-08 13:22:27,Testing exception: This is already part of the test suite but not exercised (see https://bugzilla.mozilla.org/show_bug.cgi?id=1702259#c1 ) We should enable this configuration using `|jit-test|` tag and ensure it fails on android CI before merging this patch.
111205,https://phabricator.services.mozilla.com/D111205,Bug 1703387 - Fix failures in browser/modules/test/browser/browser_PageActions.js with proton urlbar.,PHID-USER-aaptg3a34v3lr4kblwu6,2021-04-08 19:04:58,"I didn't realize that, but yes I renamed it gProtonUrlbar in D111222 after I moved it to head.js since it's set to the urlbar pref and not the main Proton pref. I'll land these two revisions at the same time."
111205,https://phabricator.services.mozilla.com/D111205,Bug 1703387 - Fix failures in browser/modules/test/browser/browser_PageActions.js with proton urlbar.,PHID-USER-erxup3oqd7if4an5l7ut,2021-04-08 12:15:06,"this is confusing because the browser window already has a gProton global pointing to the main pref. But If I understood correctly, you fixed this in D111222."
111155,https://phabricator.services.mozilla.com/D111155,Bug 1703647 - Change tab-to-search results to use a Primary Blue search glass icon instead of an inverted one. r?mak!,PHID-USER-erxup3oqd7if4an5l7ut,2021-04-07 21:49:19,"it's nicer if the icon doesn't change color on selection imo, it was too much distracting before."
111155,https://phabricator.services.mozilla.com/D111155,Bug 1703647 - Change tab-to-search results to use a Primary Blue search glass icon instead of an inverted one. r?mak!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-07 21:18:57,"Don't change the icon color on result selection. Over Slack I told you that there was an issue with the icon changing its shade, but it looks like that was just some quirk of my local build. I can't reproduce that issue."
111155,https://phabricator.services.mozilla.com/D111155,Bug 1703647 - Change tab-to-search results to use a Primary Blue search glass icon instead of an inverted one. r?mak!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-07 19:46:47,Rebased on central (i.e. without Proton enabled by default). New try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=7f294f2294c708ddb7a1d04d0bc00404a9565a0e
111155,https://phabricator.services.mozilla.com/D111155,Bug 1703647 - Change tab-to-search results to use a Primary Blue search glass icon instead of an inverted one. r?mak!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-04-07 19:43:56,https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e216fa47e6d828ff9459d394d426d858e908de5
111055,https://phabricator.services.mozilla.com/D111055,Bug 1702124 - [devtools] Fix the checkbox cut by the image near it issue. r=Honza,PHID-USER-y6c6ox66qfeldz7dxwvq,2021-04-07 10:10:31,"Perfect, works for me, thanks!

Honza"
111005,https://phabricator.services.mozilla.com/D111005,Bug 1698843 - Part 4: Set the default of the private cookieBehavior pref if the regular cookieBehavior is altered by the policy. r?Gijs,PHID-APPS-PhabricatorHeraldApplication,2021-04-07 14:34:59,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
110955,https://phabricator.services.mozilla.com/D110955,Bug 1702986 - Update defaultFavicon icon. r?sfoster!,PHID-USER-pro4mobntabgfr6q6kqu,2021-04-06 19:00:20,Thanks!
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-cje4weq32o3xyuegalpj,2021-07-13 16:24:25,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=caff0a1cd64ee1ea15bd6f546cf2088437b7d29f&selectedTaskRun=KG2uMlUwSNCimcm2CjsV4A-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-cje4weq32o3xyuegalpj,2021-07-13 16:21:17,"Code analysis found 1 defect in the diff 458247:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/wasm/WasmJS.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Uy13p9l0SOyzDH2QZR05cA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-xgof2rap32m4xctax6zq.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0d045ac0774347de21d1d60fa80f473cb7519e4d&selectedTaskRun=c_0vWfkcRDaaBTP8qZJg1g-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/458247) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0d045ac0774347de21d1d60fa80f473cb7519e4d)."
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-xulvsgmphh3daacojaw7,2021-07-13 15:56:30,Will add this to the bug-to-be-filed (mentioned in last patch)
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,nit: rename this to `result` or `value`. We typically use `val` to refer to wasm values e.g. (wasm::Val).
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,"These loops are a bit unfortunate, they turn a O(1) into a O(n) operation. As part of fixing misaligned tag fields, we should fix this as well."
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,nit: drop this whitespace line
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,"ditto:
```
if (!args[0].isObject() || !IsTagObject(&args[0].toObject())) {
```"
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,"For consistency with D110851, this should be:
```
if (!args[0].isObject() || !IsTagObject(&args[0].toObject())) {
```"
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,I believe this can just be `exn` or `exnObj` now.
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-gtnus4xqfx7yww7kwaj7,2021-07-07 21:14:11,"From my reading of the current explainer, `type` isn't the right word here.
```
exception's tag did not match the provided exception tag
```
Please correct me, if I'm wrong."
110852,https://phabricator.services.mozilla.com/D110852,Bug 1703089 - Add WebAssembly.Exception methods,PHID-USER-cje4weq32o3xyuegalpj,2021-06-03 00:57:50,"Code analysis found 1 defect in the diff 446649:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -p js/src/wasm/WasmJS.cpp`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/b2nKpz5JR36K0QJlKGNn6Q/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-y2caolnimyw5pkgjyknw.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/446649) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0e75a8cabeb869ae497fe8899c8a3303833937b0)."
110802,https://phabricator.services.mozilla.com/D110802,"Bug 1702980 - Fix ""Search [defaultSearchEngine] for"" contextmenu option not having its separator r?emalysz",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-04-05 16:41:06,"Makes sense to me, thanks!"
110802,https://phabricator.services.mozilla.com/D110802,"Bug 1702980 - Fix ""Search [defaultSearchEngine] for"" contextmenu option not having its separator r?emalysz",PHID-USER-pffl6tdsfwurm6tc65ge,2021-04-05 13:52:16,Try push: https://treeherder.mozilla.org/jobs?repo=try&revision=af95bcc49c49c3bd301c251150d0ad2f3b3b56ce
110752,https://phabricator.services.mozilla.com/D110752,Bug 1702559 - Fixes eslint errors in browser/extensions/screenshots/catcher.js. r?emalysz,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-04-05 16:10:18,\o/
110702,https://phabricator.services.mozilla.com/D110702,Bug 1654112 - add script to remove dev-machine specific info from generated json gn files. r?ng!,PHID-USER-d37r7ftyo2tyk7ulqtne,2021-04-02 20:16:15,Very nice!
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-04-02 01:29:21,"Code analysis found 9 defects in the diff 421718:
 - 1 defect found by clang-format
 - 8 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach clang-format -s -p layout/style/PreferenceSheet.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/fhBPVzA1TLO1Ioy9yRakEA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-2hhgrknrexipnisioiap.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/421718) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e8d602e054800949174d90ace1c9c64c4533d8e4)."
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-04-02 00:25:04,"Code analysis found 10 defects in the diff 421709:
 - 2 defects found by clang-format
 - 8 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach clang-format -s -p layout/style/PreferenceSheet.cpp widget/cocoa/nsLookAndFeel.mm` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/TAmmxLOQQYawFUA4t7ECmA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-ye6k6zwflmwdsrxfyizl.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/421709) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=418379452fa1b631ee9a71ce2b0ff1b3e428af49)."
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-04-02 00:22:08,"Code analysis found 10 defects in the diff 421708:
 - 2 defects found by clang-format
 - 8 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach clang-format -s -p widget/cocoa/nsLookAndFeel.mm layout/style/PreferenceSheet.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/c3dUPDvGRtCXGNCKiXI_fw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-h2y72eia2nznqglfo3sq.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/421708) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=35e3ecc3c24626d95534c54d54af11d63fea3fb3)."
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-02 00:21:22,rebase
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-04-02 00:03:10,Makes sense!
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-zp4gy3jjzfehipsktf6x,2021-04-02 00:01:43,"The idea is to resolve the to either `Light` or `Dark` using the document. If callers want system appearance we could trivially add something like:

```
static ColorScheme SystemColorScheme() {
  return GetInt(IntID::SystemUsesDarkTheme) ? ColorScheme::Dark : ColorScheme::Light;
}
```

And adjust callers that right now hard-code `Light` to pass `LookAndFeel::SystemColorScheme()` as needed. That avoids having to deal with the `System` value in `nsLookAndFeel` implementations."
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-04-01 23:55:32,"I would have expected a third value ""System"" here, but I'm curious to see where you're going with it."
110651,https://phabricator.services.mozilla.com/D110651,Bug 1702676 - Change public LookAndFeel API to accept a color scheme. r=mstange,PHID-USER-sasiqhjk3rmprfyixaj6,2021-04-01 23:55:32,Nice!!
110549,https://phabricator.services.mozilla.com/D110549,"Bug 1697521 - In MediaRecorder check for multiple tracks synchronously, per spec. r?padenot",PHID-USER-rip425pakj57je44bgzq,2021-04-02 11:41:32,A crashtest in the other patch also.
110499,https://phabricator.services.mozilla.com/D110499,Bug 1593390 - Use NSApp.effectiveAppearance to detect system dark mode. r=#mac-reviewers,PHID-USER-sasiqhjk3rmprfyixaj6,2021-04-01 16:40:16,"We can use the constant if we define it for older SDKs. Actually, let me write a patch to clean that all up."
110499,https://phabricator.services.mozilla.com/D110499,Bug 1593390 - Use NSApp.effectiveAppearance to detect system dark mode. r=#mac-reviewers,PHID-USER-wgwiclrzncjlwloxt6mj,2021-04-01 16:16:25,"Why can't we use the system constant NSAppearanceDarkAqua here? Is it because we might be linked against an older SDK that doesn't define it? If that's the case, what is the @available declaration doing for us?"
110397,https://phabricator.services.mozilla.com/D110397,Bug 1700206 - Support tile repeat limits in SWGL. r?jrmuizel,PHID-USER-cje4weq32o3xyuegalpj,2021-03-31 20:29:58,"You have touched the documentation in diff 421095, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/555a3f9c-925e-11eb-9676-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
110397,https://phabricator.services.mozilla.com/D110397,Bug 1700206 - Support tile repeat limits in SWGL. r?jrmuizel,PHID-USER-vwnvk5tdutz5b677cmbw,2021-03-31 20:09:45,"Not quite sure how to make a reliably reproducible testcase for this one. However, I'm at least sure this is the correct fix."
110397,https://phabricator.services.mozilla.com/D110397,Bug 1700206 - Support tile repeat limits in SWGL. r?jrmuizel,PHID-APPS-PhabricatorHeraldApplication,2021-03-31 19:40:38,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
110397,https://phabricator.services.mozilla.com/D110397,Bug 1700206 - Support tile repeat limits in SWGL. r?jrmuizel,PHID-USER-cje4weq32o3xyuegalpj,2021-03-31 13:01:45,"For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/FHQ3vyFTROKY-tDU4ngwmw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-2qdrncashfqnn6ncxgw4.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

You have touched the documentation in diff 420880, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/94e932e2-921f-11eb-ac6b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
110346,https://phabricator.services.mozilla.com/D110346,"Bug 1680751 - Change KeyPathType to an enum class. r=#dom-workers-and-storage-reviewers,ttung",PHID-USER-bm5adgmlmltkqkya62e7,2021-03-31 18:28:19,"Thanks very much for the patch!  And thank you Tom for the initial review pass!  Searchfox seems to agree that these changes are fully exhaustive, as desired.  (However Searchfox didn't see the uses in ParamTraits which unfortunately is expected.)  I'll hit the landing button momentarily.

Testing: This is a refactor."
110346,https://phabricator.services.mozilla.com/D110346,"Bug 1680751 - Change KeyPathType to an enum class. r=#dom-workers-and-storage-reviewers,ttung",PHID-USER-5gvgi57xqgm7odgbczmk,2021-03-31 05:48:02,"LGTM and thanks for the patch, but I think someone in the dom-storage-reviewers should take a final look before landing this patch."
110291,https://phabricator.services.mozilla.com/D110291,Bug 1667887 - Remove dead code in highContrastCheck in the screenshots UI.,PHID-USER-afwkybkpczqmzp2rl7oh,2021-03-31 16:57:01,I had abandon this revision
110291,https://phabricator.services.mozilla.com/D110291,Bug 1667887 - Remove dead code in highContrastCheck in the screenshots UI.,PHID-USER-afwkybkpczqmzp2rl7oh,2021-03-31 15:53:15,">>! In D110291#3589955, @emalysz wrote:
> @falguniislam12 Do you mind abandoning this revision since the work has moved to D110374?
> 
> Under ""Add action..."" there should be an option

Ok no problem"
110291,https://phabricator.services.mozilla.com/D110291,Bug 1667887 - Remove dead code in highContrastCheck in the screenshots UI.,PHID-USER-2xjk3lke7w5hc4c42bnx,2021-03-31 15:50:14,"@falguniislam12 Do you mind abandoning this revision since the work has moved to D110374?

Under ""Add action..."" there should be an option"
110241,https://phabricator.services.mozilla.com/D110241,Bug 1700051: part 25) Change `mozInlineSpellWordUtil::BuildRealWords` to return the built words. r=smaug,PHID-USER-eltrc7x5oplwzfguutrb,2021-03-31 08:32:36,"@smaug: `realWords.unwrap()` is already an rvalue reference, because it's a unnamed temporary. Therefore calling `std::move` on it wouldn't change anything.

Depending on which `Result` instance is used, internally `unwrap()` already moves. See https://searchfox.org/mozilla-central/rev/9043e515e9608cc55b252a40cb2dfb6f767bcffd/mfbt/Result.h#131,294,514,516.

For some instance of `Result`, `unwrap()` `std::memcpy`'s: https://searchfox.org/mozilla-central/rev/9043e515e9608cc55b252a40cb2dfb6f767bcffd/mfbt/Result.h#236,238,241. However, that one isn't used here, because the error type, `nsresult`,  doesn't have a free LSB (see https://searchfox.org/mozilla-central/rev/9043e515e9608cc55b252a40cb2dfb6f767bcffd/mfbt/Result.h#342-343,348,356,365).

Thanks for raising this question though."
110241,https://phabricator.services.mozilla.com/D110241,Bug 1700051: part 25) Change `mozInlineSpellWordUtil::BuildRealWords` to return the built words. r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-03-30 16:00:03,Shouldn't this use std::move?
110191,https://phabricator.services.mozilla.com/D110191,Bug 1516423 - Have WinUnreadBadge own TaskbarWindowPreview.  r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-03-30 10:17:37,"Thanks! r=mkmelin
I'll land this for the nightly build"
110141,https://phabricator.services.mozilla.com/D110141,Bug 1700715 - Make document.popupNode work during the popupshowing event for native menus. r=tnikkel,PHID-USER-sasiqhjk3rmprfyixaj6,2021-03-30 16:30:13,I will add a test for this in https://bugzilla.mozilla.org/show_bug.cgi?id=1700727 .
110141,https://phabricator.services.mozilla.com/D110141,Bug 1700715 - Make document.popupNode work during the popupshowing event for native menus. r=tnikkel,PHID-APPS-PhabricatorHeraldApplication,2021-03-29 21:20:28,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
110141,https://phabricator.services.mozilla.com/D110141,Bug 1700715 - Make document.popupNode work during the popupshowing event for native menus. r=tnikkel,PHID-USER-cje4weq32o3xyuegalpj,2021-03-29 19:42:24,"Code analysis found 2 defects in the diff 419928:
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/419928) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6e1bedbb51316b387eb1f4354c429c2b7cb2707d)."
110091,https://phabricator.services.mozilla.com/D110091,Bug 1697555 - Remove Telemetry portions of Accounts Ecosystem Telemetry r?dexter!,PHID-USER-s6r36ube357uq2q3wv4p,2021-03-29 20:03:13,Testing note: This is code+test removal. No new tests added.
110091,https://phabricator.services.mozilla.com/D110091,Bug 1697555 - Remove Telemetry portions of Accounts Ecosystem Telemetry r?dexter!,PHID-APPS-PhabricatorHeraldApplication,2021-03-29 17:35:17,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109991,https://phabricator.services.mozilla.com/D109991,"Bug 1701346 - IDB: Revert QM_OR_ELSE_WARN to ordinary orElse in QuotaClient::GetUsageForOriginInternal; r=asuth,#dom-storage",PHID-APPS-PhabricatorHeraldApplication,2021-03-26 22:52:47,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109991,https://phabricator.services.mozilla.com/D109991,"Bug 1701346 - IDB: Revert QM_OR_ELSE_WARN to ordinary orElse in QuotaClient::GetUsageForOriginInternal; r=asuth,#dom-storage",PHID-USER-cluzkujx45iif5fejoai,2021-03-26 22:52:47,Thanks!
109941,https://phabricator.services.mozilla.com/D109941,Bug 1701292: Remove deleted subdirectory from layout/reftests/backgrounds/reftest.list. r?mattwoodrow,PHID-APPS-PhabricatorHeraldApplication,2021-03-28 19:57:18,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109891,https://phabricator.services.mozilla.com/D109891,Enable HTTP/3 on Android,PHID-USER-o6p7bq6gdylqvs4dsthv,2021-03-26 20:40:34,Fix experimental features defaults
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-03-26 20:02:51,update comment
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-03-26 19:58:07,"This script diffs the files that are present in both `unit_base_updater` and `unit_service_updater`, which generally have some small behavior change depending on `gServiceTest`. The idea was to run the script to make sure any changes were applied in both suites. It isn't run as part of any automated lint, and I see one file drifted with [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1682810 | bug 1682810 ]]. It may not be of much value, but as I was adding the duplicate test file for this patch it irritated me and I remembered this list, so I figured I might as well include it."
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-03-26 19:58:07,Thanks very much for the quick review! I'll address the nit.
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-APPS-PhabricatorHeraldApplication,2021-03-26 18:20:04,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-woweonpcq5pacokkml6j,2021-03-26 18:20:04,I'm not familiar with this file. What's going on here?
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-woweonpcq5pacokkml6j,2021-03-26 18:20:04,"nit: As long as you are touching this line, could you update `nsUpdateService.js` to `UpdateService.jsm`?"
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-cje4weq32o3xyuegalpj,2021-03-26 03:14:04,"Code analysis found 2 defects in the diff 418798:
 - 2 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/418798) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6f53ca8c5dc151763a10b4058ac7ec6473f5b1d4)."
109841,https://phabricator.services.mozilla.com/D109841,Bug 1698169 - Ensure exclusive read access to callback exe in background task. r?#application-update-reviewers!,PHID-USER-ii5fpiib6m5riqhu6clz,2021-03-26 03:01:18,"Looking good [[ https://treeherder.mozilla.org/jobs?repo=try&revision=178c431962a7f3fdc4bbe468d17edbbe0b671c8a | on try ]], I'll do some manual testing tomorrow."
109739,https://phabricator.services.mozilla.com/D109739,Bug 1700938 - Remove unused mitmproxy manifests; r=#perftest,PHID-APPS-PhabricatorHeraldApplication,2021-03-26 08:09:21,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109689,https://phabricator.services.mozilla.com/D109689,"Bug 1700845: Make accessible/tests/mochitest/events/test_focus_listcontrols.xhtml click the menulist at the centre, not the top left.",PHID-USER-or4wqoxtk6qaerrbbjxa,2021-03-25 23:07:59,"The test previously clicked at the top left. I'm not sure about top right.

I'm not sure about other elements except to say that the other tests work, so presumably nothing changed there (or at least didn't change enough to cause a problem here). I went with ""fix the problem as narrowly as possible so as to avoid unwanted fallout"". :)"
109689,https://phabricator.services.mozilla.com/D109689,"Bug 1700845: Make accessible/tests/mochitest/events/test_focus_listcontrols.xhtml click the menulist at the centre, not the top left.",PHID-USER-lmegrwffx67e2xxsnkfv,2021-03-25 20:32:55,"Does clicking at the top right (-1 offset width) not work for xul listboxes specifically, or xul elements more broadly with proton?"
109689,https://phabricator.services.mozilla.com/D109689,"Bug 1700845: Make accessible/tests/mochitest/events/test_focus_listcontrols.xhtml click the menulist at the centre, not the top left.",PHID-USER-cje4weq32o3xyuegalpj,2021-03-25 04:26:13,"You have touched the documentation in diff 418149, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6b759ff8-8d20-11eb-8834-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
109589,https://phabricator.services.mozilla.com/D109589,Bug 1700076 - Add ability to count number of DoH requests that reach the TRRServer r=#necko,PHID-APPS-PhabricatorHeraldApplication,2021-03-26 13:15:58,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
109589,https://phabricator.services.mozilla.com/D109589,Bug 1700076 - Add ability to count number of DoH requests that reach the TRRServer r=#necko,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-03-25 10:20:10,Fix lint
109589,https://phabricator.services.mozilla.com/D109589,Bug 1700076 - Add ability to count number of DoH requests that reach the TRRServer r=#necko,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 16:33:21,"Code analysis found 1 defect in the diff 417746:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417746) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=03204098acb4cba0635ed4b623ed7356192ffa04)."
109589,https://phabricator.services.mozilla.com/D109589,Bug 1700076 - Add ability to count number of DoH requests that reach the TRRServer r=#necko,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 09:48:18,"Code analysis found 1 defect in the diff 417582:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417582) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b74c45cf1d363f173ff1fc4e9f6ef6d0d7121b29)."
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-08 09:54:59,"That isn't quite the same. ""then the current..."" part to be precise. Those previous condition don't lead to the page being non-active."
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-04-07 17:28:59,requesting changes just to get clarification on the comment in `Document::RemoveFromBFCacheSync`
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-04-06 23:32:30,"heh I'm a bit confused with the two `but`s here. 
Maybe we could reword it as following (if I understand this correctly):

With the old bfcache implementation if we are at a point when the new page is loading and before nsIContentViewer.show() gets called AND the previous page doesn't have nsIBFCacheEntry, then the current document isn't considered active."
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-06 16:42:02,(A tiny bit odd English. Smells like using Finnish language constructs in English :) )
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-06 16:42:02,"The relevant change can be seen in this interdiff
https://phabricator.services.mozilla.com/D109539?vs=419402&id=422860#toc"
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-04-06 14:57:11,https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0d7175493dc5cf59339dbf5f9bf44e7d525479
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-29 21:52:57,https://treeherder.mozilla.org/#/jobs?repo=try&revision=586b8ea851b5e1fe135bfd34ff396ea7e68d4cea
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-29 20:21:06,https://treeherder.mozilla.org/#/jobs?repo=try&revision=5228d3530cd0b1553a82286eb8e525725d8fd619
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-29 17:37:51,https://treeherder.mozilla.org/#/jobs?repo=try&revision=23c66e009c4020c3b6e614614ba6dcd72097fbc0
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-29 16:51:38,https://treeherder.mozilla.org/#/jobs?repo=try&revision=43a2dc8c4de2fec7a76348b8d8fab1e6d3c271e3
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-26 23:52:59,yup
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-7hxjutcooeszod3rg3dr,2021-03-26 23:51:33,indeed. Will do.
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-03-26 23:47:21,Should close `bc` here
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-03-26 23:47:21,We should close all broadcast channels here
109539,https://phabricator.services.mozilla.com/D109539,"Bug 1692639 - Change dom/broadcastchannel/tests/test_bfcache.html to use BroadcastChannel, r=annyG",PHID-USER-uozl45bdkrhn3fi65gdj,2021-03-26 23:47:21,r+ with changes addressed
109489,https://phabricator.services.mozilla.com/D109489,Bug 1700240 - Update packaging for correct name of libotr shared library. r=justdave,PHID-USER-eqsknmdcpccpdyevszg3,2021-03-23 19:56:11,"hmm, I don't see a try build for this on Windows... I'll see if I can get one going."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-29 23:00:44,"Code analysis found 1 defect in the diff 420041:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/420041) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7e614b264b823f64908366a379cd73e1efe09e94)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-26 18:40:56,"Code analysis found 1 defect in the diff 419217:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/419217) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=bfc822ed26614bbde36f18c4580b31b1435b9c61)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-26 13:39:34,"Code analysis found 1 defect in the diff 419024:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/419024) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e9d7d5ea1fd60697b3a1c0eaf580cc5f3d396806)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-23 00:33:29,"Code analysis found 1 defect in the diff 416732:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416732) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=701b463336ea5ff6b7418c3be1f990b582c24049)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 23:58:20,"Code analysis found 1 defect in the diff 416725:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416725) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=46e4b1cfa4b20ea4f1084622bc042442c52afd78)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 23:43:50,"Code analysis found 1 defect in the diff 416719:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416719) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=675393b8e3c3afb881c590c3ab438ade500a3c0d)."
109439,https://phabricator.services.mozilla.com/D109439,Bug 1699224 - Part 3. Complete shutdown of SharedSurfacesParent on the main thread.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 23:01:10,"Code analysis found 1 defect in the diff 416679:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416679) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ee18d0f2bff747dc5a03daada8e985061a0f2ec1)."
109289,https://phabricator.services.mozilla.com/D109289,"Bug 1681691 - Add support for metrics overrides to gfxUserFontEntry, dom::FontFace, etc r=#layout-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 14:57:12,"Code analysis found 1 defect in the diff 416296:
 - 1 defect found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416296) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=487144085cd842fd227ad023b3a9afbd82a1e39f)."
109289,https://phabricator.services.mozilla.com/D109289,"Bug 1681691 - Add support for metrics overrides to gfxUserFontEntry, dom::FontFace, etc r=#layout-reviewers",PHID-USER-autti2wxdumepz7idru4,2021-03-22 14:00:30,">>! In D109289#3548420, @emilio wrote:
> That is quite a bit of plumbing... Maybe we could pass a single struct to most of these places? That'd avoid the chances of silly mistakes swapping one float with another or what not. Followup is fine of course, this is not a new problem.

Yeah, I was thinking the same thing - we should have a ""descriptors"" struct that encapsulates a bunch of these, instead of passing lots of individual values. I was thinking of doing that as a followup, as there's another update coming here shortly (to add the new size-adjust or scale-factor or whatever name gets agreed)."
109289,https://phabricator.services.mozilla.com/D109289,"Bug 1681691 - Add support for metrics overrides to gfxUserFontEntry, dom::FontFace, etc r=#layout-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 11:08:43,"Code analysis found 3 defects in the diff 416178:
 - 1 defect found by private static analysis
 - 2 defects found by clang-format

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach clang-format -s -p gfx/thebes/gfxUserFontSet.cpp gfx/thebes/gfxFont.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/E-cdzZqCT62UEZTNMW5Nmw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-xnhxx7gbu532jte7a2rf.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416178) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=93f0ebd1c3480aaa84f6c1859dcaa9dfd4fd1d09)."
109289,https://phabricator.services.mozilla.com/D109289,"Bug 1681691 - Add support for metrics overrides to gfxUserFontEntry, dom::FontFace, etc r=#layout-reviewers",PHID-USER-zp4gy3jjzfehipsktf6x,2021-03-22 10:53:32,"That is quite a bit of plumbing... Maybe we could pass a single struct to most of these places? That'd avoid the chances of silly mistakes swapping one float with another or what not. Followup is fine of course, this is not a new problem.

Tests in following patches."
109239,https://phabricator.services.mozilla.com/D109239,Bug 1684316 - Implement highWaterMark as required by WebIDL. r?arai,PHID-USER-ovlr37yfp3loy53g6wgo,2021-03-22 00:11:57,"Can you point WebIDL spec step for this?

https://heycam.github.io/webidl/#es-dictionary
```
3.2.17. Dictionary types

4. For each dictionary dictionary in dictionaries, in order:
  1. For each dictionary member member declared on dictionary, in lexicographical order:
     5. Otherwise, if esMemberValue is undefined and member is required, then throw a TypeError.
```

It's not easy to discover the step only from Streams spec's section number."
109189,https://phabricator.services.mozilla.com/D109189,Bug 1686146 - Do not dispatch events over the overscroll gutter to Gecko. r=tnikkel,PHID-USER-n65mahsof3iw653q75na,2021-03-25 03:43:19,I'll add a patch to [bug 1699880](https://bugzilla.mozilla.org/show_bug.cgi?id=1699880) to optimize this.
109189,https://phabricator.services.mozilla.com/D109189,Bug 1686146 - Do not dispatch events over the overscroll gutter to Gecko. r=tnikkel,PHID-USER-n65mahsof3iw653q75na,2021-03-23 02:36:34,"Hmm, as it happens, we're //adding// a test-specific pref that would be suitable in D109435. Perhaps we should use that?"
109189,https://phabricator.services.mozilla.com/D109189,Bug 1686146 - Do not dispatch events over the overscroll gutter to Gecko. r=tnikkel,PHID-USER-n65mahsof3iw653q75na,2021-03-20 01:56:25,"This one is not ready for review yet. The propagation of `mHitOverscrollGutter` to the `APZEventResult` needs to happen for all event types, and I'd like to clean up how that works a bit."
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-uuytwybbth3oonyz7fml,2021-06-09 19:38:33,I created a static prop with the capacity for now
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-uuytwybbth3oonyz7fml,2021-06-05 00:08:09,"another option would be to have a list of keys, and use its length for the capacity? So that we don't even hard-code it"
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-6rdibiwcq3nuj7op2com,2021-04-26 20:31:11,Perhaps we should have a debug-only assertion that `bundle.size` matches the reserved capacity?
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-6rdibiwcq3nuj7op2com,2021-04-26 20:31:11,s/13/14
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-6rdibiwcq3nuj7op2com,2021-04-26 20:31:11,s/13/14
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-6rdibiwcq3nuj7op2com,2021-04-26 20:31:11,I found a minor thing where the `GeckoBundle`'s capacity does not match the size of a fully-populated `Address` bundle.
109139,https://phabricator.services.mozilla.com/D109139,Bug 1699794 - [1.0] Extend GV Autocomplete API with address support,PHID-USER-oszpryzadx4pdqrckjlp,2021-03-19 21:34:13,Beautiful
109089,https://phabricator.services.mozilla.com/D109089,Bug 1699729 - [devtools] Do not clear devtools.testing from browser_telemetry_button_responsive.js,PHID-USER-6oeredp5pcvqrg736rdc,2021-03-22 09:46:41,">>! In D109089#3548072, @ochameau wrote:
> I imagine that's also related to using `setBoolPref` instead of `pushPref`?
> pushPref would have reverted back to the original value, right?
> If that's the case, I imagine we might have similar issues for all usages of set***Pref in test?

Good point, `pushPref` is correctly using set*Pref or clearUserPref depending on the situation, so it would not have triggered the issue.
Might be worth a cleanup bug."
109089,https://phabricator.services.mozilla.com/D109089,Bug 1699729 - [devtools] Do not clear devtools.testing from browser_telemetry_button_responsive.js,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-22 09:11:20,"I imagine that's also related to using `setBoolPref` instead of `pushPref`?
pushPref would have reverted back to the original value, right?
If that's the case, I imagine we might have similar issues for all usages of set***Pref in test?"
109039,https://phabricator.services.mozilla.com/D109039,Bug 1698212 - [devtools] Assert new target via outerWindowID rather than url.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-22 09:17:23,re-enable and rebase
109039,https://phabricator.services.mozilla.com/D109039,Bug 1698212 - [devtools] Assert new target via outerWindowID rather than url.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-22 09:16:35,"New try with the re-enable:
https://treeherder.mozilla.org/#/jobs?repo=try&revision=0ca5235c629bd914547fddbf22897f1729d32475"
109039,https://phabricator.services.mozilla.com/D109039,Bug 1698212 - [devtools] Assert new target via outerWindowID rather than url.,PHID-USER-6oeredp5pcvqrg736rdc,2021-03-19 22:17:35,"Thanks, I think that's the right decision at this point. We initially had this permafailing on windows+fission, but if it's still frequent enough on other platforms updating the test sounds good.

{nav,  icon=pencil, name=suggestion:} Can you also remove the skip-if that was added for windows+fission at https://searchfox.org/mozilla-central/rev/fd8b90d571797a1601b95fa58c08621baa071fe0/devtools/shared/commands/target/tests/browser.ini#18 ? 
It was for the exact same failure and I'm sure your change will also address the initial perma."
109039,https://phabricator.services.mozilla.com/D109039,Bug 1698212 - [devtools] Assert new target via outerWindowID rather than url.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-19 10:07:45,"Try run, with many retries:
https://treeherder.mozilla.org/jobs?repo=try&selectedTaskRun=WMdLBtsXTySbYyE6tCuuGg.0&revision=902ac288385e9489eacea5950d22697c1e04816b&test_paths=devtools%2Fshared%2Fcommands%2Ftarget%2Ftests%2F
(that I requested only just now)"
108989,https://phabricator.services.mozilla.com/D108989,"Bug 1699177 - Add form restore test with lots of nesting, r?farre",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-03-25 16:01:48,This ended up being [bug 1700190](https://bugzilla.mozilla.org/show_bug.cgi?id=1700190).
108989,https://phabricator.services.mozilla.com/D108989,"Bug 1699177 - Add form restore test with lots of nesting, r?farre",PHID-USER-o6ejrh2keak2abjiace7,2021-03-25 15:45:21,Is this true for all types of form elements? Because `HTMLSelectElement` could be special.
108989,https://phabricator.services.mozilla.com/D108989,"Bug 1699177 - Add form restore test with lots of nesting, r?farre",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-03-18 20:41:58,"And for some reason, most cases are failing with fission disabled (with neither of our patches!)"
108989,https://phabricator.services.mozilla.com/D108989,"Bug 1699177 - Add form restore test with lots of nesting, r?farre",PHID-USER-dqffi5qe4k6gf6awk3zf,2021-03-18 20:25:55,This case fails with the existing collection patches. We seem to be skipping collection for children frames if the first child has no data available.
108939,https://phabricator.services.mozilla.com/D108939,"Bug 1698223 - Cleanup --proton-shadow-blur-radius and --proton-tab-radius variables. r=jaws,emalysz",PHID-USER-cic5kmkeckeqhd3ekoby,2021-03-18 15:46:27,"Yep, just keeping both separate."
108939,https://phabricator.services.mozilla.com/D108939,"Bug 1698223 - Cleanup --proton-shadow-blur-radius and --proton-tab-radius variables. r=jaws,emalysz",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-03-18 15:45:01,Why 4px and not --tab-border-radius? Are you just keeping tooltip/tab vars separate?
108939,https://phabricator.services.mozilla.com/D108939,"Bug 1698223 - Cleanup --proton-shadow-blur-radius and --proton-tab-radius variables. r=jaws,emalysz",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-03-18 15:45:01,lgtm!
108889,https://phabricator.services.mozilla.com/D108889,Bug 1699317 Part 2 - Make ConsiderBlockEndEdgeOfChildren() a nsBlockFrame method.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-18 03:28:26,"Code analysis found 2 defects in the diff 414825:
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414825) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=40c31cae20bc28579b346364ffc40beef7f4a9ef)."
108889,https://phabricator.services.mozilla.com/D108889,Bug 1699317 Part 2 - Make ConsiderBlockEndEdgeOfChildren() a nsBlockFrame method.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-18 00:47:40,"Code analysis found 2 defects in the diff 414781:
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414781) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=9e2eb6d695f69fe1ceb25b6e0a9fef269a1a35ad)."
108889,https://phabricator.services.mozilla.com/D108889,Bug 1699317 Part 2 - Make ConsiderBlockEndEdgeOfChildren() a nsBlockFrame method.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-18 00:32:59,"Code analysis found 2 defects in the diff 414774:
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414774) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ed256c58d19597f9783f0b41235d845e7c43e7d4)."
108789,https://phabricator.services.mozilla.com/D108789,Bug 1676137 - Remove intl.uidirection pref; r=zbraniecki!,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-03-29 14:22:35,"Since this only removes a pref, the current tests should hopefully be sufficient for catching regressions."
108789,https://phabricator.services.mozilla.com/D108789,Bug 1676137 - Remove intl.uidirection pref; r=zbraniecki!,PHID-APPS-PhabricatorHeraldApplication,2021-03-17 17:45:50,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
108789,https://phabricator.services.mozilla.com/D108789,Bug 1676137 - Remove intl.uidirection pref; r=zbraniecki!,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-03-17 17:45:50,lgtm!
108739,https://phabricator.services.mozilla.com/D108739,Bug 1699031: Switch to use wrapper-API GetCrossDocParentFrameInProcess() in ImageLoader.cpp. r?tnikkel,PHID-USER-xumvt235xw6lumpq5yog,2021-03-17 16:10:37,">>! In D108739#3531905, @tnikkel wrote:
> You have the wrong bug number on this.

Thanks! Fixed."
108739,https://phabricator.services.mozilla.com/D108739,Bug 1699031: Switch to use wrapper-API GetCrossDocParentFrameInProcess() in ImageLoader.cpp. r?tnikkel,PHID-USER-uolr7ryycb5yqn6q4r4x,2021-03-17 07:32:46,You have the wrong bug number on this.
108739,https://phabricator.services.mozilla.com/D108739,Bug 1699031: Switch to use wrapper-API GetCrossDocParentFrameInProcess() in ImageLoader.cpp. r?tnikkel,PHID-USER-cje4weq32o3xyuegalpj,2021-03-17 07:00:33,"Code analysis found 1 defect in the diff 414186:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414186) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2a5ac3678d22dae6056a26d7d0317b9ef1dc7b69)."
108739,https://phabricator.services.mozilla.com/D108739,Bug 1699031: Switch to use wrapper-API GetCrossDocParentFrameInProcess() in ImageLoader.cpp. r?tnikkel,PHID-USER-xumvt235xw6lumpq5yog,2021-03-17 06:29:36,"Quoting the end of my extended commit message:
> It's OK that this walk will stop at the process boundary, because we don't support
> rendering observers for cross-origin out-of-process content anyway.

I'm guessing this^ is true, based on intuition & my observations from the testcase attached on the bug; but I don't actually know for sure.

I'm hoping tnikkel does know & can validate my assertion on this. :)"
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-06 21:11:59,"Code analysis found 4 defects in the diff 423046:
 - 1 defect found by clang-tidy
 - 1 defect found by code coverage analysis
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

You have touched the documentation in diff 423046, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/cb9dc2a0-9713-11eb-8cf1-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/423046) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6134876b7996ee9bf931447f1d9a7d05456dadf2)."
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-06 19:42:06,"Code analysis found 4 defects in the diff 422940:
 - 1 defect found by clang-tidy
 - 1 defect found by code coverage analysis
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

You have touched the documentation in diff 422940, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/c5ae60bc-9708-11eb-ba41-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/422940) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6537edb99159f92864105993a983502ac673dae1)."
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-05 21:21:57,"Code analysis found 16 defects in the diff 422320:
 - 1 defect found by code coverage analysis
 - 12 build errors and 1 defect found by clang-tidy
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-mozlint-file-whitespace](https://treeherder.mozilla.org/#/jobs?repo=try&revision=35cd89f955eb1fed3c998a6aa736affa8becb8b8&selectedTaskRun=KYi0iCDASReyOD6gQMjrgw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-eslint](https://treeherder.mozilla.org/#/jobs?repo=try&revision=35cd89f955eb1fed3c998a6aa736affa8becb8b8&selectedTaskRun=KtiE75VQTdWhJWxqtNIoBg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=35cd89f955eb1fed3c998a6aa736affa8becb8b8&selectedTaskRun=Zx2LvBoLREOTvKe7imrbzQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

You have touched the documentation in diff 422320, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/88817d82-964f-11eb-a5db-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/422320) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=35cd89f955eb1fed3c998a6aa736affa8becb8b8)."
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-cje4weq32o3xyuegalpj,2021-04-02 21:49:26,"Code analysis found 16 defects in the diff 421896:
 - 1 defect found by code coverage analysis
 - 12 build errors and 1 defect found by clang-tidy
 - 2 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e5d802551f4234c65ec4d0ea3b168df592d1764b&selectedTaskRun=c4aSgGVDRWeyuKmi6w9bxQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

You have touched the documentation in diff 421896, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6c97c3be-93f8-11eb-b423-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/421896) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e5d802551f4234c65ec4d0ea3b168df592d1764b)."
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-APPS-PhabricatorHeraldApplication,2021-03-26 03:18:02,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-ar2ybkhbot5lo5y4k2sz,2021-03-26 03:18:02,Thank you for adding this list.
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-ebebpbp2fnufsd3f2mah,2021-03-17 09:43:27,Since you're now iterating on the enumeration you might be able to use [MakeEnumeratedRange()](https://searchfox.org/mozilla-central/rev/1a47a74bd5ba89f2474aa27c40bd478e853f3276/mfbt/EnumeratedRange.h#176)
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-ebebpbp2fnufsd3f2mah,2021-03-17 09:43:27,This LGTM but given the amount of files that need to be kept in sync it would be time for this code to be generated. Unfortunately this isn't possible because two IDL files are involved and we don't support generating them yet (see bug [1428775](https://bugzilla.mozilla.org/show_bug.cgi?id=1428775) for more info).
108689,https://phabricator.services.mozilla.com/D108689,"Bug 1682030 - Remove NPAPI plugin process from GeckoChildProcess r=jld!,gsvelto!",PHID-USER-cje4weq32o3xyuegalpj,2021-03-16 21:57:29,"Code analysis found 14 defects in the diff 414016:
 - 1 defect found by code coverage analysis
 - 12 build errors and 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c062a0f38d841238076b55a1f5cc6b9946bedbd9&selectedTaskRun=CHNetQ9wTPqbLzEJD5KKtA-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

You have touched the documentation in diff 414016, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/3a71f5ca-869d-11eb-a8ac-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414016) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c062a0f38d841238076b55a1f5cc6b9946bedbd9)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 20:19:47,"Code analysis found 7 defects in the diff 417844:
 - 7 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/OgHItnTXTNOw9ACj5J2rzA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-fdnrsfyzllusuppi32hf.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5f233d7c210f69a3c540ff79f4f0912fb9f4326d&selectedTaskRun=AxTtZme9T7OEpepHaShp2g-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417844) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5f233d7c210f69a3c540ff79f4f0912fb9f4326d)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 20:05:04,"Code analysis found 7 defects in the diff 417825:
 - 7 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Arzv1ukdQt-l23Z4Ai6dUA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-og4y3vlt2npr3vultqxd.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=24b67c6dfa1fd980d6ef7710e84144be4374dcf3&selectedTaskRun=PK5PLwVjT6ie3I8Elp06hw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417825) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=24b67c6dfa1fd980d6ef7710e84144be4374dcf3)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 16:48:37,"Code analysis found 7 defects in the diff 417697:
 - 7 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/FqrbEf3_R6amL01x3Z-tjg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-euzbfz6gdkdscqr2hyst.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=41860528a60dea9337895fe6d18fafd449d36318&selectedTaskRun=dGhHL3qTQFmXU-1bYYRZJw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417697) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=41860528a60dea9337895fe6d18fafd449d36318)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-APPS-PhabricatorHeraldApplication,2021-03-24 16:19:27,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-24 16:19:27,Approving to get these patches landed before @sg leaves
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-24 14:13:50,"Code analysis found 8 defects in the diff 417639:
 - 1 build error found by clang-tidy
 - 7 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/M88GS4SOSz2nc7c8eNqJ3g/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-mal3nkcs6vwnawh6r6fh.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a96399fd62f56ab2664f6bcc8921e622a3267db4&selectedTaskRun=AaaqyeObQm-QzqjMuVthSA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/417639) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a96399fd62f56ab2664f6bcc8921e622a3267db4)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-24 11:44:45,">>! In D108588#3559557, @kmag wrote:
>>>! In D108588#3555571, @sg wrote:
>> I think the remaining open comments all relate to `unnecesary copies`, which is only half-true as explained in https://phabricator.services.mozilla.com/D108587#inline-611281. Do you still think these should be changed? (In that case it would seem to be good to have a function that does a similar thing like `ToArray` in an appending mode, i.e. first setting the capacity to the required value, and then appending the elements from the source range).
> 
> I think the callers which aren't designed to append (including any of the ones defined in XPIDL, and any of them that have a `SetCapacity` call for the number of items they append) should be changed to use a move assignment. Any where the desired behavior is unclear should probably continue to use iteration.

I have changed all of those to use `AppendToArray`now. As mentioned on the other patch, you're right that some of those could be changed to move assignment, but I don't want to risk introducing regressions here."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-23 23:47:52,">>! In D108588#3555571, @sg wrote:
> I think the remaining open comments all relate to `unnecesary copies`, which is only half-true as explained in https://phabricator.services.mozilla.com/D108587#inline-611281. Do you still think these should be changed? (In that case it would seem to be good to have a function that does a similar thing like `ToArray` in an appending mode, i.e. first setting the capacity to the required value, and then appending the elements from the source range).

I think the callers which aren't designed to append (including any of the ones defined in XPIDL, and any of them that have a `SetCapacity` call for the number of items they append) should be changed to use a move assignment. Any where the desired behavior is unclear should probably continue to use iteration."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-23 13:20:33,Reverted.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-23 13:20:33,"Right, I reverted this."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-23 13:20:33,Sure. Interesting that clang-format doesn't remove the extra space here.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-23 13:20:33,"As commented on the other patch, `aCommands.AppendElements` also moves if `aCommands` is empty."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-ux2opawd2pljply62dgl,2021-03-23 13:20:33,"I think the remaining open comments all relate to `unnecesary copies`, which is only half-true as explained in https://phabricator.services.mozilla.com/D108587#inline-611281. Do you still think these should be changed? (In that case it would seem to be good to have a function that does a similar thing like `ToArray` in an appending mode, i.e. first setting the capacity to the required value, and then appending the elements from the source range)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Unnecessary copy.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,No unnecessary copy. +1.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Unnecessary copy.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Also doesn't match commit description...
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Unnecessary copy.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Unnecessary copy.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,This isn't related to the commit description..
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Yes.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,Also makes an unnecessary copy.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:14,"As above, this makes a copy, which we don't want."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:13,Nit: No need for `> >` in modern C++.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:13,Same issue as above.
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-03-22 20:36:13,"This will create a new array and then copy its contents to `aCommands` whereas the old code would just append without a copy. I think `aCommands = ToArray(mCommandsTable.Keys())` (which should implicitly invoke the move assignment operator, I think) would be OK, though."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-22 17:52:25,"Code analysis found 8 defects in the diff 416280:
 - 8 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/BaPopwJNTuOgWHdanHv0oA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-xm3ajfi4vjcovmzbfug4.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8ba9bed574cfff492b1b5d3a9798381ecaf64473&selectedTaskRun=MDEYq7b8TVu5kSC391V4hA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/416280) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8ba9bed574cfff492b1b5d3a9798381ecaf64473)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-19 18:50:20,"Code analysis found 13 defects in the diff 415646:
 - 5 defects found by code coverage analysis
 - 8 defects found by private static analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/FQytQUSfQeSH_1v7gXxBNg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-42emgxiylmyyzhrdvgyj.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=facbfd57b7e60e9eb728a25067a21a78e7f2cd18&selectedTaskRun=XXLR57jpQIaPw0IH6-ihjw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=facbfd57b7e60e9eb728a25067a21a78e7f2cd18&selectedTaskRun=byezqMWfSDSnLfmV69jXgQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/415646) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=facbfd57b7e60e9eb728a25067a21a78e7f2cd18)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-19 13:16:40,"Code analysis found 35 defects in the diff 415499:
 - 24 build errors and 2 defects found by clang-tidy
 - 4 defects found by private static analysis
 - 5 defects found by code coverage analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/P9VhSGigR9anmAmWqloVCA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-2vywro673rvgrlqom2mj.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3f081f44ccf5ff1225c3ce30f02b1d2e049b33c6&selectedTaskRun=Ws5sX1mQTnO45Kg2Lk4IHg-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/415499) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3f081f44ccf5ff1225c3ce30f02b1d2e049b33c6)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-17 19:29:52,"Code analysis found 14 defects in the diff 414429:
 - 3 build errors and 2 defects found by clang-tidy
 - 4 defects found by private static analysis
 - 5 defects found by code coverage analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/Oj7l3bn_SaGjkYJy_vgzHQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-6l5kfqslzw6mnkfcjxyx.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7759b2f2c938a33326a6e0d37a3c9c4a0f8239e5&selectedTaskRun=FWW3QrnkQ2GGMZo6mXLaoQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/414429) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7759b2f2c938a33326a6e0d37a3c9c4a0f8239e5)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-16 16:09:04,"Code analysis found 14 defects in the diff 413679:
 - 3 build errors and 2 defects found by clang-tidy
 - 4 defects found by private static analysis
 - 5 defects found by code coverage analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/ewgnfIJJRXuf8WsG2uvZHQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-a2hl3wkl4sz6okygzptn.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4711c62c5889bb9c78b65edc4d2519b7060997f6&selectedTaskRun=LB8aYcI5Qi6IUoeSQ_d0aA-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/413679) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4711c62c5889bb9c78b65edc4d2519b7060997f6)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-16 13:55:38,"Code analysis found 20 defects in the diff 413588:
 - 4 defects found by private static analysis
 - 5 defects found by code coverage analysis
 - 9 build errors and 2 defects found by clang-tidy

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/KgylxhtnS6aW11fxVyjQAg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-uqeuf5zdzxogzmcpkpkq.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=bae0add7d66b733ca841bf4fc3b81f02f57113f2&selectedTaskRun=adU3AlvORYuf4BKGYRlx4g-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/413588) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=bae0add7d66b733ca841bf4fc3b81f02f57113f2)."
108588,https://phabricator.services.mozilla.com/D108588,Bug 1184468 - Use nsTHashtable::Keys where possible.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-16 12:06:40,"Code analysis found 9 defects in the diff 413555:
 - 4 defects found by private static analysis
 - 5 defects found by code coverage analysis

You can run this analysis locally with:
 - For private static analysis, please see [our private docs in Mana](https://mana.mozilla.org/wiki/pages/viewpage.action?pageId=130909687), if you cannot access this resource, ask your reviewer to help you resolve the issue.

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/cWY0u1OpSTOVRvPIbLjaKA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-o75vwgnhnz4bp7nyambt.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=68e1bff409234af3cc36272d86e29ebf33588c5b&selectedTaskRun=ADQAxBiJRuWn0frdWnEoaA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=68e1bff409234af3cc36272d86e29ebf33588c5b&selectedTaskRun=MBu6Ny_rQaKYBIYJKXt0HQ-0) failed, but we could not detect any issue.
Please check this task manually.

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/413555) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=68e1bff409234af3cc36272d86e29ebf33588c5b)."
108486,https://phabricator.services.mozilla.com/D108486,Bug 1696792 - Suppress font shaping across tspan boundaries in SVG content. r=#layout-reviewers,PHID-USER-autti2wxdumepz7idru4,2021-03-15 19:44:52,"Oops, yes! Thanks."
108486,https://phabricator.services.mozilla.com/D108486,Bug 1696792 - Suppress font shaping across tspan boundaries in SVG content. r=#layout-reviewers,PHID-USER-zp4gy3jjzfehipsktf6x,2021-03-15 19:18:10,Need to add to reftests.list right?
108486,https://phabricator.services.mozilla.com/D108486,Bug 1696792 - Suppress font shaping across tspan boundaries in SVG content. r=#layout-reviewers,PHID-USER-zp4gy3jjzfehipsktf6x,2021-03-15 19:18:10,Makes sense to me with the reftest fixed. Thanks!
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-cje4weq32o3xyuegalpj,2021-05-06 05:34:57,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b9356fa46f98bfe88d9128b04c4c962abe82d464&selectedTaskRun=B4Xzq8XKRL-d7XyrElp8_Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-zb2d32xafgr6qarnlvuu,2021-05-06 05:05:48,"[If the device has no associated label, then this attribute MUST return the empty string.](https://w3c.github.io/mediacapture-main/#dom-mediadeviceinfo-label)

Tested the length of the IDs."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-zb2d32xafgr6qarnlvuu,2021-05-06 05:01:20,"Some audioinput and videoinput tests assume that a device exists (some don't), so I guess we can assume an audiooutput device exists."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-zb2d32xafgr6qarnlvuu,2021-05-06 04:59:10,"""audio *output* device"", remove no audiooutput device handling, more asserts, rename variable to avoid shadowing."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-zb2d32xafgr6qarnlvuu,2021-04-01 04:23:41,"Oh, sorry. This was meant to be ""NotFoundError"", to handle the no devices case, and similar zero devices in the subsequent test.

Perhaps we don't need to handle that if we assume some things about the test environment. For example, I've seen the test driver start the browser with 96 dpi."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-lzblq7ywx2acsvsetnzh,2021-03-31 15:31:46,"assert info (this means the second test cannot succeed without the first, but I think that's OK and inherently true)."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-lzblq7ywx2acsvsetnzh,2021-03-31 15:31:46,And then remove this conditional success path.
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-lzblq7ywx2acsvsetnzh,2021-03-31 15:31:46,"This seems like a potential false-positive (works for manual testing, but unused otherwise, and introduces uncertainty in the subsequent test).

I think we should split out testing of deny into a separate file much like [mediacapture-streams/GUM-deny.https.html](https://wpt.fyi/results/mediacapture-streams/GUM-deny.https.html) does, and treat it like a test failure here (remove the try/catch)."
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-lzblq7ywx2acsvsetnzh,2021-03-31 15:31:46,"Let's also assert that `info.kind` is `""audiooutput""` and maybe that the other members are non-zero length?"
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-lzblq7ywx2acsvsetnzh,2021-03-31 15:31:46,an audio output device.
108386,https://phabricator.services.mozilla.com/D108386,Bug 1709474 Test effect of selectAudioOutput() on audiooutput devices from enumerateDevices(),PHID-USER-cje4weq32o3xyuegalpj,2021-03-15 03:22:20,"Code analysis found 1 defect in the diff 412837:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-mozlint-eslint](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a06d0baa50ba5656f38ecd9637e14c1a05ce4df9&selectedTaskRun=PSliYF8eS26GoUaX3m9xng-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/412837) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a06d0baa50ba5656f38ecd9637e14c1a05ce4df9)."
108336,https://phabricator.services.mozilla.com/D108336,Bug 1698302 - bonus: support indeterminate progress meter. r=mstange,PHID-USER-cje4weq32o3xyuegalpj,2021-03-14 01:43:58,"Code analysis found 1 defect in the diff 412739:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/412739) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=85462db846f3094709a6572be3a3815f68fa702c)."
108286,https://phabricator.services.mozilla.com/D108286,Bug 1662559 - Part 3: Tighten up type of the ClassMemberList node kind. r=arai,PHID-USER-4bmd7d25nix2m4x6y6uw,2021-04-19 15:01:18,rebase
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-23 11:11:57,No Idea why moz-phab decided to screw this up after updating!!
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-ursddouwkmzhineuaj7s,2021-03-19 10:03:32,Thanks for updates.
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-17 12:34:42,Actually I just forgot that you can pass a string the setTimeout ...
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-17 12:32:34,">>! In D108236#3532143, @jonco wrote:
> Can you add a test for what happens when dynamic module import happens as part of window.eval or from window.setTimeout in a content script?  (I'm guessing it loads into the context of the page based on https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#using_eval_in_content_scripts but it would be good to know).

I think I am understanding the comment about setTimeout in the same way you do, that the handler would be executing in the context of the page. That doesn't seem to happen however. Good ideas for a tests definitely."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-ursddouwkmzhineuaj7s,2021-03-17 09:33:00,"Can you add a test that the web page and the extension see different versions of the module?

It would be nice to test this the other way around too, with the page loading the modules first."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-ursddouwkmzhineuaj7s,2021-03-17 09:33:00,Can you add a test for what happens when dynamic module import happens as part of window.eval or from window.setTimeout in a content script?  (I'm guessing it loads into the context of the page based on https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/Content_scripts#using_eval_in_content_scripts but it would be good to know).
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 22:02:39,"After your updated patch I see the misunderstanding.

I suggested to put the assertion here, not even in the response but just here."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 22:02:39,Test looks good.
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-12 22:01:56,"Oh you mean replace the whole response handler with just `ok(false, ""Unexpected request to /script.js"");` instead of writing it as response JS code. I see!"
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 21:53:23,"The `registerPathHandler` function executes in the context of this xpcshell test. It is not extension code.

The functions below (used in content scripts) are not running in the context of a xcpshell test; they are serialized (converted to strings) and used as source code for the test extension. That's why extension APIs can be used from there."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 21:50:22,">I don't understand where null is coming from,

The definition of `assertRejects` takes three parameters, the last two of them being optional: https://searchfox.org/mozilla-central/rev/491c8096b5dfdb328b2135895062e16e1e36d708/toolkit/components/extensions/schemas/test.json#136-156

When the parameters are normalized, `null` is passed for optional values (instead of `undefined`, what you may expect).

There is some ambiguity in the schema definition. Both the second and third parameter can be a string.
Based on the generated error, it seems that

`assertRejects(err, string)` has become
`assertRejects(err, null, string)`

... That is unexpected. But easy to fix: just follow my previous suggestion of setting three arguments."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-12 21:44:51,We are trying to import it from a content-script. So shouldn't it be browser.test.fail?
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-12 21:40:52,"I don't quite understand why it doesn't fail
> Promise rejected, expecting rejection to match null, got ""error loading dynamically imported module"": should reject import(""data:text/javascript,void 0"") 

I don't understand where null is coming from, this should be the template string. Sadly errorMatches seems to have somewhat of a footgun with null as well: https://searchfox.org/mozilla-central/rev/491c8096b5dfdb328b2135895062e16e1e36d708/toolkit/components/extensions/child/ext-test.js#26"
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 21:25:58,"The signature is `assertRejects(promise, expectedError, msg)` - https://searchfox.org/mozilla-central/rev/491c8096b5dfdb328b2135895062e16e1e36d708/toolkit/components/extensions/child/ext-test.js#192

You're missing the expected message; I would expect the test to fail in its current form."
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 21:25:58,"I was thinking of

```
ok(false, ""Unexpected request to /script.js"");
```"
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-fduxg2tcrifvhhmgrazn,2021-03-12 20:44:37,Nice!
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,Consider adding a failing assertion here too.
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,Please preserve alphabetical order.
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,typo
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,"Add description

```
  ""error loading dynamically imported module"",
  ""Cannot import script that is not web-accessible""
);
```"
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,"It looks like you've declared `main` only once and the script isn't doing anything else besides calling `main`. The `main` is not needed when you change

```
""main.js"": function() {
```

to

```
""main.js"": async function() {
```

(similarly for every other test here)"
108236,https://phabricator.services.mozilla.com/D108236,Bug 1536094 - Add test for importing from WebExtension content scripts,PHID-USER-eixhsnpzpzu5ezloexjr,2021-03-12 20:08:23,"Could you check the error message and add a descriptive message? E.g.

```
browser.test.assertRejects(
  import(url),
  ""error loading dynamically imported module"",
  `should reject import(""${url}"")`
);
```"
108186,https://phabricator.services.mozilla.com/D108186,Bug 1697666 - Ensure the Osaka-Mono font family alias is available immediately to satisfy font-prefs lookups. r?jwatt,PHID-USER-5uwubk7gf66rlmaisvwv,2021-03-18 09:35:02,Null check needed asap.
108036,https://phabricator.services.mozilla.com/D108036,Bug 1696460 - Ensure GeckoServiceChildProcess is treated as a bound service.,PHID-USER-6rdibiwcq3nuj7op2com,2021-03-11 22:38:37,Changes made in support of bug 1567341 which are tests that exercise this code.
108036,https://phabricator.services.mozilla.com/D108036,Bug 1696460 - Ensure GeckoServiceChildProcess is treated as a bound service.,PHID-USER-oszpryzadx4pdqrckjlp,2021-03-11 22:37:07,"If you remove the call to `System.exit` in `onDestroy` Android _will_ try to reuse the process, so it's not redundant in the sense that we shouldn't see it, but it could happen if we introduce a bug."
108036,https://phabricator.services.mozilla.com/D108036,Bug 1696460 - Ensure GeckoServiceChildProcess is treated as a bound service.,PHID-USER-6rdibiwcq3nuj7op2com,2021-03-11 22:34:50,"Did you actually witness multiple calls to `onCreate`, or is this more for redundancy? I'm kind of surprised that this would be invoked more than once..."
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-19 09:03:51,log the error
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-03-18 13:19:41,"{nav,  icon=info-circle, name=nitpick:} Here I wonder if we couldn't always only use `error`. If that's an error object, the stack will be rendered directly in a proper way (`error.stack` is only a string, with non-clickable location when it's rendered in the console)"
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-03-18 13:19:41,Thanks for making errors better and adding test cases :)
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-18 08:31:43,https://treeherder.mozilla.org/#/jobs?repo=try&revision=a2aed7f01ffc35f59938bc6a3cf2c4b4cb355f01
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-18 08:31:37,rebase
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-15 17:21:00,fix lint
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-15 17:12:14,"Code analysis found 5 defects in the diff 413155:
 - 5 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/413155) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2b58b99021c3586b540ebbdf8b15486fa77fa98f)."
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-15 09:07:51,rebase and fixes
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-11 23:21:51,"Code analysis found 1 defect in the diff 411857:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/411857) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ea9972ecd64d3cf4e22b91baa0c51daf2acf4934)."
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-11 22:34:22,rebase
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-11 10:10:51,"The analysis task [source-test-mozlint-eslint](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2ffca639d381b97c9c3268451dcc9ee8b252919e&selectedTaskRun=TjqEXgwtTBmyLGQ1H6y2_A-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
107986,https://phabricator.services.mozilla.com/D107986,Bug 1698554 - [devtools] Improve error logging when a request fails with a custom exception.,PHID-USER-aqylzdu7ya2kd4nq4man,2021-03-11 09:44:31,rebase
107935,https://phabricator.services.mozilla.com/D107935,"Bug 1699327 - Add nsIFrame::GetMarginRect(), and comparison operators for LogicalMargin.",PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-03-18 01:00:32,Moved original Part 1 to bug 1699327 to land
107935,https://phabricator.services.mozilla.com/D107935,"Bug 1699327 - Add nsIFrame::GetMarginRect(), and comparison operators for LogicalMargin.",PHID-USER-p2bgqx7iv7qmcfo5ckxy,2021-03-15 05:14:34,"Removed `ReflowOutput::InflateAllWith`, and added `LogicalMargin::operator==` and `LogicalMargin::operator!=`"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-29 02:15:35,https://treeherder.mozilla.org/jobs?repo=try&revision=3430f6efcde73def63a3742fb57d154a69631446
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-29 02:14:15,Done.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-APPS-PhabricatorHeraldApplication,2024-05-29 01:30:30,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2024-05-29 01:30:30,"wrap in a try block, just in case?"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-29 01:16:34,"That works, thanks."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-29 01:16:34,"Very well, I've changed it back."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2024-05-29 00:44:41,"Seeing this, I suppose what you were saying you couldn't do was the
```
Checking for MozillaBuild version >= 3.2... 3.1
Error message
```
but that should actually be possible with something like:
```
@depends_if(mozillabuild_dir)
@cheching(""for MozillaBuild version >= 4.0"")
def mozillabuild_version(mozillabuild_dir):
    return Version(...)

@depends(mozillabuild_version)
def valid_mozilla_build_version(version):
    if version < Version(""4.0""):
        die(""Please upgrade MozillaBuild. You can find a recent version at..."")
```"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2024-05-29 00:44:41,"I'm not a fan of an instance of `Path` ending up returned. One of the reasons for @imports is to be able to easily identify functions that depend on external things, and with this, the mozillabuild_version actually ends up opening a file without using an @imports (although there is one remaining by mistake)."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-22 22:54:11,https://treeherder.mozilla.org/jobs?repo=try&revision=9362337dd4cf501530af9d7a8cdd907ee0af8d72
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-22 22:19:46,https://treeherder.mozilla.org/jobs?repo=try&revision=7124d7ad14599e09868e50e619c7c271555b7ab7
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-22 22:16:34,Opted to rewrite it for `pathlib` to make the `open` cleaner in the next check.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-22 22:14:19,"We can bump the minimum version to `4.1` if you want, but `4.0` seems recent enough for now."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-a7hkphr5qjbqw4tdmujb,2024-05-22 22:13:52,"Sample error output:
```
 0:01.61 checking for sparse checkout... no
 0:01.61 checking for MozillaBuild directory... D:\mozilla-build
 0:01.61 checking for MozillaBuild version... 3.9
 0:01.61 checking for MozillaBuild version >= 4.0... no
 0:01.61 ERROR: Your MozillaBuild version is too old, please upgrade (detected 3.9).
 0:01.61 You can find a recent version at: https://wiki.mozilla.org/MozillaBuild
*** Fix above errors and then restart with ""./mach build""
```

I needed to add a `@checking` to the third check (`valid_mozillabuild_version`), otherwise it would dump the whole call stack in-between ` 0:01.61 checking for MozillaBuild version... 3.9` and the error message, eg:

```
 0:01.58 checking for MozillaBuild version >= 4.1... 4.0
 0:01.58 Traceback (most recent call last):
 0:01.58   File ""D:\mozilla-source\mozilla-unified\configure.py"", line 351, in <module>
 0:01.58     sys.exit(main(sys.argv))
 0:01.58              ^^^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\configure.py"", line 141, in main
 0:01.58     sandbox.run()
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\configure\__init__.py"", line 573, in run
 0:01.58     func(*args)
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\configure\__init__.py"", line 624, in _value_for
 0:01.58     return self._value_for_depends(obj)
 0:01.58            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\util.py"", line 911, in method_call
 0:01.58     cache[args] = self.func(instance, *args)
 0:01.58                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\configure\__init__.py"", line 633, in _value_for_depends
 0:01.58     value = obj.result()
 0:01.58             ^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\util.py"", line 911, in method_call
 0:01.58     cache[args] = self.func(instance, *args)
 0:01.58                   ^^^^^^^^^^^^^^^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\configure\__init__.py"", line 162, in result
 0:01.58     return self._func(*resolved_args)
 0:01.58            ^^^^^^^^^^^^^^^^^^^^^^^^^^
 0:01.58   File ""D:\mozilla-source\mozilla-unified\python\mozbuild\mozbuild\configure\__init__.py"", line 1316, in wrapped
 0:01.58     return new_func(*args, **kwargs)
 0:01.58            ^^^^^^^^^^^^^^^^^^^^^^^^^
 0:01.58   File ""D:/mozilla-source/mozilla-unified/build/moz.configure/init.configure"", line 1345, in valid_mozillabuild_version
 0:01.58     raise FatalCheckError(
 0:01.58 D:/mozilla-source/mozilla-unified/build/moz.configure/checks.configure._declare_exceptions.<locals>.FatalCheckError: MozillaBuild version is too old, please upgrade (required 4.1, detected 4.0).
*** Fix above errors and then restart with ""./mach build""
```"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,"Considering the version is in the checking message, you don't need the `required %s` part.

To make the error simpler, I'd actually split the version and the check, so that the output would be:
```
Checking for MozillaBuild version >= 3.2... 3.1
Error message
```"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,"os.path in the configure sandbox is, in fact, mozpath, so you don't need it."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,you're not using mozpath.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,"Probably simpler as:
```
if mozillabuild and os.path.exists(mozillabuild[0]):
    return mozillabuild[0]
```"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,"You can use `@depends(""MOZILLA_BUILD"", when=host_is_windows)`"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-19 07:15:17,Extra nitpicking ahead.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-2udvvxlmhm2gunwx6qvo,2021-03-16 20:39:24,">>! In D107835#3530225, @mhentges wrote:
> LGTM, but I'll leave the final review to glandium.

It actually looks like:

```
checking for MozillaBuild directory... C:\mozilla-build
checking for MozillaBuild version >= 3.2... 3.3
```

But maybe that's more info than we need."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-16 20:35:52,Nice
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-16 20:35:52,"Should this be a `@checking`? I'm worried this will add an unnecessary line to the output:
```
checking for MozillaBuild version >= 3.2... 3.3
```
vs:
```
checking for MozillaBuild directory... yes
checking for MozillaBuild version >= 3.2... 3.3
```

Should this just be a dependable?"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-16 20:35:52,"LGTM, but I'll leave the final review to glandium."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-2udvvxlmhm2gunwx6qvo,2021-03-11 22:57:26,"> @checking(""for MozillaBuild >= 3.3"")

I like this approach - made a few changes to this patch and it seems to run properly on Linux. I'll test it on Windows and update."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-11 22:51:27,"`@checking(""for MozillaBuild >= 3.3"")` is a 👍  from me"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 22:50:08,"but I don't feel like even that is necessary.

BTW, you comment reminds me that I've wanted to print some information about the source tree in the configure output for a while."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 22:48:53,"`@checking(""for MozillaBuild >= 3.3"")`"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-11 21:40:38,"Sure, but when debugging someone's log, it's unclear if the VCS revision they're on expects `3.3` or `3.4`. Having the warning in the log makes it clear that that build system at _that revision_ wants a different version than what's available."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 21:37:33,You're printing the version. That's about the amount of information you need.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-11 15:50:50,"They're buried in the configure output, but still stick out when verifying the logs of a failed build after-the-fact, no?"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 01:32:11,Warnings like this that are buried in the configure output are essentially useless. It's not worth it.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 01:32:11,"This should be gated on the host being Windows. BTW, this file is not included in all build types (e.g. artifact builds). It's also included in builds that don't use mozilla build (cross-builds). You should move this check to init.configure."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 01:32:11,"Don't use os.environ. We have a option(env=""MOZILLABUILD"") in init.configure."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-10 19:00:23,"> Then you have to choose between annoying people with the new warning (maybe they'll even file a bug saying it's confusing since their build works fine) or bumping the minimum and forcing an unnecessary upgrade on everyone.

Based on the frequency of MozillaBuild updates (I think 3.3 was released in 2019?), I doubt that users will have that many frequent updates.
Additionally, the issues caused by unexpected MozillaBuild versions are hard to attribute to the version mismatch. Have a warning at the beginning saying ""hey, your MozillaBuild is unexpected, you may run into surprises"" will help point a finger towards the cause of such an issue.

As for the warning when MozillaBuild is too new: an example where I can imagine it being useful is if, say, MozillaBuild 3.4 comes with a new version of Python (e.g.: 3.9).
If the user hops on a revision from mid-2021 (e.g.: to work on an ESR), I wouldn't doubt that they may run into scripts whose Windows-specific code expects Python 3.7.

-----

At least, that's my assumptions for why it's valuable having both the ""too old"" error and the ""too new"" warning. I don't feel exceptionally strongly about it, though."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-3gzlndzmaa6blcpk6req,2021-03-10 18:40:28,"What happens when we spin a new mozillabuild that isn't strictly required? Perhaps it has some optional things or special fixes for a niche use-case that was requested.

Then you have to choose between annoying people with the new warning (maybe they'll even file a bug saying it's confusing since their build works fine) or bumping the minimum and forcing an unnecessary upgrade on everyone.

Checking the minimum sounds great. But I think checking in the other direction is more likely to harm than help."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-10 16:53:35,"Bit of a bummer, but worth it IMO. Unsure if there's a better way of handling this."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-10 16:53:35,Let's link developers right to [[ https://wiki.mozilla.org/MozillaBuild#To_Upgrade_From_A_Previous_Version | the upgrade docs ]] so they know how to resolve this issue.
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-10 16:53:35,"Rather than returning `bool|str`, I think we should return `str?` for consistency:
```
if not mozillabuild ...:
    return # None

return mozillabuild
```

(I'm assuming that `None` is interpreted by the `configure` `depends` system the same way that `False` is, right?)"
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-2udvvxlmhm2gunwx6qvo,2021-03-10 16:36:21,"Note that this warning will show up like this in the configure output:

```
checking for modern MozillaBuild version ...
MozillaBuild version (...........
yes
```

but I don't think there's a way around this aside from using the formatting callback."
107835,https://phabricator.services.mozilla.com/D107835,Bug 1690814: Add configure checks for MozillaBuild and its version r?#build,PHID-USER-cje4weq32o3xyuegalpj,2021-03-10 16:31:54,"Code analysis found 1 defect in the diff 410894:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/410894) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c30ce3946da2ee5a47c83b4f24843b3a07d9e5d7)."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 13:54:55,There are no test machines available for this platform in CI yet.
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-APPS-PhabricatorHeraldApplication,2021-03-16 08:37:44,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 08:33:33,">>! In D107785#3526124, @glandium wrote:
> Only on try. You'd need to ask @jmaher how to use them.

Ok, so this is independent from this commit. I will add a needinfo directly on the bug and if needed follow-up with another commit."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-16 08:28:02,">>! In D107785#3525962, @whimboo wrote:
>>>! In D107785#3525957, @whimboo wrote:
>> Oh wait. What about running `wdspec` tests for Firefox with the Aarch64 build of geckodriver. I assume that this is something we should do. So a second commit on this stack would be needed.
> 
> Whereby do we already have test machines that could be used here?

Only on try. You'd need to ask @jmaher how to use them."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 08:17:35,">>! In D107785#3525957, @whimboo wrote:
> Oh wait. What about running `wdspec` tests for Firefox with the Aarch64 build of geckodriver. I assume that this is something we should do. So a second commit on this stack would be needed.

Whereby do we already have test machines that could be used here?"
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 08:15:35,Oh wait. What about running `wdspec` tests for Firefox with the Aarch64 build of geckodriver. I assume that this is something we should do. So a second commit on this stack would be needed.
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 08:14:21,">>! In D107785#3525929, @glandium wrote:
>> That would be great if you could do that. I don't have a new MacBook. When you have the build just run some tests from `mach wpt --webdriver-binary=path/to/geckodriver testing/web-platform/tests/webdriver/tests/`. Thanks a lot!
> 
> I'll check that out tomorrow.

Shall we wait landing it, or are you find doing a post-landing check? I don't really anticipate problems."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-16 08:00:12,"No, you wouldn't, because there isn't a TM(gd) in the platform macosx-aarch64/opt."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-16 08:00:12,">>! In D107785#3525873, @whimboo wrote:
>>>! In D107785#3525762, @glandium wrote:
>> Do you need some smoketesting for the resulting build?
> 
> That would be great if you could do that. I don't have a new MacBook. When you have the build just run some tests from `mach wpt --webdriver-binary=path/to/geckodriver testing/web-platform/tests/webdriver/tests/`. Thanks a lot!

I'll check that out tomorrow."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 07:44:54,"When I remove the above change in config.yml what should I use here as group name? Should it still be `TM`? If yes, I would have to use `gd-aarch64` as symbol name."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-16 07:44:54,">>! In D107785#3525762, @glandium wrote:
> Do you need some smoketesting for the resulting build?

That would be great if you could do that. I don't have a new MacBook. When you have the build just run some tests from `mach wpt --webdriver-binary=path/to/geckodriver testing/web-platform/tests/webdriver/tests/`. Thanks a lot!"
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-16 06:36:01,"Yeah, it's not really necessary."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-16 06:36:01,Do you need some smoketesting for the resulting build?
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-12 10:26:33,Maybe this is not needed or even wanted. Please let me know.
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-12 10:26:33,"Here the most recent try build:
https://treeherder.mozilla.org/jobs?repo=try&revision=7d7fd4c81509f47b4464b87f72144327e83420a2"
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-12 10:21:35,I wonder if we should remove the `-geckodriver` suffix from the `build_platform`. Or would that be required?
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-12 09:59:21,"Ok, I can do that. And to not get `macosx64-aarch64 opt` but `OS X AArch64 opt` displayed it needs a patch for Treeherder directly I assume?"
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 21:54:09,cbindgen is not in a macosx64/opt platform to begin with. The macosx-aarch64/opt platform actually exists. It's used for openh264.
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-jp26w7fkaeadar63vok2,2021-03-11 18:39:16,"I tried to make it similar to what we have for cbindgen:

https://searchfox.org/mozilla-central/rev/f6ffb71dca9eb491e85aa95042380b2602008b00/taskcluster/ci/toolchain/cbindgen.yml#50

By using `macosx64-aarch64/opt` we would need a new platform setting in some other file to print the string correctly on Treeherder:

https://treeherder.mozilla.org/jobs?repo=try&revision=88ff3921ef3fe36bcb2783291ee955b84be5febc

If that is what we should do, shall I move cbindgen to the same platform name?"
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 08:52:17,You shouldn't need this change if you do the treeherder platform change.
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 08:52:17,"`rsplit` is kind of confusing, because in this case, it's the same thing as `split`."
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-03-11 08:52:17,macosx64-aarch64/opt? (in which case you don't need the aarch64 suffix in the symbol)
107785,https://phabricator.services.mozilla.com/D107785,Bug 1677471 - [geckodriver] Build binaries for MacOS AArch64.,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-03-10 15:25:11,"Makes sense to me, but I'm leaving the final review for glandium."
107635,https://phabricator.services.mozilla.com/D107635,Bug 1697148 - Part 2: Use 32-bit loads in branchIfNotFunctionIsNonBuiltinCtor. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-03-09 15:18:49,"I'm feeling lazy today, so let's just stick with the same asserts/comments for now. 😃"
107635,https://phabricator.services.mozilla.com/D107635,Bug 1697148 - Part 2: Use 32-bit loads in branchIfNotFunctionIsNonBuiltinCtor. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-03-09 15:15:07,Address review comments
107635,https://phabricator.services.mozilla.com/D107635,Bug 1697148 - Part 2: Use 32-bit loads in branchIfNotFunctionIsNonBuiltinCtor. r=jandem!,PHID-USER-ir4emeapesorzd6nq5ut,2021-03-09 14:07:44,Another approach would be to add some helper function that returns `JSFunction::offsetOfNargs()` and has the assertions/comment...
107635,https://phabricator.services.mozilla.com/D107635,Bug 1697148 - Part 2: Use 32-bit loads in branchIfNotFunctionIsNonBuiltinCtor. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-03-09 13:58:16,"I've omitted the comments/assertions because the immediately preceding method (`MacroAssembler::branchTestFunctionFlags()`) already mentions these constraints. But I can add them here, too."
107635,https://phabricator.services.mozilla.com/D107635,Bug 1697148 - Part 2: Use 32-bit loads in branchIfNotFunctionIsNonBuiltinCtor. r=jandem!,PHID-USER-ir4emeapesorzd6nq5ut,2021-03-09 13:53:19,Please add asserts and comment similar [to here](https://searchfox.org/mozilla-central/rev/5a66c4b4a41ab78a87c30c9db0d93c732c534402/js/src/jit/MacroAssembler-inl.h#512-515). It's a bit redundant but I think it helps understand what's happening.
107584,https://phabricator.services.mozilla.com/D107584,Bug 1647442 - handle OOP ancestors in Document::AdoptNode. r=nika!,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-09 00:59:45,"We might technically want to add some logic for handling cross-chrome-boundary documents here, although that seems quite unlikely to occur. 

Perhaps we could just write something like this to be safe:

```
if (XRE_IsParentProcess()) {
  bc = bc->Canonical()->GetParentCrossChromeBoundary();
} else {
  bc = bc->GetParent();
}
```"
107584,https://phabricator.services.mozilla.com/D107584,Bug 1647442 - handle OOP ancestors in Document::AdoptNode. r=nika!,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-09 00:59:45,r=me with the small change I suggested
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-09 16:30:08,"Thanks, I was able to test it manually with removing some ifdefs."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-09 16:09:05,You can do this more easily by using `./mach run --temp-profile`! :-)
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-09 16:00:02,"You should be able to create a new profile with your build to test it, unless I misunderstood the question."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-09 16:00:02,"> The ID is `firefox_help`, so we need a new bookmark (and also fix the comment in the link while we're touching it).
> 
> ```
> # LOCALIZATION NOTE (firefox_get_help):
> # link title for https://www.mozilla.org/firefox/help/
> #define firefox_get_help Get Help
> ```

The link here still has en-US, we should remove it ;-)"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-09 15:39:25,"Please verify that this is correct. I found this ID through searchfox, but I haven't looked into how all of this machinery works, so I didn't manually test it."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-09 15:38:34,"@Gijs Thanks, that was much clearer."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-09 05:24:20,"The ID is `firefox_help`, so we need a new bookmark (and also fix the comment in the link while we're touching it).

```
# LOCALIZATION NOTE (firefox_get_help):
# link title for https://www.mozilla.org/firefox/help/
#define firefox_get_help Get Help
```"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-09 05:24:20,"Correct assumption: you normally avoid characters with descender (y, g, q, p) and narrow characters (l,i,I), especially if the font is sans-serif.

`PLATFORM()` on the accesskey works for me, it has the benefit that locales can drop it if they need."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-cje4weq32o3xyuegalpj,2021-03-08 22:49:03,"Code analysis found 1 defect in the diff 409510:
 - 1 defect found by l10n-conflicts (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/409510) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4c4fb9952bcf7049276a6b36aba43064918b5fe2)."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 22:37:39,(And thank you!)
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 22:37:29,@flod (how) is this versioned?
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 22:37:29,"This is basically done besides the access key for `Settings`. I'm not sure if we need versioning for the bookmarks change, so explicitly pinging flod for that."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 22:35:46,"Sorry for the confusion.

The sync now accesskey can stay platform-agnostic but just be changed to `o` (ie same value on Linux/macOS/Windows). I defer to @flod but I suspect that's marginally better than `y` because the descender of the `y` will cross the underline of the access key, so it won't be as easy to read. (I assume that was the reason he recommended against `g` for `Settings`; `i` OTOH is very narrow)

For `Settings` I'd continue to use `n` on Linux, as it is/was pre-patch.

Practically speaking, that means a ` PLATFORM()` expression for the `.accesskey` for `menu-settings` that specialcases Windows to be `S` and uses `n` elsewhere, and hardcoding a change to the sync now accesskey everywhere. Does that help?"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 22:29:15,"I'm having trouble understanding this feedback and which access keys should be applied to which items.

Windows:

* Settings: S
* Sync Now: o

Mac:

* Whatever

Linux

* ?"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 22:11:22,"> Yes, but it's correct on current nightly, right?

I believe the ordering is correct."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 21:41:19,"Note that confusingly, this item is in a submenu. `O` was previously/currently used for `Options` so must be free."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 21:40:16,"Use `o` for `Sync now`, and `S` for `Settings`. This works on Windows, AFAICT.

on macOS, I'm fairly sure access keys just don't work, and macOS does its own mad thing.

On Linux... I guess we can keep using `n` as we were before? Everything better will be taken, as this item is in the ""Edit"" menu there."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-03-08 21:40:16,"Thanks for working on this! There's a few bits to fix up...

>>! In D107533#3493091, @gregtatum wrote:
>   ""Mozilla Firefox > Help & Tutorials"" should become ""Mozilla Firefox > Get Help"" to be consistent with application menu label
> Done in: Bug 1689632

This isn't done - it requires changes to the default bookmarks, see https://bugzilla.mozilla.org/show_bug.cgi?id=1695671#c3 .
> 
>   The View > Toolbars > Bookmarks Toolbar items should become ""Always Show"", ""Only Show on New Tab"", ""Never Show""
> 
> This looks done to me. Is the ordering important?

Yes, but it's correct on current nightly, right?"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 21:26:40,"Reading up on https://docs.microsoft.com/en-us/windows/uwp/design/input/access-keys

I think the correct thing to do here would be to change the access key for ""Sync Now"" from ""S"" to ""y"", then use ""S"" for settings."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 21:15:04,What happens when all of the access keys are already taken? Can I duplicate it?
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 21:14:02,"""Restore All Tabs"" should become ""Reopen All Tabs""
Done in: Bug 1689378
  ""Restore All Windows"" should become ""Reopen All Windows""
Done in: Bug 1689378
  ""Mozilla Firefox > Help & Tutorials"" should become ""Mozilla Firefox > Get Help"" to be consistent with application menu label
Done in: Bug 1689632

  The View > Toolbars > Bookmarks Toolbar items should become ""Always Show"", ""Only Show on New Tab"", ""Never Show""

This looks done to me. Is the ordering important?"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-08 20:42:45,"Accesskey should be available in the label (S, e, t, ideally not i or g)"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-52tll3zmlcopd5aoarnv,2021-03-08 20:42:45,"Even if the change is minimal, we want it reflected in other languages, so we need a new ID for this one too."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 20:39:39,"Whoops, I didn't mean to send this one up."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 20:39:39,"This access key choice is weird, since all the other letters were taken. It does not work for me locally.

Steps to reproduce:
* Click ""Nightly"" in the menu bar
* Hit ""K"" on the keyboard.

Expected behavior:
* ""Settings"" will be highlighted

Actual behavior
* ""Quit Nightly"" is highlighted"
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 20:39:39,"Note this the shortcut is still cmd+shift+a, which doesn't really make as much sense anymore. I didn't change it."
107533,https://phabricator.services.mozilla.com/D107533,Bug 1695671 - Update strings in the global menubar,PHID-USER-hch2p624jejt4kddoqow,2021-03-08 20:39:39,"This is a stylistic change, so I did not rename the ID."
107483,https://phabricator.services.mozilla.com/D107483,"Bug 1696387 p2: Patch DWrite service manager APIs to force fallback to sandbox compatible code. r=jfkthame!,aklotz!",PHID-USER-h6jhxjwhmkm7ozvp7njc,2021-03-30 11:58:08,"Got tied up with other issues for a while.
Hopefully I'll be back to this fairly soon."
107483,https://phabricator.services.mozilla.com/D107483,"Bug 1696387 p2: Patch DWrite service manager APIs to force fallback to sandbox compatible code. r=jfkthame!,aklotz!",PHID-USER-autti2wxdumepz7idru4,2021-03-30 11:56:39,"Bob, did you have a chance to do any further testing here? Curious if you're able to detect any performance implications, or if it's irrelevant.

Marking this as ""request changes"" for now just as a reminder to look for any updated info, but feel free to send it back for review if you feel we're ready for that, even if unchanged."
107483,https://phabricator.services.mozilla.com/D107483,"Bug 1696387 p2: Patch DWrite service manager APIs to force fallback to sandbox compatible code. r=jfkthame!,aklotz!",PHID-USER-6rdibiwcq3nuj7op2com,2021-03-24 18:05:02,OK for setting the hooks themselves.
107483,https://phabricator.services.mozilla.com/D107483,"Bug 1696387 p2: Patch DWrite service manager APIs to force fallback to sandbox compatible code. r=jfkthame!,aklotz!",PHID-USER-h6jhxjwhmkm7ozvp7njc,2021-03-10 09:25:09,"I don't no, however this is how chromium handles things, but I guess that our code might interact with these things differently that do cause problems.

I've just re-read around this code a bit in chromium and it seems I might have been misled a little by this comment. It appears that there might be other issues, because chromium also has a [DWriteFontProxy](https://source.chromium.org/chromium/chromium/src/+/master:content/child/dwrite_font_proxy/dwrite_font_proxy_init_impl_win.cc;l=63;drc=23912460644e19c382c223d9115a290f7a4b5394) and a DWriteFontCollectionProxy, which communicate with the parent process and also cache information I think.
I'm not totally clear how this is related to the DWrite font cache service and its fallback, I'll look through some of the commits.

I've pushed this code to try and not seen any related failures.
I'll repush to make sure all the tests are run and do some performance testing as well."
107483,https://phabricator.services.mozilla.com/D107483,"Bug 1696387 p2: Patch DWrite service manager APIs to force fallback to sandbox compatible code. r=jfkthame!,aklotz!",PHID-USER-autti2wxdumepz7idru4,2021-03-09 20:29:30,"Do you have any sense of the performance implications of ""fallback to compatible code"" here? It sounds a bit worrying.... does it mean each content process having to individually duplicate a lot of work (and data) that is currently managed centrally by dwrite?"
107433,https://phabricator.services.mozilla.com/D107433,Bug 1696880 - Flush barrier tracer's buffer before preparing for tracing in pre-barrier verifier r?sfink,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-03-08 16:46:36,"Ah, yes, that's much better. I get it now, thanks."
107433,https://phabricator.services.mozilla.com/D107433,Bug 1696880 - Flush barrier tracer's buffer before preparing for tracing in pre-barrier verifier r?sfink,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-03-08 16:02:44,"Not marking r=me yet until I understand this a little better, either through an expanded comment or one of the code changes I mentioned."
107433,https://phabricator.services.mozilla.com/D107433,Bug 1696880 - Flush barrier tracer's buffer before preparing for tracing in pre-barrier verifier r?sfink,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-03-08 16:01:14,"I think this also needs a comment why it happens before `AutoPrepareForTracing`, because when reading through it, it sounds wrong -- it's tracing before it has prepared for tracing.

Which I find kind of confusing. Would it be possible to leave it in the previous order, and have the assertions skip the locking if heapState_ is `Tracing`? Or more directly, make it conditional on `AtomsTable::allPartitionsLocked`?

I guess here it's the constructor for `AtomsTable::AutoLock` in `atomIsPinned`, which is used outside of assertions too. So you'd have to either use `Maybe` and conditionally `emplace`, or do a big hammer and change https://searchfox.org/mozilla-central/rev/44695ef057e422a8d6c6056972bdf32766c36187/js/src/vm/JSAtom.cpp#345 to also test `allPartitionsLocked`. I don't understand the setup enough to know if this would be a Bad Idea (because it would encourage incorrect locking order elsewhere or something)."
107383,https://phabricator.services.mozilla.com/D107383,Bug 1694748 part 2 - Implement layout of ruby-position: alternate. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-03-09 21:10:34,"Two requests:

(1) It'd probably be useful for the example to have one additional level, just to check that it does actually alternate.

(I could imagine buggy implementations where `alternate over` might do `over` and then switch to `under` for all subsequent levels; so it'd be useful to test the full round-trip of the alternating behavior.)


(2) Once we've got three levels, there's one additional edge-case that'd be worth testing:  a scenario with three rtc elements having these values: `alternate over`, `under`, `alternate over`.

(I think that should produce ""over, under, over"" behavior as the result; but I could imagine an implementation that improperly only keeps track of the alternating state **for the rtc elements that explicitly have `alternate`**; that sort of bug/misinterpretation could instead produce ""over, under, under"" as the result, which would be wrong.)"
107383,https://phabricator.services.mozilla.com/D107383,Bug 1694748 part 2 - Implement layout of ruby-position: alternate. r?dholbert,PHID-USER-xumvt235xw6lumpq5yog,2021-03-09 21:10:34,This looks good! Just two requests for additional tests that would be nice to have.
107283,https://phabricator.services.mozilla.com/D107283,"Bug 1696527 - Remove unused 'JankLevel' code from nsRefreshDriver, r=Bas",PHID-APPS-PhabricatorHeraldApplication,2021-03-09 12:35:16,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
107233,https://phabricator.services.mozilla.com/D107233,"Bug 1639376 - nsXMLContentSink doesn't traverse mLastTextNode. r=smaug,mccr8",PHID-USER-zp4gy3jjzfehipsktf6x,2021-03-04 16:14:21,This hopefully fix our intermittent leaks in tests.
107233,https://phabricator.services.mozilla.com/D107233,"Bug 1639376 - nsXMLContentSink doesn't traverse mLastTextNode. r=smaug,mccr8",PHID-APPS-PhabricatorHeraldApplication,2021-03-04 15:55:45,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
107183,https://phabricator.services.mozilla.com/D107183,Bug 1696351 - Remove redundant nullptr checks of return value of infallible new in toolkit/mozapps/update. r=bytesized,PHID-APPS-PhabricatorHeraldApplication,2021-03-10 18:34:28,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
107183,https://phabricator.services.mozilla.com/D107183,Bug 1696351 - Remove redundant nullptr checks of return value of infallible new in toolkit/mozapps/update. r=bytesized,PHID-USER-ux2opawd2pljply62dgl,2021-03-05 08:34:44,">>! In D107183#3484583, @bytesized wrote:
> These files are used outside of Firefox, in their own standalone binary. Is its `new` also infallible? I don't actually know how we make `new` infallible, so I'm not sure how to check on this myself.

See my comment at https://phabricator.services.mozilla.com/D107184#3484388"
107183,https://phabricator.services.mozilla.com/D107183,Bug 1696351 - Remove redundant nullptr checks of return value of infallible new in toolkit/mozapps/update. r=bytesized,PHID-USER-woweonpcq5pacokkml6j,2021-03-04 18:19:56,"These files are used outside of Firefox, in their own standalone binary. Is its `new` also infallible? I don't actually know how we make `new` infallible, so I'm not sure how to check on this myself."
107133,https://phabricator.services.mozilla.com/D107133,Bug 1696181: Refactor canInline/shouldInline r=jandem,PHID-USER-ir4emeapesorzd6nq5ut,2021-03-04 09:40:40,Nice
107033,https://phabricator.services.mozilla.com/D107033,Bug 1696105 - Remove aBridge argument from RenderThread::HandleDeviceReset(),PHID-USER-cje4weq32o3xyuegalpj,2021-03-03 07:56:53,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3c277106b9f953e3f3597255213736d049f06655&selectedTaskRun=LmxXHchVTH2BzSF3TuO6uw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106981,https://phabricator.services.mozilla.com/D106981,Bug 1689413 part 11 - Update comments and JIT guards now that shape always implies proto. r?tcampbell!,PHID-USER-ir4emeapesorzd6nq5ut,2021-03-04 08:02:17,Remove comment as suggested
106981,https://phabricator.services.mozilla.com/D106981,Bug 1689413 part 11 - Update comments and JIT guards now that shape always implies proto. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-03-04 02:14:37,Nit: Remove this comment. No longer a possibility.
106981,https://phabricator.services.mozilla.com/D106981,Bug 1689413 part 11 - Update comments and JIT guards now that shape always implies proto. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-03-04 02:14:37,This is great and makes a lot of sense.
106981,https://phabricator.services.mozilla.com/D106981,Bug 1689413 part 11 - Update comments and JIT guards now that shape always implies proto. r?tcampbell!,PHID-USER-ir4emeapesorzd6nq5ut,2021-03-02 19:07:41,"I think we can simplify more in this area and align ReshapeForShadowedProp with ReshapeForProtoMutation, but we can do that as follow-up if this sticks..."
106930,https://phabricator.services.mozilla.com/D106930,Bug 1692821 - Migrate webaudio to browsertime desktop r?#perftest,PHID-APPS-PhabricatorHeraldApplication,2021-03-17 09:05:14,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
106880,https://phabricator.services.mozilla.com/D106880,Bug 1695807 - Mix blend image brush data should be RasterizationSpace::Screen. r=gw,PHID-USER-zp4gy3jjzfehipsktf6x,2021-03-02 12:17:57,more passes
106880,https://phabricator.services.mozilla.com/D106880,Bug 1695807 - Mix blend image brush data should be RasterizationSpace::Screen. r=gw,PHID-USER-vwnvk5tdutz5b677cmbw,2021-03-02 08:32:39,"We will investigate later if it is possible to make some sort of test for this one, but it may not necessarily be easy to make a wrench test to isolate it."
106880,https://phabricator.services.mozilla.com/D106880,Bug 1695807 - Mix blend image brush data should be RasterizationSpace::Screen. r=gw,PHID-APPS-PhabricatorHeraldApplication,2021-03-02 08:17:30,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
106880,https://phabricator.services.mozilla.com/D106880,Bug 1695807 - Mix blend image brush data should be RasterizationSpace::Screen. r=gw,PHID-USER-xb3xac3u7xrluxe37gts,2021-03-02 08:17:30,Let's land this and get it uplifted - but we should circle back and add a wrench test case for this!
106828,https://phabricator.services.mozilla.com/D106828,Bug 1695752 - Make RegisterThemeGeometry handle axis-aligned rectangles. r=mattwoodrow,PHID-APPS-PhabricatorHeraldApplication,2021-03-02 01:45:09,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
106828,https://phabricator.services.mozilla.com/D106828,Bug 1695752 - Make RegisterThemeGeometry handle axis-aligned rectangles. r=mattwoodrow,PHID-USER-cje4weq32o3xyuegalpj,2021-03-01 21:05:33,"Code analysis found 1 defect in the diff 406424:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p layout/painting/nsDisplayList.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/KF5EpVxoTfGk535ZM5YrWw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-5dld2rjjx5yx5rspjgbe.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/406424) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7289bee5778123bf673494c615877ffe7159de30)."
106677,https://phabricator.services.mozilla.com/D106677,"Bug 1694566 - P1: Allow seamless parent/child retrieval across processes. r?Jamie,morgan",PHID-USER-cje4weq32o3xyuegalpj,2021-03-03 05:10:55,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=eb33eadd94717868a2d0cb555aca2124346d6555&selectedTaskRun=FMX7vUI7RCmgFzRr9ObM3w-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106677,https://phabricator.services.mozilla.com/D106677,"Bug 1694566 - P1: Allow seamless parent/child retrieval across processes. r?Jamie,morgan",PHID-USER-or4wqoxtk6qaerrbbjxa,2021-03-01 02:07:31,"On Windows, we currently have this horrible hack in OuterDocAccessible::LocalChildAt which returns a ProxyAccessibleWrap. That should be removed eventually, but in the interim, I think we need to handle it here. We need to check `result->IsProxy()` and either:

1. Don't return `result` if it's a proxy; i.e. fall through to `RemoteChildDoc()`; or
2. If it's a proxy, return `result->Proxy()`.

I have a slight preference for 1), even though it's technically a bit redundant, because it keeps this new code path the same on all platforms.

A third option could be to call AccessibleWrap::LocalChildAt instead of OuterDocAccessible::LocalChildAt."
106627,https://phabricator.services.mozilla.com/D106627,"Bug 1654112: Get tsan build working, and get wpt running under tsan (still needs some race fixes).",PHID-USER-5imfqbjzbqyocyfuyykx,2021-10-07 09:28:00,This was backed out: https://hg.mozilla.org/projects/elm/rev/b66ab45e0d6cc6ae7135dd8791cba04e763f31f3
106576,https://phabricator.services.mozilla.com/D106576,Bug 1668913 - Audit usages of ScaleFactors2D::ToScaleFactor(). r=botond,PHID-USER-n65mahsof3iw653q75na,2021-02-27 21:17:15,"Testing comment: technically this change could be observable in some edge-case scenarios, but we don't have a test case available to exercise it."
106576,https://phabricator.services.mozilla.com/D106576,Bug 1668913 - Audit usages of ScaleFactors2D::ToScaleFactor(). r=botond,PHID-APPS-PhabricatorHeraldApplication,2021-02-27 21:15:38,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
106576,https://phabricator.services.mozilla.com/D106576,Bug 1668913 - Audit usages of ScaleFactors2D::ToScaleFactor(). r=botond,PHID-USER-n65mahsof3iw653q75na,2021-02-27 21:15:38,Looks good! Thanks for your patience through several rounds of review :)
106576,https://phabricator.services.mozilla.com/D106576,Bug 1668913 - Audit usages of ScaleFactors2D::ToScaleFactor(). r=botond,PHID-USER-n65mahsof3iw653q75na,2021-02-26 19:16:12,"We can place the comment on its own line just before, to avoid the awkward formatting.

(This applies to all the places where we add a comment in the patch.)"
106576,https://phabricator.services.mozilla.com/D106576,Bug 1668913 - Audit usages of ScaleFactors2D::ToScaleFactor(). r=botond,PHID-USER-n65mahsof3iw653q75na,2021-02-26 19:16:12,"Thanks, the patch looks pretty good! I have just one comment about formatting.

By the way, I'm not sure how you're submitting these patches that it creates a new Phabricator review request each time and old ones need to be abandoned. If you make changes, amend them into the commit with `hg commit --amend`, and then run `moz-phab submit`, it should update the existing review request."
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-cje4weq32o3xyuegalpj,2021-03-04 11:29:06,"Code analysis found 1 defect in the diff 408224:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/408224) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5d9df6e47f42b8d1924effad5ffbb01a56f97941)."
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-cje4weq32o3xyuegalpj,2021-03-04 02:52:31,"Code analysis found 1 defect in the diff 408058:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=34ddb955ad4e6a184c5bb8bf5d1e080ec49435f3&selectedTaskRun=NqVmJQn0RH-yZ1vIN3i_LA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/408058) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=34ddb955ad4e6a184c5bb8bf5d1e080ec49435f3)."
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-cje4weq32o3xyuegalpj,2021-03-02 23:09:31,"Code analysis found 1 defect in the diff 407374:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/407374) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=bb641b1b1795761202b08428849139b938b0c26e)."
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-4bmd7d25nix2m4x6y6uw,2021-03-01 20:46:47,No I think you're right. Thanks for the explanation tho. I didn't have the .scope() assert in mind.
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-t7rrwic32p6puhrsznwc,2021-03-01 19:59:01,"Two reasons:

- I saw that the next line calls .scope() on the environment, and I know that method asserts that `*this` is not extensible. (It stands to reason that a global or non-syntactic lexical environment won't have a static scope.) So I had a pretty strong hunch.

- This method `.takeFrameSnapshot()` is called from the `onPop` methods below, when popping an environment, to take a snapshot of the unaliased local variables. We don't need to do that for global or non-syntactic lexical environments (those never contain any bindings that are considered ""unaliased""), and so [[ https://searchfox.org/mozilla-central/rev/26330a08b1f9d06938faa0aa5e0f8c7a58064aa2/js/src/vm/Interpreter.cpp#997-1000 | we don't call into the debugger ]] for those cases.

Should I add a commnt? I think this one of those cases where the change is indeed unobvious, but adding a comment would not help reading the code later; your call, though!"
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-4bmd7d25nix2m4x6y6uw,2021-02-25 22:37:50,This one I get why the change is safe; its clear from the associated scope kind it needs to be a BlockLexicalEnvironment.
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-4bmd7d25nix2m4x6y6uw,2021-02-25 22:37:50,"{nav,  icon=question-circle, name=question:} I don't follow this change; why can we safely ignore the extensible lexical environment branch of the subclasses here?"
106522,https://phabricator.services.mozilla.com/D106522,Bug 1688055 - Part 5: Factor out BlockLexicalEnvironmentObject subclass from LexicalEnvironmentObject. r=mgaudet,PHID-USER-cje4weq32o3xyuegalpj,2021-02-25 20:24:25,"Code analysis found 1 defect in the diff 405072:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/405072) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=3f557f38e0bd242ad2385094e8315ced7f0851b4)."
106472,https://phabricator.services.mozilla.com/D106472,Bug 1692178 - Android Jit tests: Only push jit-test tests files.,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-26 11:01:07,"Works for me. Including files from js/src/tests/ in jit-tests is weird, but that's pre-existing.

Great find and improvement!"
106472,https://phabricator.services.mozilla.com/D106472,Bug 1692178 - Android Jit tests: Only push jit-test tests files.,PHID-USER-feptxo7ei2kymsj45spd,2021-02-25 18:37:14,">>! In D106472#3456984, @jandem wrote:
> Doesn't this break tests that do this: https://searchfox.org/mozilla-central/rev/df23c6e58c6be1eb8399e475878f73d4867bef87/js/src/jit-test/tests/basic/hypot-approx.js#1 ?
> 
> Maybe we can move these to a shared folder?

It does brake these tests, I am fixing it as I see these on try.
I will re-ask for review once try is green."
106472,https://phabricator.services.mozilla.com/D106472,Bug 1692178 - Android Jit tests: Only push jit-test tests files.,PHID-USER-feptxo7ei2kymsj45spd,2021-02-25 16:24:35,"(not working yet, `tests/tests/lib/../../tests/non262/shell.js` is required)"
106472,https://phabricator.services.mozilla.com/D106472,Bug 1692178 - Android Jit tests: Only push jit-test tests files.,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-25 15:03:28,"Doesn't this break tests that do this: https://searchfox.org/mozilla-central/rev/df23c6e58c6be1eb8399e475878f73d4867bef87/js/src/jit-test/tests/basic/hypot-approx.js#1 ?

Maybe we can move these to a shared folder?"
106422,https://phabricator.services.mozilla.com/D106422,Bug 1241602 - Typo fix.,PHID-USER-7hxjutcooeszod3rg3dr,2021-02-25 13:39:31,"Ah, this was a typo in the other patch.
I was wondering how this could have worked. :)"
106372,https://phabricator.services.mozilla.com/D106372,Bug 1694853 - Replace outdated 'in' prefix with the more common 'a' prefix. r=harry,PHID-USER-cje4weq32o3xyuegalpj,2021-03-04 00:12:51,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ba9ac3101b45ba3fc7dd728bbe6cbf7293fe3011&selectedTaskRun=Tz064BrtQk6xmP_s72CIXw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106321,https://phabricator.services.mozilla.com/D106321,Bug 1693870 - Move menulistSelect out of CalendarUtils and into ItemEditingHelpers. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-02-25 01:30:56,And this one.
106321,https://phabricator.services.mozilla.com/D106321,Bug 1693870 - Move menulistSelect out of CalendarUtils and into ItemEditingHelpers. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-02-25 01:30:56,Please alphabetise this list.
106321,https://phabricator.services.mozilla.com/D106321,Bug 1693870 - Move menulistSelect out of CalendarUtils and into ItemEditingHelpers. r?darktrojan,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-02-25 01:30:56,Minor changes then you're good to go.
106270,https://phabricator.services.mozilla.com/D106270,Bug 1683305 - Remove use of valign attribute in XUL boxes. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-25 13:41:01,please put the align on the same row as the hbox here since it all fits very well on one line
106270,https://phabricator.services.mozilla.com/D106270,Bug 1683305 - Remove use of valign attribute in XUL boxes. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-25 13:41:01,"Looks good! r=mkmelin
Once you've made the small change, please set the ""checkin-needed-tb"" keyword on the bug."
106270,https://phabricator.services.mozilla.com/D106270,Bug 1683305 - Remove use of valign attribute in XUL boxes. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-24 20:27:58,"The patch needs to be rebased, but other than that looks good"
106270,https://phabricator.services.mozilla.com/D106270,Bug 1683305 - Remove use of valign attribute in XUL boxes. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-24 11:47:59,"You can put ""r=mkmelin"" at the end of the first line to have phabricator flag me for review."
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-25 00:06:35,Remove pub from to_f32().
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-25 00:03:10,OK.
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-25 00:01:51,Can we not make this one public?
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-24 19:15:13,try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=d83e66e31531cae38bd839bc98806bc97be0e6fe
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-24 19:07:12,Update title and #[inline]
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-24 19:00:54,OK. I would like to add `to_f32(&self)` into `impl Ratio` because `ComputeSquaredDistance` also needs it. And also I can just reuse the `new` function here.
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-24 19:00:54,Yes. For now I think f32 is enough. I will change this to use f32.
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-laiy2eaopxzo3vm6tath,2021-02-24 19:00:47,Addressed comments and add ComputeSquaredDistance for testing
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-24 00:29:20,"I guess you don't really even need the opposite actually, since you just have one use case for `f64 -> Ratio` (the return of the function)."
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-24 00:28:20,"Just `v.0.get()` and `v.1.get()`?

Also do we really need to do double rather than regular float math? I guess it doesn't matter much either way."
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-24 00:28:20,"Given we only want these from the interpolation code I'd rather just define two functions inside `fn animate` so:

```
fn ratio_to_f64(r: &Ratio) -> f64 {
    // ...
}
```

And the opposite. Otherwise we allow random `.into()`s from other code that have no reason to do this."
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-24 00:28:20,Just `is_degenerate`?
106219,https://phabricator.services.mozilla.com/D106219,Bug 1670155 - Implement Animate trait and ComputeSquaredDistance trait for <ratio>.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-24 00:28:20,"Just relatively minor nits, feel free to re-request review if you disagree with any of them or they don't make sense to you :)"
106167,https://phabricator.services.mozilla.com/D106167,Bug 1694392 NSS does not work with PKCS #11 modules not supporting profiles,PHID-USER-b2euvrp5lfxwlndbtc3j,2021-02-23 23:34:35,We have a couple of HSM that or now failing on this code.
106117,https://phabricator.services.mozilla.com/D106117,Bug 1693541 - Improve uses of nsBaseHashtable and descendants and avoid multiple subsequent lookups in intl/locale. r=jfkthame,PHID-USER-cje4weq32o3xyuegalpj,2021-02-26 10:13:51,"For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/BMlc-a9sQMWHgCGJavViwQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-x7lgephubzkvhgysdm5x.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=811ddd5ebc411147bdb0c605e879a70f2d0379c3&selectedTaskRun=KJLm2ttxTY2w_Xg-eBFpEA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=811ddd5ebc411147bdb0c605e879a70f2d0379c3&selectedTaskRun=fN3YwY2lSEW5DJuQMrqkig-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106117,https://phabricator.services.mozilla.com/D106117,Bug 1693541 - Improve uses of nsBaseHashtable and descendants and avoid multiple subsequent lookups in intl/locale. r=jfkthame,PHID-USER-cje4weq32o3xyuegalpj,2021-02-25 14:54:45,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2e8a8808c294d973b6960311b425c831c745f0d2&selectedTaskRun=MO75HAHcSwGeqGhHJyOGQw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2e8a8808c294d973b6960311b425c831c745f0d2&selectedTaskRun=cCWaLEd6QmCAIv_44sNbBg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106117,https://phabricator.services.mozilla.com/D106117,Bug 1693541 - Improve uses of nsBaseHashtable and descendants and avoid multiple subsequent lookups in intl/locale. r=jfkthame,PHID-USER-cje4weq32o3xyuegalpj,2021-02-25 10:29:58,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8aafc50ed9e80058554c9b4381debe7615c07f36&selectedTaskRun=WhQcZEeiTHOXQf1qYTWcNA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8aafc50ed9e80058554c9b4381debe7615c07f36&selectedTaskRun=cv1t4aGkSCqafeikZc8Now-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106117,https://phabricator.services.mozilla.com/D106117,Bug 1693541 - Improve uses of nsBaseHashtable and descendants and avoid multiple subsequent lookups in intl/locale. r=jfkthame,PHID-USER-cje4weq32o3xyuegalpj,2021-02-24 19:01:04,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=676a5e14daad1ed60a337fab7ff6010c336033bb&selectedTaskRun=JT-GHDVnQFyvIDgm4AGxug-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=676a5e14daad1ed60a337fab7ff6010c336033bb&selectedTaskRun=dQEKo9BLTAWGwMInh8kH7w-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106117,https://phabricator.services.mozilla.com/D106117,Bug 1693541 - Improve uses of nsBaseHashtable and descendants and avoid multiple subsequent lookups in intl/locale. r=jfkthame,PHID-USER-cje4weq32o3xyuegalpj,2021-02-23 18:16:07,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cdb4435af4142087bdede29a280c1884a7c41fbe&selectedTaskRun=B7HX7mUHSMWwLv81swTntw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cdb4435af4142087bdede29a280c1884a7c41fbe&selectedTaskRun=Fn7vhn9-Ql-7pB0GHXxCGw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106067,https://phabricator.services.mozilla.com/D106067,Bug 1694324 - Use in-tree autoconf in make-source-package.,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-02-23 15:16:47,Thank you!
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-02-24 21:58:47,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f13e52108f7f7c8932a5f1302e6e161419d08018&selectedTaskRun=Aank8wxORwq9KyvF9OFhZw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-4jlttcsengdawi5jugb4,2021-02-23 11:06:23,"You'll need to rebase this patch, at least the dom/ipc/PBrowser.ipdl part doesn't apply cleanly for me on a current central tree."
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-02-23 00:27:37,Looks reasonable.
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-02-22 19:46:15,"Code analysis found 1 defect in the diff 402890:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/402890) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4fd9a26f7522fda7ddb78dc709ec508630fdc44b)."
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-cje4weq32o3xyuegalpj,2021-02-22 19:38:37,"Code analysis found 1 defect in the diff 402884:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/402884) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b96af1db480a023c3080ec42a6cf17f4ee4d1796)."
106016,https://phabricator.services.mozilla.com/D106016,Bug 1694229 - Separate Enter/Exit Widget Events from Mouse Button events r?smaug,PHID-USER-vk66rnpoi4ww7y3tirt5,2021-02-22 19:29:22,Just realized I need to update `nsContentUtils::IsMessageInputEvent`
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-03-04 11:07:02,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=209d79f1ba1360ab8f942aac64a3280b612159b6&selectedTaskRun=Bv-Zh8ioQs20DfjcfPteyg-1) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-03-02 18:40:44,"You have touched the documentation in diff 407158, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/99c64f42-7b82-11eb-974c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-03-02 09:38:17,"You have touched the documentation in diff 406743, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/47f47c92-7b38-11eb-9249-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-02-25 16:18:24,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1cf156abaf75be6c5204a2169c279dda027cbcac&selectedTaskRun=EM9Fm3wuSeanPzlTbBXUqQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1cf156abaf75be6c5204a2169c279dda027cbcac&selectedTaskRun=PNTDjNuXTX2pDtyoZOiHug-0) failed, but we could not detect any issue.
Please check this task manually.

You have touched the documentation in diff 404765, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/63508166-7778-11eb-b27c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-02-25 12:18:24,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=34e6f80575d102f51e7dbf567f3cc3887543b002&selectedTaskRun=G7odTDvpRwqEYPOvs7A6Zw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=34e6f80575d102f51e7dbf567f3cc3887543b002&selectedTaskRun=eLJnq_SgTSeIX4sLNDLA3g-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-02-23 14:07:04,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc54025119e590267648ec6ab599aaeaebf571f7&selectedTaskRun=FrWGJP9bQqGYeR2c4tjwFA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fc54025119e590267648ec6ab599aaeaebf571f7&selectedTaskRun=eEF8z47GQ02jCSgwH_u4Tg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-02-22 19:39:31,"Code analysis found 1 defect in the diff 402858:
 - 1 defect found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/RLgHFt1AQpyTFpK-XN-Iwg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-kxorfmemve6roxul7edx.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=11408759d92f75495677a09a36421529efefd34e&selectedTaskRun=Qp2Cp7CPRWGy0vme2gXKSQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=11408759d92f75495677a09a36421529efefd34e&selectedTaskRun=RoQ2OlUMQN2gFpwNYmRYLA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/402858) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=11408759d92f75495677a09a36421529efefd34e)."
105965,https://phabricator.services.mozilla.com/D105965,Bug 1634281 - Use nsTHashMap for nsBaseHashtable/nsDataHashtable uses with UniquePtr data type. r=#xpcom-reviewers,PHID-USER-cje4weq32o3xyuegalpj,2021-02-22 15:59:50,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ef210ffdcffd0cf043f0419cee7bc099c1837d70&selectedTaskRun=RZ_kt9BZRTq9XoNRkTRWcg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ef210ffdcffd0cf043f0419cee7bc099c1837d70&selectedTaskRun=byhayHR-QVWgqSZMzTi22Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105915,https://phabricator.services.mozilla.com/D105915,Bug 1693611 - Part 4: Rename StencilXDR::SharedData to StencilXDR::codeSharedData.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-03 07:07:15,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=bb227efaf61ec8452b7406477e12756c54c7e6f3&selectedTaskRun=Q2UcTg6KSayj6WLK_k54Xw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
105865,https://phabricator.services.mozilla.com/D105865,Bug 1693979 - Reduce the size of notification bars. r=jaws,PHID-APPS-PhabricatorHeraldApplication,2021-02-22 12:37:07,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105811,https://phabricator.services.mozilla.com/D105811,Bug 1693832 - Tweak repack_rust build config. r?glandium,PHID-APPS-PhabricatorHeraldApplication,2021-02-26 05:42:08,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105811,https://phabricator.services.mozilla.com/D105811,Bug 1693832 - Tweak repack_rust build config. r?glandium,PHID-USER-7nex5aeqnqfpycmmgc7g,2021-02-26 05:42:08,"I'd split this in two patches, but :shrug:"
105761,https://phabricator.services.mozilla.com/D105761,Bug 1691622 - part 7: Merge `synthesizeNativeMouseMove*` with `synthesizeNativeMouseEvent*` r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-02-19 19:19:28,"clientX/Y are there again. Please check and replace with offsetX/Y or some such, whatever the earlier patches will use."
105711,https://phabricator.services.mozilla.com/D105711,Bug 1693714 - Restore selector that applies an animation to background tabs when dragging a tab within the tabstrip.,PHID-APPS-PhabricatorHeraldApplication,2021-02-19 13:59:46,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105659,https://phabricator.services.mozilla.com/D105659,Bug 1677474 - Part 2: Refine AdjustWindowFocus IPC flow;,PHID-USER-p7a62wknonfqkih2zlnc,2021-03-01 20:36:33,rebase
105659,https://phabricator.services.mozilla.com/D105659,Bug 1677474 - Part 2: Refine AdjustWindowFocus IPC flow;,PHID-USER-npafn5pqzod6ajehd4m3,2021-02-24 12:26:56,Tests in the next part of the patch series.
105659,https://phabricator.services.mozilla.com/D105659,Bug 1677474 - Part 2: Refine AdjustWindowFocus IPC flow;,PHID-USER-p7a62wknonfqkih2zlnc,2021-02-22 13:55:32,"We need this change is because of D104538 where we would like to use  `mFocusedBrowsingContextInContent` as a condition of whether we should perform blur steps to trigger blur event.
In a simple case, e.g. `a.com` contains an iframe `b.com`, it works good, since we notify `a.com` to adjustWindowFocus before `mFocusedBrowsingContextInContent` gets updated.

However, in two-level nested case, e.g. `a.com` contains an iframe `b.com` and `b.com` contains an iframe `c.com`, currently it requires bouncing IPC twice to notify `a.com` adjustWindowFocus, and `mFocusedBrowsingContextInContent` already get updated, then it ends up doesn't trigger blur event correctly on `a.com`.

So this patch tries to refine the IPC flow to make the content process could be notified adjustWindowFocus sooner as possible in the nested case by notifying process of b.com
and a.com at the same time in the parent process. This should not change the behavior."
105609,https://phabricator.services.mozilla.com/D105609,Bug 1264117 - Limit length of hostnames to 253 characters r=nhnt11,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-02-19 16:53:51,Fix test for socket process
105609,https://phabricator.services.mozilla.com/D105609,Bug 1264117 - Limit length of hostnames to 253 characters r=nhnt11,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-02-18 13:47:35,"I think ChannelListener doesn't really do any assertions when the test passes in this case? Only if it fails. Maybe I misread it, but in any case, I think adding an info() here after the promise resolves would be nice."
105609,https://phabricator.services.mozilla.com/D105609,Bug 1264117 - Limit length of hostnames to 253 characters r=nhnt11,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-02-18 13:47:35,Thanks!
105609,https://phabricator.services.mozilla.com/D105609,Bug 1264117 - Limit length of hostnames to 253 characters r=nhnt11,PHID-USER-hx3hxosxsmjdkmsh7ozv,2021-02-18 13:14:19,Add tests
105609,https://phabricator.services.mozilla.com/D105609,Bug 1264117 - Limit length of hostnames to 253 characters r=nhnt11,PHID-USER-oxzqolgjw7bhoaqeggzz,2021-02-18 12:43:32,Please add a test to check that names longer than 253 chars do indeed fail lookup if this pref is true.
105558,https://phabricator.services.mozilla.com/D105558,"Bug 1663757 - Part 3: Start sending web progress events in oop subframes,",PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-02 15:42:16,later patch in the stack
105558,https://phabricator.services.mozilla.com/D105558,"Bug 1663757 - Part 3: Start sending web progress events in oop subframes,",PHID-APPS-PhabricatorHeraldApplication,2021-02-24 00:59:14,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105458,https://phabricator.services.mozilla.com/D105458,Bug 1670055 - Part 1: Update test262. r=yulia!,PHID-APPS-PhabricatorHeraldApplication,2021-02-17 16:42:18,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105458,https://phabricator.services.mozilla.com/D105458,Bug 1670055 - Part 1: Update test262. r=yulia!,PHID-USER-di72flp7skudvz2tfaw6,2021-02-17 16:42:18,"Looks good (though i didn't look at every test carefully, since this is a sync update)"
105408,https://phabricator.services.mozilla.com/D105408,Bug 1691878. Make one bit of test_layerization.html loop until it passes. r?botond,PHID-USER-cje4weq32o3xyuegalpj,2021-02-18 09:57:17,"Code analysis found 3 defects in the diff 401371:
 - 3 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/401371) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=915b357bc84adb07ee51a03201f636ed74483e45)."
105408,https://phabricator.services.mozilla.com/D105408,Bug 1691878. Make one bit of test_layerization.html loop until it passes. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-02-18 01:57:02,we can do `ok(true)` inside the if
105408,https://phabricator.services.mozilla.com/D105408,Bug 1691878. Make one bit of test_layerization.html loop until it passes. r?botond,PHID-USER-n65mahsof3iw653q75na,2021-02-18 01:57:02,can not happen --> may not happen?
105408,https://phabricator.services.mozilla.com/D105408,Bug 1691878. Make one bit of test_layerization.html loop until it passes. r?botond,PHID-USER-cje4weq32o3xyuegalpj,2021-02-17 04:34:27,"Code analysis found 3 defects in the diff 400794:
 - 3 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/400794) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f58e3e5a5bd736c8dc54ad617bab9cee4ab289ab)."
105358,https://phabricator.services.mozilla.com/D105358,Bug 1692720 - Don't force extension for office mime types. r?Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-02-17 11:11:27,">>! In D105358#3424682, @evilpie wrote:
> I guess we just haven't run into any issues yet because they are less used nowdays.
> 
> The in-tree rust library has a lot of different extensions for the old Office Excel format: https://searchfox.org/mozilla-central/rev/0379f315c75a2875d716b4f5e1a18bf27188f1e6/third_party/rust/mime_guess/src/mime_types.rs#1410

Ugh.

> I think OpenDocument might not have this many different extensions however.

Well, let's err on the side of caution and take at least the legacy office stuff out, too? Ensuring the correct extension was set was a nice idea but it's clear it's not working out very well. :-("
105358,https://phabricator.services.mozilla.com/D105358,Bug 1692720 - Don't force extension for office mime types. r?Gijs,PHID-USER-fduxg2tcrifvhhmgrazn,2021-02-17 11:01:29,"I guess we just haven't run into any issues yet because they are less used nowdays.

The in-tree rust library has a lot of different extensions for the old Office Excel format: https://searchfox.org/mozilla-central/rev/0379f315c75a2875d716b4f5e1a18bf27188f1e6/third_party/rust/mime_guess/src/mime_types.rs#1410

I think OpenDocument might not have this many different extensions however."
105358,https://phabricator.services.mozilla.com/D105358,Bug 1692720 - Don't force extension for office mime types. r?Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-02-16 21:18:35,"Are we more confident about the other office and opendocument types? I'm somewhat minded to drop all of them, it's clear people on the internet can't do mimetypes correctly, sooo...

(there are existing tests for this stuff)"
105308,https://phabricator.services.mozilla.com/D105308,Bug 1670261 - Initialize dynamic Glean,PHID-USER-cje4weq32o3xyuegalpj,2021-02-16 14:44:54,"Code analysis found 1 defect in the diff 400383:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=28e35de3c0fcd061efd75c705cbf49c4327c5536&selectedTaskRun=CiTkUmRjQROXqZOcaSuyPg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=28e35de3c0fcd061efd75c705cbf49c4327c5536&selectedTaskRun=UdJOQFErQ22-k4iSurO4-Q-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=28e35de3c0fcd061efd75c705cbf49c4327c5536&selectedTaskRun=ZVDEovpzQo2Ca1gnEMcNwg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/400383) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=28e35de3c0fcd061efd75c705cbf49c4327c5536)."
105258,https://phabricator.services.mozilla.com/D105258,Bug 1691935 - Fix and test context menu Save Image As. r?mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-16 10:11:58,Thanks for the test! r=mkmelin
105208,https://phabricator.services.mozilla.com/D105208,Bug 1692876 - Part 7: Use fixed- instead of reserved-slot accessors for SharedArrayObject. r=jandem!,PHID-USER-2gujohlr3u3puvz4jmvz,2021-02-16 08:31:15,"#check-in_needed handled, landing queued."
105208,https://phabricator.services.mozilla.com/D105208,Bug 1692876 - Part 7: Use fixed- instead of reserved-slot accessors for SharedArrayObject. r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-02-16 08:17:59,Try: https://treeherder.mozilla.org/jobs?repo=try&revision=12a5297c34d17c119cedf7095b09d173e3922892
105208,https://phabricator.services.mozilla.com/D105208,Bug 1692876 - Part 7: Use fixed- instead of reserved-slot accessors for SharedArrayObject. r=jandem!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-16 07:46:44,Nice cleanups!
105158,https://phabricator.services.mozilla.com/D105158,Bug 1519636 - Reformat recent changes to the Google coding style r?andi,PHID-USER-f4ru6vjyhiosmt2qmdi2,2021-02-15 07:52:21,"Don’t add the extra parenthesis, please."
105158,https://phabricator.services.mozilla.com/D105158,Bug 1519636 - Reformat recent changes to the Google coding style r?andi,PHID-USER-cje4weq32o3xyuegalpj,2021-02-15 07:41:46,"Code analysis found 3 defects in the diff 399839:
 - 1 defect found by code coverage analysis
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/399839) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=efe00475fe34548669842c854d497921cc8d9154)."
105057,https://phabricator.services.mozilla.com/D105057,"Bug 1692570 - Allow failure jobs to handle timeouts and crashes for browser-chrome, mochitest, xpcshell. r=#releng-reviewers",PHID-USER-mefa72mp4kzwenywt7gj,2021-02-22 18:55:43,"updated to not break remote tests, although do not support remote tests with failure jobs at the moment"
105057,https://phabricator.services.mozilla.com/D105057,"Bug 1692570 - Allow failure jobs to handle timeouts and crashes for browser-chrome, mochitest, xpcshell. r=#releng-reviewers",PHID-APPS-PhabricatorHeraldApplication,2021-02-22 14:25:54,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
105057,https://phabricator.services.mozilla.com/D105057,"Bug 1692570 - Allow failure jobs to handle timeouts and crashes for browser-chrome, mochitest, xpcshell. r=#releng-reviewers",PHID-USER-mefa72mp4kzwenywt7gj,2021-02-20 00:41:56,updated for review feedback
105057,https://phabricator.services.mozilla.com/D105057,"Bug 1692570 - Allow failure jobs to handle timeouts and crashes for browser-chrome, mochitest, xpcshell. r=#releng-reviewers",PHID-USER-b22gfzqtftqf7qpp3a3k,2021-02-17 21:30:31,"Per our discussion on Matrix, this is going to be split out to avoid conflating ""run failures"" with ""pretend time outs are passes""."
105005,https://phabricator.services.mozilla.com/D105005,Bug 1692228 - Send exposure for New Tab Feature,PHID-USER-wbnyz3tcqayarugxsdd2,2021-02-17 13:13:20,"looks good, thanks!"
105005,https://phabricator.services.mozilla.com/D105005,Bug 1692228 - Send exposure for New Tab Feature,PHID-USER-wbnyz3tcqayarugxsdd2,2021-02-15 19:39:01,`TypeError: newtabExperimentFeature.ready is not a function`
105005,https://phabricator.services.mozilla.com/D105005,Bug 1692228 - Send exposure for New Tab Feature,PHID-USER-wbnyz3tcqayarugxsdd2,2021-02-15 19:39:01,Not needed anymore this should be false by default.
105005,https://phabricator.services.mozilla.com/D105005,Bug 1692228 - Send exposure for New Tab Feature,PHID-USER-dzwflhn6vv2l3fub734z,2021-02-12 13:41:43,Wait for ready
104905,https://phabricator.services.mozilla.com/D104905,"Bug 1692224 - Use standins for system colors pairs that paint over non-native theme widgets to guarantee contrast. r=spohl,mstange",PHID-USER-sasiqhjk3rmprfyixaj6,2021-02-12 01:54:03,"I got one bit wrong in the final function. It should be:

```
// As separate function:
bool ShouldUseStandinsForNativeColors(aDoc, aID) {
  if (ColorIsNotCSSAccessible(aID)) {
    // XXX what does it mean for a color to be accessible?
    // XXX why is the function written in the negative?
    // XXX why do non-accessible colors disable standin colors?
    return false;
  }
  if (aDoc.ShouldAvoidNativeTheme() && IsFormControlTextColor(aID)) {
    // Use standin colors which are known to work well with the non-native theme.
    return true;
  }
  if (nsContentUtils::UseStandinsForNativeColors() && !nsContentUtils::IsChromeDoc(aDoc)) {
    // Use standin colors for non-chrome docs if requested.
    return true;
  }
  // Use native colors.
  return false;
}
```"
104905,https://phabricator.services.mozilla.com/D104905,"Bug 1692224 - Use standins for system colors pairs that paint over non-native theme widgets to guarantee contrast. r=spohl,mstange",PHID-USER-sasiqhjk3rmprfyixaj6,2021-02-12 01:49:23,"ok let me try to break this down

```
bool useStandinsForNativeColors =
  (aUseStandinsForNativeColors && ColorIsNotCSSAccessible(aID)) ? false : aUseStandinsForNativeColors;

// equivalent to

bool useStandinsForNativeColors = aUseStandinsForNativeColors && !ColorIsNotCSSAccessible(aID);

// expand aUseStandinsForNativeColors

bool useStandinsForNativeColors =
  (
    ShouldUseStandinsForNativeColorForNonNativeTheme(aDoc, aID) ||
    (
      nsContentUtils::UseStandinsForNativeColors() &&
      !nsContentUtils::IsChromeDoc(aDoc)
    )
  ) &&
  !ColorIsNotCSSAccessible(aID);

// expand ShouldUseStandinsForNativeColorForNonNativeTheme(aDoc, aID) as !aDoc.ShouldAvoidNativeTheme() ? false : IsFormControlTextColor(aID)

bool useStandinsForNativeColors =
  (
    (!aDoc.ShouldAvoidNativeTheme() ? false : IsFormControlTextColor(aID)) ||
    (
      nsContentUtils::UseStandinsForNativeColors() &&
      !nsContentUtils::IsChromeDoc(aDoc)
    )
  ) &&
  !ColorIsNotCSSAccessible(aID);

// equivalent to

bool useStandinsForNativeColors =
  (
    (aDoc.ShouldAvoidNativeTheme() && IsFormControlTextColor(aID)) ||
    (
      nsContentUtils::UseStandinsForNativeColors() &&
      !nsContentUtils::IsChromeDoc(aDoc)
    )
  ) &&
  !ColorIsNotCSSAccessible(aID);

```

```
// Or, as a separate function:
bool ShouldUseStandinsForNativeColors(aDoc, aID) {
  if (!ColorIsNotCSSAccessible(aID)) {
    // XXX what does it mean for a color to be accessible?
    // XXX why is the function written in the negative?
    // XXX why do accessible colors disable standin colors?
    return false;
  }
  if (aDoc.ShouldAvoidNativeTheme() && IsFormControlTextColor(aID)) {
    // Use standin colors which are known to work well with the non-native theme.
    return true;
  }
  if (nsContentUtils::UseStandinsForNativeColors() && !nsContentUtils::IsChromeDoc(aDoc)) {
    // Use standin colors for non-chrome docs if requested.
    return true;
  }
  // Use native colors.
  return false;
}
```"
104905,https://phabricator.services.mozilla.com/D104905,"Bug 1692224 - Use standins for system colors pairs that paint over non-native theme widgets to guarantee contrast. r=spohl,mstange",PHID-USER-3lar5dde6tl6jsiuxh6j,2021-02-12 00:05:14,Thank you!
104855,https://phabricator.services.mozilla.com/D104855,Bug 1688096 - Part 2. Add flag to CompositorOptions to allow SW-WR on a per widget basis.,PHID-USER-a7qiaocstw5yktfdzqpx,2021-02-18 11:49:28,Mixed compositors is only used in limited situations.
104855,https://phabricator.services.mozilla.com/D104855,Bug 1688096 - Part 2. Add flag to CompositorOptions to allow SW-WR on a per widget basis.,PHID-APPS-PhabricatorHeraldApplication,2021-02-17 22:34:26,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104805,https://phabricator.services.mozilla.com/D104805,Bug 1692162: Support large buffers in TypedArray.prototype.subarray(). r=jandem!,PHID-USER-2gujohlr3u3puvz4jmvz,2021-02-11 11:32:53,"#check-in_needed handled, landing queued."
104805,https://phabricator.services.mozilla.com/D104805,Bug 1692162: Support large buffers in TypedArray.prototype.subarray(). r=jandem!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-02-11 11:24:49,Try: https://treeherder.mozilla.org/jobs?repo=try&revision=d5db8698e1677afed1104f97b756c1dbfaa4c8b0
104805,https://phabricator.services.mozilla.com/D104805,Bug 1692162: Support large buffers in TypedArray.prototype.subarray(). r=jandem!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-11 10:31:17,"Good catch, thanks for fixing this!

Removing second reviewer: range analysis changes are trivial."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-17 20:09:51,This gets fixed at some point in the patch stack; not sure where exactly though.
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-17 20:09:51,libwebrtc is just weird. It's moz.build files generated from gn configs in independent subdirectories but the same overall prefix....   It's much easier to leave libwebrtc alone and come back to it later.
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-17 20:09:51,I've tried to do so.
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-APPS-PhabricatorHeraldApplication,2021-02-16 20:36:25,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:25,"Can we rename this file?
`mozbuild_util` implies that it contains utilities for the usage of `mozbuild`.
However, my understanding of this is that it's a temporary CLI tool to map 3rd party native code to its `moz.build` file.
Perhaps this should be called `locate_moz_build_for_package`, or something more verbose along those lines?"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:25,
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:25,Why are `libwebrtc` files ineligible for consideration?
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:25,"> if we just did paths it would be the result as before

Can you clarify this part? What is ""before"" in this context, and doesn't a path include the filename?"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:25,Heads up that this is still needed.
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:24,"> But this code isn't meant to run indefinitely so how concerned should I be?

Heh, fair enough :)"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-16 20:36:24,"If I'm understanding correctly, this is temporary code for investigating how feasible it is to do some automation around `moz.build` files.
I'm not sure that this belongs in-tree, but I trust your judgement.
Either way, due to its ""temporary investigation-y"" nature, I don't think a super aggressive review is needed, so I'll give you a tentative LGTM :)"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-cje4weq32o3xyuegalpj,2021-02-11 16:38:21,"Code analysis found 3 defects in the diff 398521:
 - 3 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/398521) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=115be295cdfa4011e4b508c87011fc775ff73cfb)."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-cje4weq32o3xyuegalpj,2021-02-11 05:44:43,"Code analysis found 4 defects in the diff 398291:
 - 4 defects found by py-flake8 (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/398291) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=6d0d3ed08e7e3e4e7ba461250ae2ea9c98987cf0)."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-11 05:14:08,It turns out that we do need this in a new changeset I'm adding to the stack...
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-11 05:14:08,Ummm.... I'm not sure.  But this code isn't meant to run indefinitely so how concerned should I be?
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-11 05:14:08,I don't know if moz.build files can handle that (it's not used anywhere) but I added an assert.
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-11 05:14:08,Done
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-dd6rge2k2csia46r2wcw,2021-02-11 05:14:08,Done
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,"IMO, if the function isn't needed, we should remove it, and add it back if/when it's needed."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,"Weird indentation here btw.
Also, will the monkey-patch cause a memory leak due to a reference loop?"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,"This `set_trace()` will never be called, I believe. Leftover from development?
Also, chuck a message in the exception if you don't mind."
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,Would you mind leaving a comment why it's safe to ignore non-constant file names? Should we warn/error/exit instead?
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,Should we watch for the case where the augmented assign is `-=` (or something else other than `+=`?
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,"```
> if CONFIG['OS_TARGET'] == 'WINNT' > SOURCES 1
```

I don't understand: what's this new format/psuedolanguage, and where is it used?"
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-02-10 22:35:02,
104754,https://phabricator.services.mozilla.com/D104754,Bug 1691975: Logic for editing moz.build files,PHID-USER-cje4weq32o3xyuegalpj,2021-02-10 21:49:57,"Code analysis found 45 defects in the diff 398125:
 - 40 defects found by py-flake8 (Mozlint)
 - 5 defects found by file-whitespace (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/398125) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=27704e09ff29838cd4c69dd2ebd5db907179caf5)."
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-02-19 01:08:51,This patch requires new test framework to check the order in clipboard. I don't think that it's worthwhile to write such big things only for this bug because this must be never regressed.
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-eltrc7x5oplwzfguutrb,2021-02-17 11:25:19,"@masayuki: I've manually tested the fix, it works. A macOS binary of it is available at https://treeherder.mozilla.org/jobs?repo=try&revision=92dcc9648af2189ff5d83a2378cc5269dc8f20b2&selectedTaskRun=P7aeW1P9Q52eaISzgal_RA.0."
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-eltrc7x5oplwzfguutrb,2021-02-17 09:15:25,"Thanks for pointing this out. I agree, this doesn't need to happen in this review and shouldn't. If we change the order for other OSs, like Windows, that should be done separately.

Will revert this part of the review."
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-02-17 01:45:32,"I don't understand why you change the order in XP level even though this patch changes the order only on macOS. I strongly recommend that we should keep the order on the other platforms.

If you have a reason to change this in XP code, request review again with commenting the reason."
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-02-17 01:45:32,I like `mozilla::Nothing()` better due to self-documented. But up to you.
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-eltrc7x5oplwzfguutrb,2021-02-15 09:20:40,">>! In D104704#3415447, @masayuki wrote:
>> I don't know how to write an automated test for this. Exporting the
>> flavors to the clipboard can be triggered by a Mochitest, but it doesn't
>> allow reading from macOS's native pasteboard.
>>
>> Checking the ""paste"" event doesn't cover this scenario either and the
>> order of its flavors is not affected by this change. So that's not
>> usable as an indirect test.
> 
> I think that if you add `MOZ_DIAGNOSTIC_ASSERT` or `MOZ_ASSERT` into `nsClipboard::PasteboardDictFromTransferable`, we can detect the regression with any mochitests which tries to copy something. Or, managing the order in it **might** be better for fixing this since similar broken apps may be on the other platforms...

I'm not sure whether `MOZ_*_ASSERT` should hold true for all callers of [[ https://searchfox.org/mozilla-central/search?q=symbol:_ZN11nsClipboard30PasteboardDictFromTransferableEP15nsITransferable&redirect=false | nsClipboard::PasteboardDictFromTransferable ]]. For some, it might be OK to pass the arguments in a different order.
However, because the order //shouldn't// matter, it should be safe to enforce to export the image (if available) first. And then all remaining flavors in their original order. So that's your second proposal. I'll give it a try."
104704,https://phabricator.services.mozilla.com/D104704,"Bug 1689992: part 1) When copying an image, add the image data before other data to the transferable and macOS's pasteboard. r=masayuki",PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-02-15 05:39:37,"> I don't know how to write an automated test for this. Exporting the
> flavors to the clipboard can be triggered by a Mochitest, but it doesn't
> allow reading from macOS's native pasteboard.
>
> Checking the ""paste"" event doesn't cover this scenario either and the
> order of its flavors is not affected by this change. So that's not
> usable as an indirect test.

I think that if you add `MOZ_DIAGNOSTIC_ASSERT` or `MOZ_ASSERT` into `nsClipboard::PasteboardDictFromTransferable`, we can detect the regression with any mochitests which tries to copy something. Or, managing the order in it **might** be better for fixing this since similar broken apps may be on the other platforms..."
104654,https://phabricator.services.mozilla.com/D104654,Bug 1691895 - Make RenderCompositorSWGL work on android,PHID-USER-oszpryzadx4pdqrckjlp,2021-02-16 21:38:14,I'm assuming this is a work in progress and not enabled by default anywhere.
104654,https://phabricator.services.mozilla.com/D104654,Bug 1691895 - Make RenderCompositorSWGL work on android,PHID-USER-dxkrohpjet6yh65movaa,2021-02-16 02:20:09,"Yikes, that seems like it'll be a deal-breaking performance problem."
104654,https://phabricator.services.mozilla.com/D104654,Bug 1691895 - Make RenderCompositorSWGL work on android,PHID-USER-dxkrohpjet6yh65movaa,2021-02-16 02:20:09,"Just a note, this isn't going to work once we support per-compositor decisions of which backend to use, and we'll need to pass a flag into this function specifying what compositor this texture will be used with.

There's lots more of these though, no need to fix now."
104654,https://phabricator.services.mozilla.com/D104654,Bug 1691895 - Make RenderCompositorSWGL work on android,PHID-USER-oszpryzadx4pdqrckjlp,2021-02-12 17:55:37,FYI snorp doesn't work at mozilla anymore
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-a7qiaocstw5yktfdzqpx,2022-01-27 20:13:03,The hash is correct.
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2022-01-27 07:12:57,Would it be [[ https://github.com/glennrp/libpng/commit/a40189cf881e9f0db80511c382292a5604c3c3d1 | a40189cf881e9f0db80511c382292a5604c3c3d1 ]] ?
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2022-01-27 07:10:38,"This should be the timestamp for when the revision we have vendored was created upstream, but this specific hash (a37d4836519517bdce6cb9d956092321eca3e73b) I pulled from the latest for the 1.6 branch on github.

Do you know what revision we currently have vendored or where I could sleuth out that info?"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-a7qiaocstw5yktfdzqpx,2022-01-21 15:14:39,Where does the timestamp come from? We updated in 1.6.37 in 2019.
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2022-01-20 15:53:59,tracking needs to move from `updatebot` to `vendoring`
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-APPS-PhabricatorHeraldApplication,2021-09-30 11:10:39,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`. Tip: [[https://addons.mozilla.org/en-US/firefox/addon/phab-test-policy/ | this Firefox add-on]] makes it easy!"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-13 14:29:42,I don't think the {yaml_dir} should be needed because we're only operating in one directory
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-13 14:29:42,"One comment, otherwise this looks good!"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2021-09-12 10:35:48,"I had been doing this via the `run-script` and left it out by accident, but now that one of the patches in this stack adds support for the `patches` field I've added those there instead"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2021-09-12 10:35:48,Removed! Thanks!
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2021-09-12 10:35:48,"Based on [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1513236 | Bug 1513236 ]] and the upstream [[ https://github.com/glennrp/libpng/commit/a40189cf881e9f0db80511c382292a5604c3c3d1 | libpng16 ]] branch that this is correct, even though it was generated by hand.

@aosmond can you double check that this is the correct commit hash and ISO 8601 timestamp for what is currently in tree?"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2021-09-12 10:35:48,Fixed! We had been using this for automation so I filed 1730394 to fix that.
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-xsgci3i2hsoare3yoz63,2021-09-12 10:35:48,"- added note to MOZCHANGES about turning on Updatebot updates
  - changed to track tags instead of commits (oops! thank you for catching that)
  - changed `exclude` to all files and `include` to be the specific files we want per Tom's comments in slack
  - added `apng.patch` and `arm.patch` to the `patches` field to have them applied after new changes are vendored
  - removed the outdated autovendored_sources file"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 19:32:31,yeah this doesn't seem to be needed
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-a7qiaocstw5yktfdzqpx,2021-09-07 17:36:04,"Does this auto apply the apng/arm.patch, or is that a manual step required?"
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 17:35:53,We should be applying these patch files as part of the vendoring process; no?
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 17:35:53,"This shouldn't be needed because the vendoring directory is the same as the moz-yaml-directory?

I'll probably have to test it myself."
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 17:35:53,I don't know if we should change this key. The url should be the project's homepage (and I don't think we use it for any automation stuff.)
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 17:35:53,I think this is an accidently-kept file in the patch?  We don't use this file anymore.
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-09-07 17:35:53,Some early comments. I think I'll need to test this and D124799 locally to be certain of some of them...
104554,https://phabricator.services.mozilla.com/D104554,"Bug 1687541 - Add libpng to libraries Updatebot can update; r=tjr,aosmond",PHID-USER-dd6rge2k2csia46r2wcw,2021-08-17 15:38:57,"We should do this patch in a way that doesn't require us to move the files.  

See https://phabricator.services.mozilla.com/D122413#inline-677101 for some discussion of how this problem could be approached if needed."
104504,https://phabricator.services.mozilla.com/D104504,Bug 1691666: part 1) Add some documentation to `SpecialPowersChild.setCommandNode`. r=masayuki,PHID-USER-eltrc7x5oplwzfguutrb,2021-02-09 15:12:45,">>! In D104504#3391479, @masayuki wrote:
> Hmm, the comment looks redundant for me because the calling method and its interface are enough obvious. But I have no concrete reason to reject this patch. So, up to you.

One the first glance it's redundant. However, it hints to the reader, that the called method indeed contains some documentation worth checking. Sometimes, that's not the case."
104504,https://phabricator.services.mozilla.com/D104504,Bug 1691666: part 1) Add some documentation to `SpecialPowersChild.setCommandNode`. r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-02-09 11:19:48,"Hmm, the comment looks redundant for me because the calling method and its interface are enough obvious. But I have no concrete reason to reject this patch. So, up to you."
104454,https://phabricator.services.mozilla.com/D104454,No bug: grant cache index scopes to firefox tv decision task. r=aki,PHID-USER-b22gfzqtftqf7qpp3a3k,2021-02-08 21:53:07,This is re: https://github.com/mozilla-mobile/firefox-tv/issues/3037
104403,https://phabricator.services.mozilla.com/D104403,"Bug 1681356 [Linux] Rename CSDSupportLevel to GtkWindowDecoration, r?jhorak",PHID-APPS-PhabricatorHeraldApplication,2021-02-09 08:38:33,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104403,https://phabricator.services.mozilla.com/D104403,"Bug 1681356 [Linux] Rename CSDSupportLevel to GtkWindowDecoration, r?jhorak",PHID-USER-cje4weq32o3xyuegalpj,2021-02-08 16:15:06,"Code analysis found 1 defect in the diff 396524:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/396524) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=695de07546e2447673ee4c81372d43d5459eb9cd)."
104352,https://phabricator.services.mozilla.com/D104352,"Bug 1691327 - Update sphinxcontrib-mermaid to v0.6.0 by renovate, DONTBUILD. r?#firefox-source-docs-reviewers",PHID-APPS-PhabricatorHeraldApplication,2021-02-08 08:33:47,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104352,https://phabricator.services.mozilla.com/D104352,"Bug 1691327 - Update sphinxcontrib-mermaid to v0.6.0 by renovate, DONTBUILD. r?#firefox-source-docs-reviewers",PHID-USER-xsug3d47ikapt73uamb6,2021-02-08 08:33:47,"Seems to work great:
http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/38a98e12-69d1-11eb-bb8b-0242ac110004/tools/moztreedocs/mermaid-integration.html"
104352,https://phabricator.services.mozilla.com/D104352,"Bug 1691327 - Update sphinxcontrib-mermaid to v0.6.0 by renovate, DONTBUILD. r?#firefox-source-docs-reviewers",PHID-USER-cje4weq32o3xyuegalpj,2021-02-08 05:51:23,"You have touched the documentation in diff 396226, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/38a98e12-69d1-11eb-bb8b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-09 19:41:16,"Code analysis found 1 defect in the diff 397335:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/IefUh0uCT5adowkNMkLObQ/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-ccz52yp3l52qjlxs2sus.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/397335) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=124ff2308cd9f46b8248c9490d8f8a4b576fa393)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-09 18:12:46,"Code analysis found 1 defect in the diff 397279:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/397279) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5df8223aa5c447ab6862300e385c0757b93b1bd4)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-09 11:05:16,"Code analysis found 1 defect in the diff 396986:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/396986) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=da066d0d8c64f1f062bee54279eb5ecb6cf091da)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-08 10:34:57,"Code analysis found 1 defect in the diff 396278:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/396278) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=399778033e9bca54384655109c31919ccc26c2a7)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-05 15:59:36,"Code analysis found 1 defect in the diff 395671:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/395671) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15863d3d12c5b06af9b3fc7fb29beb02f5a92916)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-ux2opawd2pljply62dgl,2021-02-05 14:35:01,"(Instead of using `get` to return a raw pointer here, we could also return the reference to the `UniquePtr` by explicitly declaring the return type of the lambda expression as `UniquePtr<FrameSet>&`, if you prefer that. Similarly below."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-ux2opawd2pljply62dgl,2021-02-05 14:35:01,Sure.
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-cje4weq32o3xyuegalpj,2021-02-05 13:22:27,"Code analysis found 1 defect in the diff 395602:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/395602) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=27611b7f872d384c967f8ba408a59613a4172f97)."
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 13:21:35,"I'd spell `Position&` here. We're relying on mutating the entry here, so please be explicit?"
104202,https://phabricator.services.mozilla.com/D104202,Bug 1688833 - Migrate LookupForAdd to WithEntryHandle in layout. r=emilio,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 13:15:42,"Ok, but this seems like a much uglier API, which is a bit unfortunate."
104152,https://phabricator.services.mozilla.com/D104152,"Bug 1681053 Disable jianshu mobile live due to perma r?#perftest,sparky",PHID-APPS-PhabricatorHeraldApplication,2021-02-05 15:51:29,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104102,https://phabricator.services.mozilla.com/D104102,"Bug 1690898 - Add a mozinfo entry for nnt, and update WPT test expectations. r=jgraham",PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:27:43,forgot about windows in an annotation
104102,https://phabricator.services.mozilla.com/D104102,"Bug 1690898 - Add a mozinfo entry for nnt, and update WPT test expectations. r=jgraham",PHID-USER-gbb4orrkgmnzw3b5jlmj,2021-02-05 08:59:28,"It's not ideal, but I don't know of a better way to do this kind of thing."
104052,https://phabricator.services.mozilla.com/D104052,Bug 1674777 part 12 - Add test for XPConnect array conversions involving large typed arrays. r?kmag!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-08 13:43:37,Address review comment
104052,https://phabricator.services.mozilla.com/D104052,Bug 1674777 part 12 - Add test for XPConnect array conversions involving large typed arrays. r?kmag!,PHID-APPS-PhabricatorHeraldApplication,2021-02-04 21:07:48,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
104052,https://phabricator.services.mozilla.com/D104052,Bug 1674777 part 12 - Add test for XPConnect array conversions involving large typed arrays. r?kmag!,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-02-04 21:07:48,Nit: `Assert.ok(ex.message.includes(...))`. Same below.
104052,https://phabricator.services.mozilla.com/D104052,Bug 1674777 part 12 - Add test for XPConnect array conversions involving large typed arrays. r?kmag!,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-02-04 21:07:48,Thanks.
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-02-04 08:45:31,Fix reviews
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-04 08:05:25,Maybe include the command.statusCode in the error message?
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-04 08:05:25,I think there are leftovers of these especially in old mailnews code... but the mallocs in mozilla code are nowadays infallible - on failure you don't get to this line
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-04 08:05:25,I think naming it protocol would be better
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-04 08:05:25,makes
104002,https://phabricator.services.mozilla.com/D104002,Bug 1679731 - Support GSSAPI/Kerberos auth in SmtpClient.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-02-04 08:05:25,"LGTM, r=mkmelin"
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-4bmd7d25nix2m4x6y6uw,2021-04-20 20:46:47,This was supposed to be `WriteCachedScript`
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-4bmd7d25nix2m4x6y6uw,2021-04-20 20:46:47,Oof. Sure is. Seem to have gotten distracted somehow in the middle of this patch and lost it.
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-ovlr37yfp3loy53g6wgo,2021-02-04 03:50:27,"if we calculate `storeIntoStartupCache` and `storeIntoPreloadCache` below,
at least this definition can be rewritten based on them."
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-ovlr37yfp3loy53g6wgo,2021-02-04 03:50:27,`storeIntoPreloadCache` is same as `preloadCache`
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-ovlr37yfp3loy53g6wgo,2021-02-04 03:50:27,"`writeToStartupCache` doesn't exist?
(or is it in other patch?)"
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-ovlr37yfp3loy53g6wgo,2021-02-04 03:50:27,"Now `JS::FinishIncrementalEncoding` can be called twice on single script, by preloader and startup cache, at least for newly compiled case.

https://searchfox.org/mozilla-central/rev/927e525f481a93a8f63d27a78ae6201e42b1b1fb/js/xpconnect/loader/mozJSSubScriptLoader.cpp#218-223
```
static bool EvalScript(JSContext* cx, HandleObject targetObj,
                       HandleObject loadScope, MutableHandleValue retval,
                       nsIURI* uri, bool startupCache, bool preloadCache,
                       MutableHandleScript script) {
...
      ScriptPreloader::GetSingleton().NoteScript(uriStr, cachePath, script);
    }

    if (startupCache) {
      JSAutoRealm ar(cx, script);
      WriteCachedScript(StartupCache::GetSingleton(), cachePath, cx, script);
```

https://searchfox.org/mozilla-central/rev/927e525f481a93a8f63d27a78ae6201e42b1b1fb/js/xpconnect/loader/mozJSComponentLoader.cpp#808-814
```
nsresult mozJSComponentLoader::ObjectForLocation(
    ComponentLoaderInfo& aInfo, nsIFile* aComponentFile,
    MutableHandleObject aObject, MutableHandleScript aTableScript,
    char** aLocation, bool aPropagateExceptions,
    MutableHandleValue aException) {
...
  ScriptPreloader::GetSingleton().NoteScript(nativePath, cachePath, script);

  if (writeToCache) {
    MOZ_ASSERT(options.sourceIsLazy);

    // We successfully compiled the script, so cache it.
    rv = WriteCachedScript(cache, cachePath, cx, script);
```

`ScriptSource::xdrFinalizeEncoder` isn't designed to be called twice, and the subsequent call will fail because the encoder doesn't exist anymore.
https://searchfox.org/mozilla-central/rev/927e525f481a93a8f63d27a78ae6201e42b1b1fb/js/src/vm/JSScript.cpp#2855
```
bool ScriptSource::xdrFinalizeEncoder(JSContext* cx,
                                      JS::TranscodeBuffer& buffer) {
...
  auto cleanup = mozilla::MakeScopeExit([&] { xdrEncoder_.reset(nullptr); });
```

Also, the current `XDRIncrementalStencilEncoder::linearize` code works if it's called twice tho,
it's not guaranteed.  (currently, it doesn't modify internal buffer, but if the caller requires that behavior, at least a comment is required, and hopefully an assertion)

So, here needs one of:
  * a) Call `JS::FinishIncrementalEncoding` only once, and share the result between `ScriptPreloader` and `StartupCache`, by temporarily keep the result somewhere
  * b) modify `ScriptSource::xdrFinalizeEncoder` works on multiple calls
  * c) add another entry point for linearizing XDR buffer, while keeping encoder

for (b) and (c) a comment about the possibility to be called multiple times to  `XDRIncrementalStencilEncoder::linearize` (and related methods) is necessary.

Then, currently, if both ScriptPreloader and StartupCache receives single script, `WriteCachedScript` is called after `NoteScript`.
But in term of the `JS::FinishIncrementalEncoding` call order,
`WriteCachedScript` calls `JS::FinishIncrementalEncoding` immediately,
and `ScriptPreloader::NoteScript` stores the script and the encode is done later.

```
ScriptPreloader::NoteScript
  -> ScriptPreloader.mScripts.LookupOrAdd

ScriptPreloader::Observe
  -> ScriptPreloader::FinishContentStartup
    -> ScriptCacheChild::SendScriptsAndFinalize
      -> ScriptPreloader::CachedScript::XDREncode
        -> JS::FinishIncrementalEncoding

ScriptPreloader::Run
  -> ScriptPreloader::WriteCache
    -> ScriptPreloader::PrepareCacheWrite
      -> ScriptPreloader::PrepareCacheWriteInternal
        -> ScriptPreloader::PrepareCacheWriteInternal
        -> ScriptPreloader::CachedScript::XDREncode
          -> JS::FinishIncrementalEncoding

WriteCachedScript
  -> JS::FinishIncrementalEncoding
```

So, I think we can swap the `ScriptPreloader::NoteScript` and `WriteCachedScript` order in callsites,
so that `JS::FinishIncrementalEncoding` call for `WriteCachedScript` always happens before the one for `ScriptPreloader::NoteScript`,
and it will simplify the situation in anyway."
103952,https://phabricator.services.mozilla.com/D103952,"Bug 1688790 - Migrate StartupCache bytecode format to Stencil-XDR r?kmag,arai",PHID-USER-ovlr37yfp3loy53g6wgo,2021-02-04 03:50:27,this variable is unused
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-10 11:21:36,Part 12 has the test.
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-02-03 19:22:44,I guess that makes sense.
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-03 19:10:07,"Yeah that could work, the test won't be used yet but it will once we enable this by default... I'll try to add one tomorrow."
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-03 19:10:07,"It's just a string, ""out of memory"", not an exception object because we don't want to allocate when we're OOM'ing:

https://searchfox.org/mozilla-central/rev/927e525f481a93a8f63d27a78ae6201e42b1b1fb/js/src/vm/JSContext.cpp#277-278"
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-APPS-PhabricatorHeraldApplication,2021-02-03 19:00:04,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-02-03 19:00:04,Please check against `ex.message` or `String(ex)`. We've generally been changing assertion functions to use strict equality checks.
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-02-03 19:00:04,"Yeah, xpcshell doesn't have any concept of a profile directory, so there's nowhere to set startup prefs other than the application directory.

The simplest thing is probably to add an xpcshell test that just returns early if the pref isn't set so we test it in cases where it is."
103902,https://phabricator.services.mozilla.com/D103902,Bug 1674777 part 10 - Fix XPConnect callers for JS_GetTypedArrayLength returning size_t. r?kmag!,PHID-USER-ir4emeapesorzd6nq5ut,2021-02-03 14:26:57,"I looked into adding a test for this, but it's a pain because xpcshell.ini doesn't support setting prefs and it's a startup pref..."
103852,https://phabricator.services.mozilla.com/D103852,Bug 1683063 - Use Maps instead of sparse arrays in ICS file import dialog. r?lasana,PHID-USER-r3gtdt556yj2pbfgfzpm,2021-02-11 21:54:50,"Oops, I thought I'd set these ready for review. No wonder you haven't. :-)"
103802,https://phabricator.services.mozilla.com/D103802,Bug 1690342 - P4: Implement IPC attributed text getter. r?morgan!,PHID-USER-cje4weq32o3xyuegalpj,2021-02-02 19:06:24,"Code analysis found 1 defect in the diff 394044:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p accessible/ipc/extension/mac/DocAccessiblePlatformExtChild.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/eIkFUjw0TOCAhU3rsObFMw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-tzbgckarxyjpyo27r24m.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d2c77afaf88385bc4e6d12444e22def4671d6f9a&selectedTaskRun=FcIiWwxsS-6kZ1MI-TTh_g-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d2c77afaf88385bc4e6d12444e22def4671d6f9a&selectedTaskRun=NRV5EojYSGOKs0Zh0pyroA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d2c77afaf88385bc4e6d12444e22def4671d6f9a&selectedTaskRun=bNNeR8FgRye2pob87gYa1A-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/394044) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d2c77afaf88385bc4e6d12444e22def4671d6f9a)."
103752,https://phabricator.services.mozilla.com/D103752,Bug 1690225 - Remove focus-visible feature flag. r=edgar,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-02 22:27:49,remove match case
103752,https://phabricator.services.mozilla.com/D103752,Bug 1690225 - Remove focus-visible feature flag. r=edgar,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-02 22:21:56,">>! In D103752#3364890, @edgar wrote:
> Do we need to remove https://searchfox.org/mozilla-central/rev/b2433a832c250c55255e0ee37d05192d04f20427/servo/components/style/gecko/wrapper.rs#2045?


err, yes, I had that change locally, thanks"
103752,https://phabricator.services.mozilla.com/D103752,Bug 1690225 - Remove focus-visible feature flag. r=edgar,PHID-USER-p7a62wknonfqkih2zlnc,2021-02-02 22:00:05,Do we need to remove https://searchfox.org/mozilla-central/rev/b2433a832c250c55255e0ee37d05192d04f20427/servo/components/style/gecko/wrapper.rs#2045?
103652,https://phabricator.services.mozilla.com/D103652,"Bug 1689990 - Part 15: Assert ""MBasicBlock::trackedSite_"" is non-nullptr. r=jandem!",PHID-USER-jnkwwpwrtjrvq34xsacb,2021-02-05 15:24:12,Address review comments
103652,https://phabricator.services.mozilla.com/D103652,"Bug 1689990 - Part 15: Assert ""MBasicBlock::trackedSite_"" is non-nullptr. r=jandem!",PHID-USER-cje4weq32o3xyuegalpj,2021-02-01 15:29:18,"The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d144305a00290f4bb283e24d40d4ebeb1d79a1aa&selectedTaskRun=Syx2DrEYQU-j5LSbPnP9vw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103602,https://phabricator.services.mozilla.com/D103602,Bug 1689914 - Part 1: Specify input source name explicitly for each action sequence in the test;,PHID-USER-p7a62wknonfqkih2zlnc,2021-02-01 00:27:54,"@jgraham, would you mind reviewing this? Thanks."
103552,https://phabricator.services.mozilla.com/D103552,Bug 1688534 - Part 3: Add HasIndexOrDuplicatePropName flags.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-02 15:20:28,"The analysis task [source-test-mozlint-file-whitespace](https://treeherder.mozilla.org/#/jobs?repo=try&revision=74769f8ccf60f295b9d2b7942e44007d8fbce890&selectedTaskRun=UpngZWAQSfeOELsLqrkQAg-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103502,https://phabricator.services.mozilla.com/D103502,Bug 1689394 - Simplify TraceKind definition to reduce code generated by switch statements r?sfink,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-01-29 19:47:42,"According to a simple godbolt example, clang does this with `cmovge`, gcc does it with `cmovg`, so it seems fine everywhere."
103502,https://phabricator.services.mozilla.com/D103502,Bug 1689394 - Simplify TraceKind definition to reduce code generated by switch statements r?sfink,PHID-USER-5zlrwolpbqtuwrk3umcz,2021-01-29 19:47:42,Nice.
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-29 14:37:21,">>! In D103452#3352750, @nchevobbe wrote:
> Thanks Julian, i'm very happy to see this cleanup and the number of fission-related pref decreasing :)

So am I! Even though I might have to introduce a new one for server-side target switching. 
Thanks for the review :)"
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-29 13:55:25,"{nav,  icon=thumbs-up, name=praise:} 🎉"
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-29 13:55:25,"{nav,  icon=thumbs-up, name=praise:} Nice to see this go!"
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-29 13:55:25,"Thanks Julian, i'm very happy to see this cleanup and the number of fission-related pref decreasing :)"
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-29 10:51:59,Try seems green
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-29 10:42:12,lint
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-29 10:42:11,"Note: this was removed because `navigateTo` alread listens to ""switched-target""."
103452,https://phabricator.services.mozilla.com/D103452,Bug 1689559 - [devtools] Remove devtools.target-switching.enabled preference,PHID-USER-cje4weq32o3xyuegalpj,2021-01-29 09:43:57,"Code analysis found 2 defects in the diff 392480:
 - 2 defects found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/392480) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=1256f88ed1583c06ffe6c4f4ad61430803b683c4)."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-02-02 18:42:42,"Instead of just checking for the presence of the string, let's make sure that the value is `true`, like:

```lang=js
let lockPanelVertical = this.openViews[0].node.getAttribute(""lockpanelvertical"") == ""true"";
nextPanelView.minMaxHeight = lockPanelVertical ? prevPanelView.knownHeight : 0;
```"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-02-02 18:42:42,"Instead of setting the attribute dynamically here, can we add it to the markup here?: https://searchfox.org/mozilla-central/rev/b2433a832c250c55255e0ee37d05192d04f20427/browser/base/content/browser.xhtml#954-955"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-02-02 18:42:42,"Thanks, @emalysz! Great work! Just two things before landing.

Setting #testing-approved since there are pre-existing tests for the Bookmarks subview that are being modified here."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-02-02 18:24:40,makes sense! Went ahead and changed that
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-02-02 16:20:32,"Hm. I'm a bit reluctant to make PanelMultiView.jsm aware of Proton. Yes, this does the job, but if possible, I think we should try to keep PanelMultiView ignorant of Proton's existence.

How about, instead of passing in Proton-state as an argument, we make it possible for the `<panelview>` for Proton to have an attribute, like `lockpanelvertical=""true""`. Then, augument the PanelView class to have a getter for that attribute... and then inside of the showSubView routines that you were updating here, get at the main view PanelView instance, and check for that property. And if it's true, then use its knownHeight as the maxHeight.

Then, we update the `appMenu-protonMainView` with the `lockpanelvertical=""true""` attribute, and we get our effect, without impacting the non-Proton appmenu (or any other main views).

What do you think?"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-cic5kmkeckeqhd3ekoby,2021-02-02 07:38:26,"Sounds good, yeah, #2 isn't an option then. Maybe filing a bug to look into removing this class post-proton, and referring it in the CSS seems fine by me."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-02-02 00:41:49,"@ntim Yeah I agree it's not ideal. 

I was nervous about the potential fallout from option #1 since we want these changes to affect both proton and non-proton builds.

For option #2, we're setting the bookmarks toolbar to a fixed height if we navigate from the app menu. If `panelMenu_showAllBookmarks` is in the panel-subview-body and we have multiple bookmarks, it's going to be at the bottom of the scrollable area (even if a spacer is included), but we want it to always be visible. Am I missing something with that approach?"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-cic5kmkeckeqhd3ekoby,2021-02-02 00:14:16,"I'm not a huge fan of the `.panel-subview-footer-button` class as it duplicates the `6px` padding value from `.panel-subview-body` as a margin.

Options could be:
* Move the padding from `.panel-subview-body` to `.PanelUI-subview` (maybe for proton only to avoid breaking non-proton footers)
* Move those 2 elements into `.panel-subview-body` and add a spacer/toolbarspacer to push the footer to the bottom

Wdyt?"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-02-01 22:24:20,"As discussed with UX:
The ""Recently bookmarked"" section does not need a limit on entries, but the newly-renamed bottom button ""Manage Bookmarks"" needs to remain visible. We also want to match the height of the app menu's bookmark section to app menu. This max height constraint does not need to be applied if it was opened from the Library toolbar button

I also added a bottom margin to ensure it does not look truncated"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-02-01 17:49:44,"Planning changes because of the UX discussion in slack about ""Recent bookmarks"""
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-52tll3zmlcopd5aoarnv,2021-01-30 08:22:53,"This should be removed. As Emma pointed out early, we can't take `bookmarks-tools-toolbar-visibility.label`entirely, because one of the variants changes from *View* to *Show*. This will copy over the translation for a different string."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-52tll3zmlcopd5aoarnv,2021-01-30 08:22:53,r+ with the changed string removed from migration
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-01-30 00:53:37,done!
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-30 00:31:53,"At that point, if @flod is happy with it, I sure am. :)"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-30 00:31:39,"I think what we can do here for forking is effectively what you did for the `bookmarks-tools-toolbar-visibility-menuitem` part of the migration. Something like:

```lang=python
bookmarks-tools-toolbar-visibility-panel =
    .label = { COPY_PATTERN(from_path, ""bookmarks-tools-toolbar-visibility.label"") }
```"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-30 00:31:39,"Looks great, @emalysz! Just one thing about the migration - see below."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-01-29 19:29:04,"@flod @mconley The other text changes from ""View"" to ""Show"", so does it still make sense to add it to the migration script since we are adding a new string?
We'd only want to copy over the ""Hide Bookmarks Toolbar"" portion. I tried something like: 
`bookmarks-tools-toolbar-visibility-panel =
    .label = { $isVisible ->
        [true] { COPY(from_path, ""hideBookmarksToolbar.label"") }
    }
`
but was unsuccessful since it needs a default value."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-01-29 19:29:04,"Ah I meant to leave a comment asking about this. Good to know, thanks!"
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-29 17:34:06,"I'm we're going to add a new migration (for the other forking I mentioned in this review), we should also maybe rename this string `bookmarks-bookmark-edit` or `bookmarks-bookmark-edit-panel`, since they're not restricted to the Library anymore."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-29 17:34:06,"Instead of using the `2` suffix, since this item is only ever used in a panel, let's call it `bookmarks-recent-bookmarks-panel`."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-29 17:34:06,"@emalysz is right to fork these strings, since we're going to eventually need to put them in sentence case.

Instead of calling it `bookmarks-tools-toolbar-visibility2` though, let's call it `bookmarks-tools-toolbar-visibility-panel`, or perhaps rename the other one `bookmarks-tools-toolbar-visibility-menuitem`.

In either case, I think we'll need to create a new migration to do the forking so that our localizers don't have to retranslate these strings. Let me know if you need guidance on how to do that, @emalysz - though you can maybe use https://phabricator.services.mozilla.com/D100957 as a template."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-29 17:34:06,"Yep, @flod is right - we can fully revert the migration file change here."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-jvhfrjlgnzfpsjbu6lcg,2021-01-29 17:34:06,"This is great, @emalysz! Thanks for tackling this. Functionally, I think you've nailed this (though it'd be a good idea to do a try push just to be sure there aren't any sneaky tests waiting to blow up), but there are some small string things to do here. See below."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-cje4weq32o3xyuegalpj,2021-01-29 16:01:06,"The analysis task [source-test-mozlint-py-black](https://treeherder.mozilla.org/#/jobs?repo=try&revision=419d79396804c47074e1b93ce62b65e377127e37&selectedTaskRun=NBx6uxgcR-mgv9Lr29dmWA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-l10n-conflicts](https://treeherder.mozilla.org/#/jobs?repo=try&revision=419d79396804c47074e1b93ce62b65e377127e37&selectedTaskRun=VS551xiaQ6yRdqULnNDSmQ-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-52tll3zmlcopd5aoarnv,2021-01-29 15:58:47,"Please don't modify existing migrations, even if they reference a string you're removing. They're frozen in time when they land, and get periodically removed."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-52tll3zmlcopd5aoarnv,2021-01-29 15:58:47,"I assume we're keeping `bookmarks-tools-toolbar-visibility` because it's currently used in two places, and we're removing only one caller as far as I can see. 

But why do we need another strings, `bookmarks-tools-toolbar-visibility2`, with the same text? Does it need to change capitalization later? If not, we should be able to keep using the existing string."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-52tll3zmlcopd5aoarnv,2021-01-29 15:58:47,"I would add a comment to explain that ""Bookmark"" here is a verb, as in ""Add current tab to bookmarks"", just to be safe."
103402,https://phabricator.services.mozilla.com/D103402,"Bug 1689366, simplify bookmark panel",PHID-USER-2xjk3lke7w5hc4c42bnx,2021-01-29 15:46:25,"For reference, this is how the changes will affect the current subview:

Before:
{F2693697}
After:
{F2693699}

And the proton subview now looks like this:
{F2693701}

I think it's worth noting that the ""Show all bookmarks"" footer at the bottom now looks like a standard button."
103302,https://phabricator.services.mozilla.com/D103302,"Bug 1689253 - Add a more sensible scrollbar size API to nsITheme, and use it to replace ScrollbarNonDisappearing. r=mstange,spohl",PHID-USER-zp4gy3jjzfehipsktf6x,2021-01-28 22:10:41,Typo + nits
103302,https://phabricator.services.mozilla.com/D103302,"Bug 1689253 - Add a more sensible scrollbar size API to nsITheme, and use it to replace ScrollbarNonDisappearing. r=mstange,spohl",PHID-USER-zp4gy3jjzfehipsktf6x,2021-01-28 22:10:38,"D'oh, nice catch."
103302,https://phabricator.services.mozilla.com/D103302,"Bug 1689253 - Add a more sensible scrollbar size API to nsITheme, and use it to replace ScrollbarNonDisappearing. r=mstange,spohl",PHID-USER-3lar5dde6tl6jsiuxh6j,2021-01-28 15:53:09,nit: I guess you could s/`nsIFrame* aFrame`/`nsIFrame*`/
103302,https://phabricator.services.mozilla.com/D103302,"Bug 1689253 - Add a more sensible scrollbar size API to nsITheme, and use it to replace ScrollbarNonDisappearing. r=mstange,spohl",PHID-USER-3lar5dde6tl6jsiuxh6j,2021-01-28 15:53:09,s/`aSize.width`/`aSize.height`/?
103302,https://phabricator.services.mozilla.com/D103302,"Bug 1689253 - Add a more sensible scrollbar size API to nsITheme, and use it to replace ScrollbarNonDisappearing. r=mstange,spohl",PHID-USER-3lar5dde6tl6jsiuxh6j,2021-01-28 15:53:09,nit: s/an horizontal/a horizontal/
103252,https://phabricator.services.mozilla.com/D103252,Bug 1689245 - implement GL_ARB_clear_texture extension for SWGL. r?mattwoodrow,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 05:19:31,"Code analysis found 1 defect in the diff 391851:
 - 1 defect found by code coverage analysis

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391851) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=316196942b45f8f8a3d9894534ada98d97476a80)."
103252,https://phabricator.services.mozilla.com/D103252,Bug 1689245 - implement GL_ARB_clear_texture extension for SWGL. r?mattwoodrow,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 03:31:20,"Code analysis found 3 defects in the diff 391810:
 - 1 defect found by code coverage analysis
 - 2 defects found by rustfmt (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391810) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7c496ae8cbdccebfbab5f7e5a750dbc9fab7c838)."
103252,https://phabricator.services.mozilla.com/D103252,Bug 1689245 - implement GL_ARB_clear_texture extension for SWGL. r?mattwoodrow,PHID-APPS-PhabricatorHeraldApplication,2021-01-28 02:32:05,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
103252,https://phabricator.services.mozilla.com/D103252,Bug 1689245 - implement GL_ARB_clear_texture extension for SWGL. r?mattwoodrow,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 02:20:34,"Code analysis found 3 defects in the diff 391802:
 - 1 defect found by code coverage analysis
 - 2 defects found by rustfmt (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

In our previous code coverage analysis run, we found some files which had no coverage and are being modified in this patch:
Should they have tests, or are they dead code?

 - You can file a bug blocking [Bug 1415824](https://bugzilla.mozilla.org/show_bug.cgi?id=1415824) for untested files that should be **tested**.
 - You can file a bug blocking [Bug 1415819](https://bugzilla.mozilla.org/show_bug.cgi?id=1415819) for untested files that should be **removed**.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391802) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=84a2ffc77f1fc5bb40fed8baae887ba0d7eed9c1)."
103202,https://phabricator.services.mozilla.com/D103202,Bug 1689095 - Add dark theme color to the scroll section bottom border.,PHID-USER-p7p35ducsc5pwces4boj,2021-01-28 22:47:32,rebase
103202,https://phabricator.services.mozilla.com/D103202,Bug 1689095 - Add dark theme color to the scroll section bottom border.,PHID-USER-p7p35ducsc5pwces4boj,2021-01-28 18:26:11,rebase
103202,https://phabricator.services.mozilla.com/D103202,Bug 1689095 - Add dark theme color to the scroll section bottom border.,PHID-APPS-PhabricatorHeraldApplication,2021-01-28 16:48:55,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
103202,https://phabricator.services.mozilla.com/D103202,Bug 1689095 - Add dark theme color to the scroll section bottom border.,PHID-USER-cfgbepamagj5j2eq6etb,2021-01-28 16:48:55,LGTM
103202,https://phabricator.services.mozilla.com/D103202,Bug 1689095 - Add dark theme color to the scroll section bottom border.,PHID-USER-p7p35ducsc5pwces4boj,2021-01-27 21:13:05,"ignore the extra in the bundle, will rebase once the other bundle patch lands."
103152,https://phabricator.services.mozilla.com/D103152,Bug 1689062 - Store Windows third party symbol files without CFI on symbol server,PHID-USER-ebebpbp2fnufsd3f2mah,2021-01-27 10:35:19,This runs on automation
103152,https://phabricator.services.mozilla.com/D103152,Bug 1689062 - Store Windows third party symbol files without CFI on symbol server,PHID-USER-n52qjcvis5cf232owqsp,2021-01-27 10:28:01,Fix nits.
103152,https://phabricator.services.mozilla.com/D103152,Bug 1689062 - Store Windows third party symbol files without CFI on symbol server,PHID-APPS-PhabricatorHeraldApplication,2021-01-27 10:09:47,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
103152,https://phabricator.services.mozilla.com/D103152,Bug 1689062 - Store Windows third party symbol files without CFI on symbol server,PHID-USER-ebebpbp2fnufsd3f2mah,2021-01-27 10:09:47,typo: we've a -> we've got a
103152,https://phabricator.services.mozilla.com/D103152,Bug 1689062 - Store Windows third party symbol files without CFI on symbol server,PHID-USER-ebebpbp2fnufsd3f2mah,2021-01-27 10:09:47,"LGTM but since you're changing this code it wouldn't hurt if you could change the error codes into something more readable than integers. Like 0 -> ""ok"" 1 -> ""dump_error"" 2 -> ""no_bin""."
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-or4wqoxtk6qaerrbbjxa,2021-01-29 02:01:41,Is this check necessary? Should we just always use focusedDoc to be fully consistent between Fission and non-Fission (even for silly edge cases)?
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-4uriz64mjqgntzxtsx7a,2021-01-28 17:59:10,"Yeah, maybe we should care here either. I'll simplify this."
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 00:57:54,"Code analysis found 4 defects in the diff 391775:
 - 4 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391775) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a08fec542f6b9e37ea8f96a026aa47058fe7f16d)."
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-or4wqoxtk6qaerrbbjxa,2021-01-28 00:51:23,"Is this loop designed to deal with the case where you call FocusedChild on a document when another unrelated document has focus? So the loop would prevent us from returning something that isn't a descendant? Please comment to that effect. (If we just wanted to return the focused descendant regardless of whether the documents are related, I don't think we'd need this loop.)

Note that DocAccessible::FocusedChild doesn't even care whether it's a descendant. Do we need to care here?"
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-or4wqoxtk6qaerrbbjxa,2021-01-28 00:51:23,"I assume you need this special case for OuterDoc because of Fission; i.e. so it returns the OOP iframe document? For non-Fission, we wouldn't need this code path because SendFocusedChild (later) would do the right thing, correct?

If correct, please add a comment here noting that this is necessary to support OOP iframes."
103102,https://phabricator.services.mozilla.com/D103102,Bug 1688972 - Make FocusedChild work across document/process boundaries. r?Jamie!,PHID-USER-cje4weq32o3xyuegalpj,2021-01-26 22:07:11,"Code analysis found 1 defect in the diff 391147:
 - 1 defect found by Coverity

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391147) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=32ef0cda86048c622e73eba4b123a112f9611508)."
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-28 15:33:47,"Yep, sorry"
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-28 13:29:43,"TRY looks okay, should we land this?"
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-26 16:28:29,"{nav,  icon=thumbs-up, name=praise:} Nice cleanup!"
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-26 16:28:29,"Thanks Julian for the fix, the test and refactoring the helpers :)"
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-26 16:19:55,"`waitForMultipleChildrenUpdates` is smart enough to wait until all updates are done, so we can transparently use it for expand or collapse."
103052,https://phabricator.services.mozilla.com/D103052,Bug 1686241 - [devtools] Stop selecting the node front when expanding the markup view container,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-26 16:14:25,update
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-29 22:00:58,"You have touched the documentation in diff 464890, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/fbc688a8-f0b5-11eb-8321-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-29 17:22:49,"You have touched the documentation in diff 464683, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/44a63388-f08f-11eb-a327-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-29 16:53:54,"You have touched the documentation in diff 464667, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/ab87fae0-f08b-11eb-a536-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-27 23:39:31,"You have touched the documentation in diff 463588, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/aff0844a-ef31-11eb-b6b8-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-27 23:23:18,"You have touched the documentation in diff 463572, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e2464a7c-ef2e-11eb-8951-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-27 22:38:10,"You have touched the documentation in diff 463538, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/3e30b888-ef28-11eb-b49e-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-21 22:47:51,"You have touched the documentation in diff 461295, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/79f35d4a-ea72-11eb-9d54-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-07-09 05:38:18,"You have touched the documentation in diff 457250, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/0c7dbc4e-e075-11eb-933c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-23 19:32:38,"You have touched the documentation in diff 454194, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/1efdba6e-d458-11eb-a7f2-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 19:42:26,"You have touched the documentation in diff 452545, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/1934bf5c-cfa2-11eb-877a-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-17 18:45:31,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a87457832d71ca6ab1761593a6f58af29834765f&selectedTaskRun=EVvt7ZgkT_KZY1UNEXD9kg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a87457832d71ca6ab1761593a6f58af29834765f&selectedTaskRun=PgXiV54uTQGWhX_uMGvBVw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a87457832d71ca6ab1761593a6f58af29834765f&selectedTaskRun=V1p4lMHJRR-Mw9T5UbbGOg-0) failed, but we could not detect any issue.
Please check this task manually.

You have touched the documentation in diff 452481, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/5dc00d50-cf9a-11eb-923f-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-11 20:33:35,"You have touched the documentation in diff 450292, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/34b47f64-caf3-11eb-8e34-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-07 18:09:40,"You have touched the documentation in diff 447983, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e37fd562-c7b9-11eb-9ed6-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-04 23:01:30,"You have touched the documentation in diff 447554, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/561873b2-c586-11eb-b97c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-06-03 01:10:27,"You have touched the documentation in diff 446658, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/809db736-c406-11eb-bbb6-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-28 21:15:51,"You have touched the documentation in diff 444422, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/4978b9fc-bff8-11eb-b0cf-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-05-28 16:22:15,Yup. Will replace once the full stack is ready.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-05-28 16:22:15,@nika - this has been left by Dan. Can you confirm if I can remove it?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,question: Is this comment still relevant? Should there be a bug filed for this?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,suggestion: please document how index is used.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,"issue: This should point to the vendored code, not to GitHub."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,"suggestion: I know this is established use, but please add a comment explaining what a prePath is."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,suggestion: please add comment describing what this is used for.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-ifhr2qt2fovv7fu5dkhb,2021-05-11 20:19:58,suggestion: please add overall comment describing the purpose of this interface.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-05 17:10:24,"You have touched the documentation in diff 435854, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/4cd91598-adc3-11eb-abe0-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-03 20:40:47,"You have touched the documentation in diff 434959, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/91398a2c-ac4e-11eb-9f08-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-04-30 00:31:30,"You have touched the documentation in diff 433841, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/56c8d5cc-a948-11eb-b628-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-04-10 01:52:31,"You have touched the documentation in diff 425098, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/d9135a52-999e-11eb-b52d-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-18 16:48:58,"You have touched the documentation in diff 415107, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b92d3c7e-8807-11eb-b377-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-01 21:24:49,"You have touched the documentation in diff 406433, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/0f99cbd2-7ad3-11eb-947c-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 21:05:05,"in that case, may as well keep it - I might've been misremembering."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 21:05:05,"thanks!

tests are in another part"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-03-01 19:48:47,"Why? It works for CSS too and it works really well for Fluent - I was able to produce a syntax error, open it in browser console, see the file/line/col and click on it to load the file at the right location from resource:// protocol."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,From this error it looks like you don't have the patch to change the version of cbindgen used by infra in your patch stack. Please add that & get emilio to review :-)
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"Let's just make this a non-debug assert. I can't imagine this is super hot code, and the peace-of-mind is probably worth it :-)"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"If we add a helper method like the one suggested above, let's also use it here."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"This is wrong, as at this point you've already invoked UB. My suggestion about checking for `result` being null was to make that step happen before we invoke UB by creating a slice with a raw pointer in the above line with `Box::from_raw`.

Perhaps it would be good to add a helper function to this module like this:

```
unsafe fn boxed_slice_from_raw(ptr: *mut u8, len: usize) -> Box<[u8]> {
    if ptr.is_null() {
        // It is undefined behaviour to create a `Box<[u8]>` with a null pointer,
        // so avoid that case.
        assert_eq!(len, 0);
        Box::new([])
    } else {
        Box::from_raw(ptr::slice_from_raw_parts_mut(ptr, len))
    }
}
```

You can then simplify the callers like:

```
        // safety: take ownership of the data passed in. This is OK because we
        // have configured Rust and C++ to use the same allocator, and our
        // caller won't free the `result` pointer if we return
        // NS_SUCCESS_ADOPTED_DATA.
        sender.send(Ok(boxed_slice_from_raw(result as *mut u8, result_length as usize))).expect(""Failed to send data"");
        NS_SUCCESS_ADOPTED_DATA
```

It's harmless to return `NS_SUCCESS_ADOPTED_DATA` in the null pointer case, as there was no data to adopt, so the behaviour in the caller will be exactly the same."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"There's no need to build a custom error string here. `io::Error::new` takes anything implementing `Into<Box<dyn Error>>` as the second argument, and the `Utf8Error` already implements that interface with nice error messages: https://searchfox.org/rust/rev/d2731d8e9338d8fe844e19d3fbb39617753e65f4/library/core/src/str/error.rs#105-113

Let's just pass:

```
map_err(|err| io::Error::new(io::ErrorKind::InvalidData, err.utf8_error()))
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,nit: you don't need the `std::` before `io::Result` here
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,nit: you don't need the `std::` before `io::Result` here
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"`nsString::new()` is basically free, so you can probably write `&*path.unwrap_or(nsString::new())`

I checked and was surprised when I realized I never implemented `Default` for `nsString`, but it seems I didn't, so you can't use `&*path.unwrap_or_default()`"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"I believe this path/line/column is intended for the JS source line where the error occurred, rather than for errors in fluent files (which I am guessing is what this path/loc/etc. are for?). 

Also, fwiw you can do:

```
loc.map_or((0, 0), |(l, c)| (l as u32, c as u32)),
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,nit: `if (!aPath || !aData || !aSize)`
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,I don't think you need this comment :-)
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,You missed part of `ResourceLoader` when removing it - please also remove this part :-)
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-03-01 17:40:57,"This looks super close! I added a couple of comments, but for the most part only requesting re-review due to the soundness issue."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-03-01 06:00:01,"Code analysis found 1 defect in the diff 406069:
 - 1 build error found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 406069, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/8136049a-7a51-11eb-93d6-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/406069) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=29539cb396fffad9651bd9269d884d7e3c809bf7)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-26 02:42:12,"You have touched the documentation in diff 405307, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/36ae397e-77db-11eb-9a8a-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:21,Again we shouldn't use `Rc::into_raw` here as we are passing down a weak reference into the C++ code. Instead this should be like I suggested in my comment.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:21,"We shouldn't be using `Rc::into_raw` here anymore, as we're passing a weak reference down. Once we have the correct type in the signature this should be passed as:

```
callback(promise, Some(&*res))
```

and the null case above will instead be

```
callback(promise, None)
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:21,let's use @emilio's patch for cbindgen so we can use the nice type of `Option<&FluentResource>` here.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,In addition to logging the error to the console you may want to use the `log` crate to log the error using `warn!` or similar. We have this hooked up so it will go through the standard mozilla logging infrastructure.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"I just noticed that you included this line in the config, which I assume from its name will generate a `using namespace mozilla::dom;` in the generated header file. please don't do this. We never want to generate a `using namespace` call in a header file.

If there are specific names which you need to use, I think you can rename them to include the namespace path with the `[export.rename]` section."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"nit: can we refactor this a bit to make sure `mHasErrors` is initialized before it's passed to rust code?

```
 FluentResource::FluentResource(nsISupports* aParent, const nsACString& aSource)
    : mParent(aParent), mHasErrors(false) {
  mRaw = dont_AddRef(ffi::fluent_resource_new(&aSource, &mHasErrors));
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"Can we do a check here that `index_elements` is non-null? Perhaps

```
assert!(!index_elements.is_null());
```

If we could have it potentially be null (e.g. when there are no elements), we need to do the code differently, like:

```
let index = if index_length > 0 {
  assert!(!index_elements.is_null());
  unsafe { std::slice::from_raw_parts(index_elements, index_length) }
} else {
  &[]
};
let index = index. ...;
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"Can we add `/* aLineNumber */` and `/* aColumnNumber */` comments here so it's clear what we're passing `0`s for?

Ideally we'd also note that the two strings above are actually `/* aSourceName */` and `/* aSourceLine */`"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"Please don't write out the value here as a literal. We can access the define just fine from Rust code as `interfaces::nsIScriptError::warningFlag` (https://searchfox.org/mozilla-central/source/__GENERATED__/dist/xpcrs/rt/nsIScriptError.rs#408)

It looks like you'll need to `as` it to the correct type to pass it in (not entirely sure why the codegen is using the wrong sized integer there - probably an oversight), but that is better than a magic number :-)"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,We probably don't want to `.expect` here - I could see this failing for some reason or another and I don't think we should crash.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,due to the `ManuallyDrop::new` you don't need the second `mem::forget(raw)`
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,nit: let's also do the `if (!aPath || !aObserver)` check for this function.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"Now that we've changed how we're passing around the resource, we can just accept `const ffi::FluentResource*` here again - sorry for the confusing comments mixing the old code and the new code last time."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"I totally missed this last time, but this will be wrong (undefined behaviour) if the file is empty. We should add a check like:

```
if result.is_null() {
  sender.send(Ok(Box::new([]))).expect(""Failed to send data"");
  return NS_OK;
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"You've deleted the only use of this type now, so we can delete it completely from the tree."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"BTW, this `.map(Into::into)` is probably a performance loss here. as we're actually going to end up copying the string multiple times.

I chatted with you a bit on matrix, though, and you told me that the only use of these `load_async` and `load_sync` methods are for the `FileFetcher` implementation. This means that we can streamline stuff here even more and make everything even more efficient :-)

Suggested tweaks:

`load_async` should return `-> io::Result<Box<[u8]>>` (or `-> io::Result<Vec<u8>>`) intead of `nsCString`. Creating a `nsCString` from an owned buffer like a `Box<[u8]>` unfortunately requires a copy, as the buffer in an owned `nsCString` is required to be null-terminated. We then end up copying a second time when you call `to_string()` on the `nsCString` to create the `String`. If we instead returned `Box<[u8]>` or `Vec<u8>` (which you can convert to with zero overhead from a `Box<[u8]>` with an `.into()` call https://doc.rust-lang.org/std/boxed/struct.Box.html#impl-From%3CBox%3C%5BT%5D%2C%20A%3E%3E), you can then validate that the string is valid utf-8 and convert it to a `String` using `String::from_utf8()` (https://doc.rust-lang.org/std/string/struct.String.html#method.from_utf8), again without performing any copies. 

`load_sync` should also be changed to return `io::Result<Box<[u8]>>` rather than returning a `nsCString`. Unlike in the `load_async` case we currently only have 1 copy in this path (the `to_string()` call), as the C++ knows to allocate an extra byte at the end of the string to store the null terminator. This will require some tweaks to both the c++ and rust sides of the `load_sync` method.

```
// rust
extern ""C"" {
  fn L10nRegistryLoadSync(aPath: *const nsACString, aData: *mut *mut c_void, aSize: *mut u64) -> nsresult;
}

pub fn load_sync(path: &impl nsCStringLike) -> io::Result<Box<[u8]>> {
  let mut data_ptr: *mut c_void = ptr::null_mut();
  let mut data_length: u64 = 0;
  unsafe {
    L10nRegistryLoadSync(&*path.adapt(), &mut data_ptr, &mut data_length)
        .to_result()
        .map_err(|err| Error::new(ErrorKind::Other, err))?;

    // The call succeeded, meaning `data_ptr` and `size` have been filled in with owning pointers to actual data payloads (or null).
    // If we get a null, return a successful read of the empty file.
    if data_ptr.is_null() {
      Ok(Box::new([]))
    } else {
      Ok(Box::from_raw(ptr::slice_from_raw_parts_mut(
        data_ptr as *mut u8,
        data_length as usize,
      )))
    }
  }
}
```

```
// c++
static nsresult LoadSync(const nsACString& aPath, void** aData, uint64_t* aSize) {
  nsCOMPtr<nsIURI> uri;

  nsresult rv = NS_NewURI(getter_AddRefs(uri), aPath);
  NS_ENSURE_SUCCESS(rv, rv);

  NS_ENSURE_TRUE(uri, NS_ERROR_INVALID_ARG);

  auto result = URLPreloader::ReadURI(uri);
  if (result.isOk()) {
    aRetVal = result.unwrap();
    return NS_OK;
  }

  auto err = result.unwrapErr();
  if (err != NS_ERROR_INVALID_ARG && err != NS_ERROR_NOT_INITIALIZED) {
    return err;
  }

  nsCOMPtr<nsIChannel> channel;
  rv = NS_NewChannel(
      getter_AddRefs(channel), uri, nsContentUtils::GetSystemPrincipal(),
      nsILoadInfo::SEC_ALLOW_CROSS_ORIGIN_SEC_CONTEXT_IS_NULL,
      nsIContentPolicy::TYPE_OTHER, nullptr, /* nsICookieJarSettings */
      nullptr,                               /* aPerformanceStorage */
      nullptr,                               /* aLoadGroup */
      nullptr,                               /* aCallbacks */
      nsIRequest::LOAD_NORMAL);
  NS_ENSURE_SUCCESS(rv, rv);

  nsCOMPtr<nsIInputStream> input;
  rv = channel->Open(getter_AddRefs(input));
  NS_ENSURE_SUCCESS(rv, NS_ERROR_INVALID_ARG);

  // changed the call here to be `NS_ReadInputStreamToBuffer` instead of `...ToString`, and forwarded the relevant arguments out to Rust code.
  return NS_ReadInputStreamToBuffer(input, aData, -1, aSize);
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-24 23:54:20,"nit: this takes a raw pointer for `index_elements` and dereferences it, so has to be an `unsafe` function."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-02-24 07:16:06,"Dang, that *almost* worked!

Unfortunately, I think due to https://github.com/eqrion/cbindgen/issues/326 but would have to get @emilio take, I cannot use `Option<&FluentResource>` here :(

It expands with `Option<>` in `.h` file rather than `const* FluentResource`.

I kept that part but removed the helper!"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-24 07:12:30,"The analysis task [source-test-mozlint-license](https://treeherder.mozilla.org/#/jobs?repo=try&revision=4f6265bea895810a4392982e84f6af5e57965afe&selectedTaskRun=Rk-UMxCQTWumxBrs5yyaXg-0) failed, but we could not detect any issue.
Please check this task manually.

You have touched the documentation in diff 403844, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/cddda06a-766d-11eb-94a1-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-24 01:26:20,"Code analysis found 1 defect in the diff 403695:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 403695, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/7c33d4c0-763e-11eb-b487-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/403695) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2e350789b3802bf096a297c53661618a1abf07e9)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Even though you don't want to use the variant interface for resolving promises anymore because it's not performant enough, I think we should try to be more type-safe here by using the bindings for refcounting.

```
#[no_mangle]
pub extern ""C"" fn l10nfilesource_fetch_file(
    source: &FileSource,
    locale: &nsACString,
    path: &nsACString,
    promise: &xpcom::Promise,
    callback: extern ""C"" fn(&xpcom::Promise, Option<&FluentResource>),
    status: &mut L10nFileSourceStatus,
) {
    if path.is_empty() {
        *status = L10nFileSourceStatus::EmptyResId;
        return;
    }

    let locale = match locale.to_utf8().parse() {
        Ok(locale) => locale,
        Err(..) => {
            *status = L10nFileSourceStatus::InvalidLocaleCode;
            return;
        }
    };

    *status = L10nFileSourceStatus::None;

    let path = path.to_utf8();

    match source.fetch_file(&locale, &path) {
        ResourceStatus::Missing => callback(promise, None),
        ResourceStatus::Loaded(res) => callback(promise, Some(&res)),
        res @ ResourceStatus::Loading(_) => {
            let strong_promise = RefPtr::new(promise);
            moz_task::spawn_current_thread(async move {
                callback(&strong_promise, res.await.as_ref().map(|r| &**r));
            })
                .expect(""Failed to spawn future"");
        }
    }
}
```

The C++ side would also change a bit, to instead look like this:

```
already_AddRefed<Promise> L10nFileSource::FetchFile(const nsACString& aLocale,
                                                    const nsACString& aPath,
                                                    ErrorResult& aRv) {
  RefPtr<Promise> promise = Promise::Create(mGlobal, aRv);
  if (aRv.Failed()) {
    return nullptr;
  }

  ffi::L10nFileSourceStatus status;

  ffi::l10nfilesource_fetch_file(
      mRaw.get(), &aLocale, &aPath, promise,
      [](Promise* aPromise, const ffi::FluentResource* aRes) {
        Promise* promise = const_cast<Promise*>(aPromise);
        if (aRes) {
          nsIGlobalObject* global = promise->GetGlobalObject();
          RefPtr<FluentResource> res = new FluentResource(global, aRes);
          promise->MaybeResolve(res);
        } else {
          promise->MaybeResolve(JS::NullHandleValue);
        }
      },
      &status);

  if (PopulateError(aRv, status)) {
    return nullptr;
  }

  return promise.forget();
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"I was looking at this more, and I realized that we probably don't want to do this like this, as the callback system you've set up using `CallbackClosure` etc. is probably unsound and/or leaks memory due to the way it's handling raw pointers etc.

Fortunately for us, there's a fairly simple alternative approach which takes advantage of us already supporting XPCOM inside of rust. The purpose of the callback which you're creating right now is to be wrapped by a type on the c++ side which implements `nsIStreamLoaderObserver`, which is an XPCOM interface, so we can skip all of the grossness around extern callback functions and raw pointers if we just implement that interface in rust instead.

I threw together an (untested) sketch of what a new, simpler, and safer `load_async` could look like:

```
#[derive(xpcom)]
#[xpimplements(nsIStreamLoaderObserver)]
#[refcnt = ""nonatomic""]
struct InitStreamLoaderObserver {
    sender: Cell<Option<oneshot::Sender<Result<Box<[u8]>, nsresult>>>>,
}

impl StreamLoaderObserver {
    unsafe fn OnStreamComplete(
        &self,
        _loader: *const nsIStreamLoader,
        _ctxt: *const nsISupports,
        status: nsresult,
        resultLength: u32,
        result: *const u8,
    ) -> nsresult {
        let sender = match self.sender.take() {
            Some(sender) => sender,
            None => return NS_OK,
        };

        if status.failed() {
            sender.send(Err(status));
            return NS_OK;
        }

        // safety: take ownership of the data passed in. This is OK because we
        // have configured Rust and C++ to use the same allocator, and our
        // caller won't free the `result` pointer if we return
        // NS_SUCCESS_ADOPTED_DATA.
        let result = Box::from_raw(ptr::slice_from_raw_parts_mut(
            result as *mut u8,
            resultLength as usize,
        ));
        sender.send(Ok(result));
        NS_SUCCESS_ADOPTED_DATA
    }
}

extern ""C"" {
    fn L10nRegistryLoad(
        path: *const nsACString,
        observer: *const nsIStreamLoaderObserver,
    ) -> nsresult;
}

async fn load_async(path: &nsACString) -> Result<nsCString, nsresult> {
    let (sender, receiver) = oneshot::channel::<Result<Box<[u8]>, nsresult>>();
    let observer = StreamLoaderObserver::allocate(InitStreamLoaderObserver {
        sender: Cell::new(Some(sender)),
    });
    unsafe {
        L10nRegistryLoad(path, observer.coerce()).to_result()?;
    }
    receiver.await
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,You shouldn't need this function. `nsACString` and gecko strings in general use a COW optimization which makes copying them cheap. It's probably not worth putting in the effort to do a moving call here.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"hyper-nit: to avoid potential issues here, it's probably better to immediately wrap the `Rc` in a `ManuallyDrop`, so it's clear that you're never going to drop it, like:

```
let raw = ManuallyDrop::new(Rc::from_raw(res));
mem::forget(Rc::clone(&raw));
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"You're putting this in an `extern ""C""` block, but still inside the namespace. Please move this out to be in the toplevel namesace like the  `L10nRegistryLoad` method you declare a few lines down.

That being said, you should be able to do this entirely from Rust code without this function using xpcom, if you want to:

```
use xpcom::interfaces;

fn log_simple_console_error(
  error: &impl fmt::Display,
  category: &CStr,
  from_private_window: bool,
  from_chrome_context: bool,
  error_flags: u32,
) -> Result<(), nsresult> {
  // Format whatever error argument into a wide string with `Display`.
  let mut errorStr = nsString::new();
  write!(&mut errorStr, ""{}"", error).expect(""nsString has an infallible Write impl"");

  // Get the relevant services, and create the script error object.
  let consoleService = xpcom::get_service<interfaces::nsIConsoleService>()
    .ok_or(NS_ERROR_NOT_AVAILABLE)?;
  let scriptError = xpcom::create_instance<interfaces::nsIScriptError>()
    .ok_or(NS_ERROR_NOT_AVAILABLE)?;
  unsafe {
    scriptError.Init(
      &errorStr,
      &nsString::new(),
      &nsString::new(),
      0,
      0,
      error_flags,
      category.as_ptr(),
      from_private_window,
      from_chrome_context,
    ).to_result()?;

    consoleService.LogMessage(&scriptError).to_result()?;
  }
  Ok(())
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"As with the other callers, you don't actually need `MOZ_COUNT_CTOR` and `MOZ_COUNT_DTOR` on refcounted types."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Based on my reading of the call-site, the `raw` pointer passed in was created with `Rc::into_raw`, meaning that it is actually owning, and we should recover the strong `RefPtr` reference by doing:

```
if (RefPtr<const ffi::FluentResource> raw = dont_AddRef(aRaw)) {
  // ...
} else {
 // ...
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Based on looking at the code, it seems like this actually returns an owning reference (due to the `Rc::into_raw(...)` call). We should convert our raw pointer back into the strong reference here, like:

```
RefPtr<const ffi::FluentResource> raw = dont_AddRef(ffi::l10nfilesource_fetch_file_sync(...));
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Unless you make the argument be a `RefPtr`, this `std::move` is doing nothing"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"I'm guessing that you're actually receiving a strong reference to the value from the Rust code, so this should probably be accepting `RefPtr<const ffi::FluentResource>`, as right now it's just a raw pointer and not transfering ownership."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"This seems like a super janky API. If we need `HasFile` to return a tri-state value rather than just `true`/`false`, I think it would be better to have the type return a WebIDL enum with 3 values, as it's really easy to accidentally mix up `null` and `false` in JS due to them both being falsy values."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Let's not do manual memory management for this `fs` value here. You're currently heap-allocating the nsTArray and then never freeing it, which I don't think is what we want to do here. 

Your implementation of `l10nfilesource_new_mock` currently doesn't take ownership over the `fs` value either, it just takes a borrowed reference to it, so we can just put this on the stack like:

```
nsTArray<ffi::L10nFileSourceMockFile> fs(aFS.Length());
for (const auto& file : aFS) {
  auto* f = fs.AppendElement();
  f->path = file.mPath;
  f->source = file.mSource;
}
```

Then, when you call it, instead of passing `fs`, you just pass `&fs`."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"Given that these two ctors only differ in whether they leave `mGlobal` as nullptr, could we perhaps just have:

```
explicit L10nFileSource(RefPtr<const ffi::FileSource> aRaw, nsIGlobalObject* aGlobal = nullptr);
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-02-23 21:21:29,"This is a cycle-collected class which uses reference counting, so you don't need to use `MOZ_COUNT_CTOR` and `MOZ_COUNT_DTOR` here. Please remove those calls :-)"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-23 19:22:47,"The analysis task [source-test-mozlint-cpp-virtual-final](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2faf79079c8c70a7703e21f9a161edc515278927&selectedTaskRun=HOCaAUM0SkWlq_HTyvVn8A-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-yaml](https://treeherder.mozilla.org/#/jobs?repo=try&revision=2faf79079c8c70a7703e21f9a161edc515278927&selectedTaskRun=bWIjR0q0Rums3VXHdrTlJw-0) failed, but we could not detect any issue.
Please check this task manually.

You have touched the documentation in diff 403515, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/39e533cc-760a-11eb-b07a-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-23 17:45:17,"Code analysis found 1 defect in the diff 403454:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p intl/l10n/FileSource.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/XKfW-1RTRVO8VUfl2rQE2A/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-emy4z2es25tfx3n7ytos.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

You have touched the documentation in diff 403454, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/521ce4ec-75fd-11eb-8500-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/403454) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5f7b457df3494805a5318e2c3d26258329409b97)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-23 16:33:39,"Code analysis found 1 defect in the diff 403409:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 403409, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/ce63eb0a-75f2-11eb-9398-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/403409) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=87b81f45c801f8b5fcbdeed3ab941314c4280412)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-20 16:14:21,"Code analysis found 1 defect in the diff 402354:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 402354, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/c3ce97c2-7394-11eb-a98d-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/402354) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=346a3b17765cd01062723246fb33d853c8e9c11a)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-17 01:07:51,"Code analysis found 2 defects in the diff 400751:
 - 1 defect found by clang-format
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach clang-format -s -p intl/l10n/FileSource.cpp` (C/C++)
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/KLYZRCHqTI203LgZgmkXlg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-eyzbosq2crciiibkuw2s.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

You have touched the documentation in diff 400751, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/7bc72678-70bb-11eb-9a33-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/400751) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=5dd0fa1a24f3f55726d8e77a2b2215ce8eaf6499)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-14 19:57:46,"Code analysis found 1 defect in the diff 399780:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 399780, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/f0e190c6-6efc-11eb-93f3-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/399780) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fd6baced0372cd1d0acaff94c99fff13d1678ceb)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-14 06:29:02,"Code analysis found 1 defect in the diff 399755:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 399755, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/3af5f948-6e8c-11eb-a023-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/399755) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=eded84ebe4c1e4ada504f07c516a84bf26592cab)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-02-13 22:25:30,"it doesn't :( we store each subtag very efficiently as TinyStr's which are basically u64/u32, and those subtags do deref, but the whole locale needs to be stringified.

My hope is that one day we'll get to the point where we will carry around Locale objects, not stringified versions of them, but we're not there yet."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-02-13 22:25:30,My reasoning is that it's easier to handle both scenarios of promise resolution as a similar mental model. I expect that as our Rust FFI improves this paradigm will be revisited and I'd prefer to revisit it in a centralized place :)
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,"I'm not 100% sure `ResolverHelper` with two variations is particularly useful, but anyhow sure."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,"Should we `debug_assert!(false, ""Should always resolve the helper"")` or such? This seems like an error."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,`mozilla::intl`?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,Remove redundant virtual.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,"Maybe, `fs.ReserveCapacity(aFS.Length())`?"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,just `debug_assert!(!closure.is_null())`?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,If `locale` somehow dereferences into an `&str` it'd be nice if you could use `nsCString::from(&**locale)` or such.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-12 01:31:54,"Looks like it should be from a quick look, or at least `nsIConsoleService` has thread-safe refcounting etc."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-11 05:35:20,"You have touched the documentation in diff 398282, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e1bd683e-6c29-11eb-a57b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-02-09 23:47:14,How can I verify that?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-09 22:18:53,"You have touched the documentation in diff 397547, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/f1cee43e-6b23-11eb-b8f7-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,"I don't see why we need the `MutCallback` as `resolve_mut` seems unused, am I missing something?

Seems like all this code could be simplified."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,Commented out code doesn't seem useful.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,"Add `MOZ_ASSERT_UNREACHABLE(""Unknown status"");` and `return false;` here?"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,"This comment seems weird, is it copy-pasted from somewhere?

Also, any reason `res` is declared outside of the if? Why can't this be:

```
RefPtr<FluentResource> res = new FluentResource(...);
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,"I'd probably keep doing the early error return you do above here and elsewhere fwiw:

```
let locales = match locales {
    Ok(locales) => locales,
    Err(..) => {
        *status = InvalidLocaleCode;
        return ptr::null();
    }
};
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,License missing indeed.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,Is this thread-safe?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,"You can write `namespace mozilla::intl {` instead fwiw, here and elsewhere."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-zp4gy3jjzfehipsktf6x,2021-02-05 14:12:12,Don't add `using namespace` in any header please. See https://firefox-source-docs.mozilla.org/code-quality/coding-style/coding_style_cpp.html#c-namespaces
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-05 04:00:37,"Code analysis found 6 defects in the diff 395433:
 - 1 defect found by file-whitespace (Mozlint)
 - 2 defects found by license (Mozlint)
 - 3 defects found by rustfmt (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 395433, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/13a49968-6765-11eb-8707-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/395433) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d6ff5c7c00de2452e064a0cfcfe52bcb14914754)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-04 01:07:49,"Code analysis found 6 defects in the diff 394759:
 - 1 defect found by file-whitespace (Mozlint)
 - 2 defects found by license (Mozlint)
 - 3 defects found by rustfmt (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

You have touched the documentation in diff 394759, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/67623008-6682-11eb-ae64-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/394759) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=a168b18ea3261cff87876354f2280933d9f9f7d4)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-02 17:18:00,"You have touched the documentation in diff 393944, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/d4e18e50-6577-11eb-9b1b-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-01 18:12:05,"You have touched the documentation in diff 393477, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b2787dae-64b6-11eb-b9d0-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-02-01 04:17:30,"You have touched the documentation in diff 393177, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/b7ca1970-6443-11eb-b253-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-30 01:21:53,"This is a correctness thing. The `fut` future which you passed in cannot contain borrowed references as there's nothing keeping the objects behind those references alive, so this check is catching a real bug.

You need to make local copies of the `locale` and `path` arguments which will be moved into the future."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-30 01:17:52,"You have touched the documentation in diff 392951, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/2cbd0e80-6297-11eb-a635-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-30 01:10:12,"You have touched the documentation in diff 392946, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/8ca6940c-6296-11eb-8291-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-30 00:59:45,"You have touched the documentation in diff 392945, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/a95f0b98-6295-11eb-87b3-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-01-30 00:47:52,"the `moz_task:spawn` expects static references, so I had to ""mock"" them. Is there a better way?"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-01-30 00:47:52,"`to_utf8` either wasn't there last time I worked with this, or I somehow missed it. It's perfect, thank you!"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-01-30 00:47:52,The alternative requires me to do a bunch of `map_err` in the callees where I want to hook into native Rust code which expects `io::Result`. I've done that.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"These functions should probably be written as accepting raw pointers, as they are actually taking ownership and doing other things generally not done with references."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,This `as_str_unchecked` also seems unnecessary
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"You're using `fallible` for fallibly appending to the `fs` array, but then not doing any checking on the fallible append. Please don't pass `fallible` here if you're not going to check it."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"The default state for `Nullable` is for it to be null, so this `else` case is a no-op."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"You aren't passing a strong reference to the global into this function, which looks like a use-after-free waiting to happen.

In this particular case, you can probably get away with getting rid of the global argument entirely, and just having a `promise` strong pointer argument, given that the promise was created with the global in question. You could then recover the global from the promise using `promise->GetGlobalObject()`."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Usually this would be written as a switch statement, like:

```
switch (aStatus) {
  case ffi::L10nFileSourceStatus::InvalidLocaleCode:
    aError.ThrowTypeError(""Invalid locale code"");
    return true;
  case ffi::L10nFileSourceStatus::...:
    // ...

  case ffi::L10nFileSourceStatus::None:
    return false;
}
```"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Why are you using `io::Result` here instead of just `Result<(), nsresult>`, which can be already converted to using `nsresult::to_result()`."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,this function should probably be unsafe
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Why are these `'static`. It seems extremely unlikely to me that the C++ caller is actually passing in a `nsACString` with a `'static` lifetime, so we should use a non-static lifetime here."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"again, it would be nice to use `to_utf8()` instead to avoid potential UB."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,Why do we need to use `as_str_unchecked()` here again? It would be much nicer if we could make this safe and avoid the potential UB.
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Please document the unchecked assumptions this function makes. As far as I can tell from the initial read the main one is that every entry in the `locales` array _must_ be valid UTF-8, or it triggers undefined behaviour."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Do we need to do this with `as_str_unchecked`? It seems like it would be better to use `to_utf8()` (which does invalid sequence replacements, and only allocates if it needs to), and make this function safe."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Why make this function `pub` if the type it's on isn't?

This function should also probably be `unsafe`."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"Why did you make `ReportErrorToConsole` take `*const nsCString` instead of `*const nsACString`? If you had done the latter, you could avoid an extra copy here by doing:

```
let err = error.to_string();
unsafe { ReportErrorToConsole(nsCStringLike::adapt(&err).as_ptr()) }
```

This would cause you to pass a borrowed string wrapped into a `nsACString` to the c++ code, avoiding any copies.

(on a side note, I thought this would be much nicer to write - apparently I missed quite a few convenience functions when writing the bindings >_>)"
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"This function should be marked as `unsafe` as it's accepts and dereferences raw pointers, and is therefore unsafe to call, but I suppose it's fine to not mark it as such as you're not exposing it outside of this module."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,"FWIW most `nsACString` values actually are allocated using reference-counted COW buffers, so copying them around isn't very expensive. Doesn't matter a ton here, but figured I should mention it."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-dgf7bi3p7yaq7rusttk4,2021-01-29 18:10:45,nit: extra newline
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-29 05:22:29,"Code analysis found 3 defects in the diff 392402:
 - 1 defect found by license (Mozlint)
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 392402, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/4ce69cd6-61f1-11eb-b0a4-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/392402) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=be7ca61ecfc23b90a0f647c61a691689e34d9a5e)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 05:24:27,"Code analysis found 2 defects in the diff 391853:
 - 2 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391853, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/6a6f98ee-6128-11eb-a597-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391853) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f70918368acf895262a349e6e94c7fcbfd67a348)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 05:13:17,"Code analysis found 3 defects in the diff 391848:
 - 3 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391848, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/1e7434d8-6126-11eb-a0f6-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391848) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c3f042c90931bade7b2dd4ad6fc18ce2507a215e)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 04:59:36,"Code analysis found 3 defects in the diff 391846:
 - 3 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391846, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/04dc0a16-6124-11eb-a14d-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391846) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f8011d79480239587ac801e1202e269c65d2a7ca)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-5ys4fpzbk5uw647yb3ou,2021-01-28 04:55:25,Currently `sync` returns `null || String` and async returns `Promise<undefined || String>`. What's the best way to align it? Around undefined or null?
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 03:22:03,"Code analysis found 3 defects in the diff 391806:
 - 3 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391806, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/f9b88b2c-6115-11eb-8f8e-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391806) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=c02160f8cdee653e1cdecd841918e7535c873a7a)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-28 02:10:55,"Code analysis found 13 defects in the diff 391800:
 - 1 defect found by py-black (Mozlint)
 - 12 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391800, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/507e8fd2-610d-11eb-a0a4-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391800) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8d3fe71b3f9a72da781e11974aa45b969572c514)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-27 21:36:42,"Code analysis found 14 defects in the diff 391648:
 - 1 defect found by py-black (Mozlint)
 - 13 defects found by clang-tidy

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`
 - `./mach static-analysis check --outgoing` (C/C++)

You have touched the documentation in diff 391648, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/93123f92-60e5-11eb-9de3-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391648) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=7127422bbec43746a8f394f53e423e0ec4c1622e)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-27 18:50:49,"Code analysis found 1 defect in the diff 391613:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fe29fcd3c5a5eec3343035435c95204f568d910d&selectedTaskRun=DtQum5UfQqyeJHg6-fVzWg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fe29fcd3c5a5eec3343035435c95204f568d910d&selectedTaskRun=IRNI2zPEQYiOrqVBxtddFw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fe29fcd3c5a5eec3343035435c95204f568d910d&selectedTaskRun=dcnoEtlPTQ-DfLJg4WyqJw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391613) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=fe29fcd3c5a5eec3343035435c95204f568d910d)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-27 18:44:05,"Code analysis found 1 defect in the diff 391606:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15846ad57b69df3b668d256bbf9ccf004873d0e7&selectedTaskRun=JOjeN-bVSRq2gyYVC-xCaw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15846ad57b69df3b668d256bbf9ccf004873d0e7&selectedTaskRun=RS89Qjv6TCyVABZ4HCEr5g-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15846ad57b69df3b668d256bbf9ccf004873d0e7&selectedTaskRun=VKPlCmrlSHCgfhJzDL78YA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/391606) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=15846ad57b69df3b668d256bbf9ccf004873d0e7)."
103002,https://phabricator.services.mozilla.com/D103002,Bug 1672317 - [l10nfilesource] part3: Introduce L10nFileSource backed by l10nregistry-rs.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-26 03:37:46,"Code analysis found 1 defect in the diff 390720:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f468facb5bd4175e8e02fa8a3937ad42e8f6d3d5&selectedTaskRun=C6EiOcdJQSypp1kvAmTbOQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-external](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f468facb5bd4175e8e02fa8a3937ad42e8f6d3d5&selectedTaskRun=HZTnAfoWSR-CtzCu2j9vFw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f468facb5bd4175e8e02fa8a3937ad42e8f6d3d5&selectedTaskRun=Z2dbUqj2QsW5w_zVaYTTUA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/390720) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=f468facb5bd4175e8e02fa8a3937ad42e8f6d3d5)."
102952,https://phabricator.services.mozilla.com/D102952,"Bug 1367562 - Remove deprecated frame/bitrate stats. r?ng!,r?#webidl!",PHID-APPS-PhabricatorHeraldApplication,2021-01-25 18:37:51,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
102952,https://phabricator.services.mozilla.com/D102952,"Bug 1367562 - Remove deprecated frame/bitrate stats. r?ng!,r?#webidl!",PHID-USER-d37r7ftyo2tyk7ulqtne,2021-01-25 18:37:51,Looks good
102952,https://phabricator.services.mozilla.com/D102952,"Bug 1367562 - Remove deprecated frame/bitrate stats. r?ng!,r?#webidl!",PHID-USER-7hxjutcooeszod3rg3dr,2021-01-25 18:30:56,r+ for the webidl
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-2gujohlr3u3puvz4jmvz,2021-01-26 02:52:13,"#check-in_needed handled, landing queued."
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-cje4weq32o3xyuegalpj,2021-01-25 22:02:05,"The analysis task [source-test-clang-tidy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ddc4c954ecc56a9fc4f5d6cefa5f6c130bdf2e85&selectedTaskRun=ZgxP5nflSfmuInW4qPcC7Q-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-kn67oq4fzjejmdsj2cfa,2021-01-25 20:49:15,">>! In D102852#3332570, @tongyuantongyu wrote:
> FYI, in libyuv there is `libyuv::Convert16To8Plane` that can replace `ConvertYCbCr16to8Line` and `libyuv::ARGBCopyYToAlpha` that can replace `FillAlphaToRGBA`.
> Also `I422AlphaToARGB` and `I444AlphaToARGB` were add to libyuv yesterday in this commit: https://chromium.googlesource.com/libyuv/libyuv/+/08d0dce5fca126af9601304581f6cec27440077c.

Oh, that's great! Thanks for the heads-up. I'll look at switching to using `libyuv::Convert16To8Plane` immediately as that's available in the version of libyuv we have in our tree already. As for `I422AlphaToARGB` and `I444AlphaToARGB`, I don't want to hold up this work and I don't know how much effort updating libyuv will be yet, so I'll file an issue for it and do that next."
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-a7qiaocstw5yktfdzqpx,2021-01-25 17:58:22,I imagine these should be declared in Common.h for export.
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-n22hxspt45xbfv7gzjqs,2021-01-24 07:34:31,"FYI, in libyuv there is `libyuv::Convert16To8Plane` that can replace `ConvertYCbCr16to8Line` and `libyuv::ARGBCopyYToAlpha` that can replace `FillAlphaToRGBA`.
Also `I422AlphaToARGB` and `I444AlphaToARGB` were add to libyuv yesterday in this commit: https://chromium.googlesource.com/libyuv/libyuv/+/08d0dce5fca126af9601304581f6cec27440077c."
102852,https://phabricator.services.mozilla.com/D102852,Bug 1684688 - Fix alpha support in nsAVIFDecoder. r=aosmond,PHID-USER-cje4weq32o3xyuegalpj,2021-01-24 05:22:51,"Code analysis found 9 defects in the diff 390079:
 - 9 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/390079) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=8cf7ea26bc61bb2b68cb8482b46ad8abc7b73ed1)."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-APPS-PhabricatorHeraldApplication,2021-02-10 14:26:53,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-09 13:09:51,Should these actually be different across platforms? Shouldn't the ration of the size of primary label to the size of the secondary label be constant?
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-09 13:09:51,Shouldn't this use `em` too then?
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 20:25:33,ditto
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 20:25:33,Can you use em instead of px? The actual text size may vary based on system settings.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-02-08 19:55:54,">>! In D102802#3387114, @dao wrote:
> This patch doesn't seem to apply cleanly, can you please rebase?

There are other patches in the stack, did you apply D103826 first?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,"This selector is still wrong, see ntim's comment."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,"On Linux, you changed the height of .tab-icon-sound-image but not this one."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,`  padding: 10px calc(var(--inline-tab-padding) - 2px);`
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,`  padding: 0 var(--inline-tab-padding);`
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,Should `.tab-background` just have `min-height: inherit;` to pick up the min-height from the rule you made !proton (which should then be undone)?
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,"This only seems to make sense based on the above rule, so if that becomes !proton this one should be too. But see below."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-08 16:39:42,"This patch doesn't seem to apply cleanly, can you please rebase?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-02-08 14:59:18,Sorry for the back and forth here. There was a misinterpretation of the specs and it wasn't clear that the default font size should be used for the tab label. This part of the patch has now been reverted so we will use the default font size for the tab label and a smaller (though not as small) font size for the audio indicator text.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-02-05 14:02:59,"This isn't a case where a potential improvement over there can undo the regression I'm referring to here. The primary tab label getting smaller certainly isn't helped by the fact that there's a second line with other text. So please share the reasoning for why it's okay for the primary tab label to undercut the system font size.

Sorry to be pedantic, but I want to make sure we're all on the same page."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-02-04 22:49:56,I'm going to let @dao tackle this one. I don't think we both need to look at it.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-02-03 19:00:14,"We met yesterday and got approval from accessibility that the font size changes were okay. Specifically, the addition of the visible text description of the icon improves the accessibility and that this is accessory text it is okay that it is smaller."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-01-28 21:18:39,We have a meeting scheduled for Monday to discuss this feedback with Product and UX so we can find a workable path forward.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-01-28 14:51:19,"12 is better than 11, but this is still significantly smaller than the standard text size and therefore an accessibility problem. I just tested 13px and it still seems problematic, but you may want to consult an accessibility expert. Tab labels are as essential as it gets for a web browser, so I'm afraid there's not much wiggle room here.

Note that what works on macOS doesn't necessarily work elsewhere. First of all the font rendering is different, and other OSes need to work with a plethora of lower-quality displays out of the box. Even if all these things were equal and the differences in OS defaults were arbitrary, those defaults would still matter because users may adjust to them by increasing or reducing their distance from the screen, if nothing else. So I see undercutting the default as a problem even for unimpaired users.

Long story short, I still don't really see how we can reasonably make this design work across platforms :|"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-01-26 17:58:15,"This isn't primary text so I feel less strongly about it. That said, this is basically illegible over here.

Note that the tab bar is still taller than the nav bar even with these changes."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-sqfa4zdcqmocvjmh7eqa,2021-01-26 17:58:15,"This is an accessibility no-go for primary text. I have perfect vision (thanks to laser surgery), and even I feel like I need to get uncomfortably close to my screen to read this. This is guaranteed to be a problem for people with less than perfect vision. 

Reducing the default font size even slightly (and I don't consider the above a slight reduction) will push some people (think of the grandparents) over the threshold from legible to illegible, and the remedy for that likely isn't going to be to increase the system font size just so Firefox tabs become usable again."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-25 23:48:13,nit: typo
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-25 23:48:13,"nit: typo in the pseudo selector

Also, I assume this is not what you wanted to do? You want a stronger or brighter shadow for dark themes, you're doing the exact opposite here."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-25 23:48:13,The shorthand was fine here.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-01-25 23:21:01,"This should now be 8px, which is still small though it is also adjacent to an icon which is pretty universal. The tooltip text does say ""Unmute tab"" or ""Mute tab"" but doesn't directly indicate the current state."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-01-25 23:21:01,"Yes, we likely need a new icon here. I thought the current one scaled fine considering it's SVG but I can remove this part of the patch if you'd like."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-01-25 23:21:01,"I've changed my approach here. This is supposed to be 11px on all platforms now by default, unless the user changes their default system font size."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-nlulagzxcxzordsbcw42,2021-01-25 20:16:21,This was to fix bug 1688237. I've pulled this out of the patch and put directly on bug 1688237.
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-25 18:07:18,"I think this makes the icon smaller such that it needs resizing, right? I think we want a correctly sized SVG so that it looks good on lodpi displays?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-25 18:07:18,Why the change here?
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-25 18:07:18,"This is 9.9px on my mac. That seems small for title text - it's about 1/3 smaller than the (macOS main) menubar text right above it, which makes it look tiny... Is this intentional?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-25 18:07:18,"This is 7px effective font size or thereabouts, on Windows and macOS. That's not particularly readable in English - is that really what we want? Also, have we checked if readability would be worse on other locales, especially ones using logographs (Chinese, Japanese, etc.) ? Should we consider updating the tooltip to be something like `Playing - Click to Mute` etc. so they indicate the current state in a larger font?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-25 18:07:18,"This looks like it changes a few different things. Perhaps it'd be useful to split them out, or to add a list in the extended commit message of what this changes - it seems like it's more than purely the outer dimensions of tab as the first line of the commit message suggests."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-autti2wxdumepz7idru4,2021-01-23 11:40:34,"Right - as illustrated in bug 1175132, `text-transform` is locale-dependent, so requires careful handling; can we guarantee that the element where it's applied will have (or inherit) the correct `lang` attribute for the content? Even if this isn't a concern for this specific bit of UI, as it's all under our control, there's also the question of whether forcing ALL-CAPS is appropriate in all locales (it may not be, e.g. in Georgian, where the mapping of ""case"" to the three major script variants is quite unclear IIRC; https://en.wikipedia.org/wiki/Georgian_scripts), and what should be done in its place for writing systems that have no concept of case at all (that's the vast majority of scripts).

> Personally, I think it's better to leave control to individual locales than forcing it to all locales.

I'd agree. This seems like a very English/Latin-script-centric design choice, which may be fine for English, but we shouldn't assume it's the appropriate choice for everyone and bake it into the application for all locales."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-52tll3zmlcopd5aoarnv,2021-01-23 06:11:57,"It's definitely not safe for external content, but AFAIK we periodically have bugs even within Firefox (e.g. bug 1175132).

Personally, I think it's better to leave control to individual locales than forcing it to all locales."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-23 03:00:25,"Pretty sure `text-transform` is not locale friendly, there was a bug regarding this before (can't remember sorry), where it was recommended to use `font-variant: small-caps` (or something similar) instead, since it didn't change the unicode character on other locales where the uppercase char may be missing for part of the characters. `small-caps` is most likely not what UX wants it to look like though.

I think @jfkthame had some context around this.

The comment should probably have more presentational guidance though, like ""This label should be written in ALL CAPS or whatever looks/conveys [...] on your locale."". Otherwise, localizers not using the latin alphabet may think this is in all caps for other reasons than esthetic, and may adjust the string for wrong reasons."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-23 01:04:29,"Could we use CSS text-transform here? Then we don't need new strings, and the onus isn't on localizers to remember to use ALL CAPS."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-23 00:10:33,"This change makes the selected tab even less visible on themes like on Alpenglow Dark.

Though it does look better on lighter themes. Maybe this needs a lwtheme-brighttext or lwtheme variant?"
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cic5kmkeckeqhd3ekoby,2021-01-23 00:10:33,"@dao was more involved in reviewing this, so tagging him."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-22 21:08:38,"Code analysis found 2 defects in the diff 389911:
 - 2 defects found by l10n-conflicts (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/389911) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=e86ee67facce04ec2e5b110bad83e017dcfdfce9)."
102802,https://phabricator.services.mozilla.com/D102802,Bug 1688072 - Tweak the dimensions of the tabs to get closer to the Proton design.,PHID-USER-52tll3zmlcopd5aoarnv,2021-01-22 20:54:30,"We need new IDs, the strings were already exposed for localization unfortunately."
102752,https://phabricator.services.mozilla.com/D102752,Bug 1687948 - [devtools] Move helper_screenshot_node.js content to shared-head. r=jdescottes.,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-25 22:56:12,Thanks for promoting those helpful helpers :)
102752,https://phabricator.services.mozilla.com/D102752,Bug 1687948 - [devtools] Move helper_screenshot_node.js content to shared-head. r=jdescottes.,PHID-USER-dpdc2o7i5cltf25wy6ul,2021-01-25 06:25:03,rebase
102702,https://phabricator.services.mozilla.com/D102702,Bug 1688164 - Synthesize name for WIN32 error codes. r=#dom-workers-and-storage,PHID-APPS-PhabricatorHeraldApplication,2021-01-22 08:39:13,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
102652,https://phabricator.services.mozilla.com/D102652,Bug 1688730: Test table layout caching r?eeejay,PHID-USER-lmegrwffx67e2xxsnkfv,2021-01-22 20:43:10,yeah oops didn't mean to phab the whole patch stack 😬
102652,https://phabricator.services.mozilla.com/D102652,Bug 1688730: Test table layout caching r?eeejay,PHID-USER-4uriz64mjqgntzxtsx7a,2021-01-21 22:29:46,i think you didn't mean to stage all these commented tests
102652,https://phabricator.services.mozilla.com/D102652,Bug 1688730: Test table layout caching r?eeejay,PHID-USER-4uriz64mjqgntzxtsx7a,2021-01-21 22:29:46,and `EVENT_TABLE_STYLING_CHANGED`?
102601,https://phabricator.services.mozilla.com/D102601,"No Bug, mozilla-esr78 repo-update HSTS HPKP remote-settings tld-suffixes - a=repo-update",PHID-USER-xzwtemgjb3abai5r6iul,2021-01-25 11:23:48,skipped during rc week
102451,https://phabricator.services.mozilla.com/D102451,"Bug 1687709 - enable the CPU utilization feature by default for startup profiling, r=gerald.",PHID-USER-6gilzlesrxygczj5xep5,2021-01-21 11:51:43,Thank you.
102451,https://phabricator.services.mozilla.com/D102451,"Bug 1687709 - enable the CPU utilization feature by default for startup profiling, r=gerald.",PHID-USER-6gilzlesrxygczj5xep5,2021-01-20 20:44:03,"For consistency, it'd be great if you could update the comment to explain `CPUUtilization`.

(And same below.)"
102451,https://phabricator.services.mozilla.com/D102451,"Bug 1687709 - enable the CPU utilization feature by default for startup profiling, r=gerald.",PHID-USER-6gilzlesrxygczj5xep5,2021-01-20 20:44:03,"See note about updating the comment.

But r+ anyway, and I'd be fine with landing as-is if you like, since that feature should eventually be made non-optional (and therefore `ProfilerFeature::CPUUtilization` would be removed)."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-27 19:55:28,Fixed failing tests
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-27 13:07:12,factored out into helper
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-27 13:06:59,"Okay, I did it :)

Since we're doing an early return here, I also did it for the other ones.
There was no way `stringKey` could've returned as `null` anyway, because of the `default` case that throws."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-27 13:06:59,"//If// it's okay, could you land it? :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-05-26 21:31:42,"I would just immediately `return` the result of `this._getHttpsOnlyCapabilityL10nId(capability)`, but yeah.

My thinking is that you've got a method that used to base its decision on just 1 thing (the `capability` argument) and now needs a special case for exactly 1 type of dialog, so making the code dealing with that special case take up as little of the generic method as possible helps understanding."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-26 21:11:11,"Umm, personally I think it's easier to understand this way :)

Were you thinking something like?
```
lang=js
if (this._type == ""https-only-load-insecure"") {
  stringKey =  _getHttpsOnlyCapabilityL10nId(capability);
}
```"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-26 21:11:10,"@Gijs If you think I should implement the helper I can (see comment) :)
Otherwise, could you land it for me?

Btw thanks for the quick review ^^"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-26 21:06:32,Rebase and fixed oversight
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-05-26 16:07:55,Might be worth factoring this out to a helper?
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-20 11:30:42,changed localization IDs
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-05-20 05:24:10,"Looking at the strings in isolation (no code or screenshots), I realized I'd have some issues figuring out how these are used.

Let's change these IDs to be more semantic, so it's evident that they're buttons.

```
permissions-button-off
permissions-button-off-temporarily
```"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-05-20 05:24:10,"A small nit on the IDs for the buttons, but looks good to me."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 20:31:51,Replaced Firefox with brand-short-name
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 20:31:49,Ah figured it out ^^
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 20:22:55,"Whoops, thanks!

I get an error `[fluent][resolver] errors in en-US/permissions-exceptions-https-only-desc: Resolver error: Unknown term: -brand-short-name.`. Any clue why? Do I need to import these variables somewhere?"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 20:22:55,"The ratio is hardcoded to be the website column is hardcoded to be 3x as long as the status, so there would be overflow.
But the modal can get resized.

{F2852228}"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-05-19 20:09:02,"Besides fixing the linting error, replace the hard-coded Firefox with the brand-short-name term."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-05-19 20:09:02,How does the layout cope with a much longer translation for this?
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 20:05:34,Fixed linter warning
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-cje4weq32o3xyuegalpj,2021-05-19 20:00:03,"Code analysis found 1 defect in the diff 440412:
 - 1 defect found by fluent-lint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/440412) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=ab51aef6e93b3960cc313c1dee6fd3fee9cb32d5)."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-05-19 19:57:37,"After all these years we have a final copy now (see attached image)

Beyond the description, we also changed the capability labels and buttons to ""Off temporarily"" and ""Off"", because that matches the phrasing we use in the site-identity panel.

{F2852179}"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-02-05 06:58:49,Taking out of the queue while waiting an answer on the copy.
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-02-03 11:39:34,"@JulianWels 
What's the plan for this? Are you waiting for feedback from content, or do you plan to land it? If the plan is to go ahead without official copy, I still think we need to fix the grammar."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-02-03 11:38:16,np!
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-02-03 11:37:40,"@johannh 

Sorry, I was removing fluent-reviewers and apparently I removed your review instead :-("
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-02-03 11:31:58,"Ok, thanks and no worries. I don't think we can solve the HTTP/HTTPS and mixed content issue in this patch, though it's probably good to keep it in mind :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-02 22:49:15,"You're right, the difference is `https://`-exceptions are for mixed-content issues and `http://`-exceptions are for when the top-level site doesn't support https at all.

Adding an exception through the error page, only creates one for `http://`, while adding one through the identity-panel creates one for the current scheme (which basically has to be `https://` unless you're on the error page).

The point why I think both should be added is because it's probably not obvious for users what the difference is. So that's why I kept it :)

-----

Regarding mixed-content blocking: You're sadly right that this is an issue :(

`security.mixed_content.upgrade_display_content` has been turned on in Nightly, and when you go to https://gusuwang.com/ exempting the page from HTTPS-Only upgrades doesn't fix the site.

But maybe at this point, it could be considered a web-compat issue, since chrome is upgrading passive mixed-content already."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-02 22:49:15,"Sorry, I must've not seen them! :("
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-02-02 12:27:11,This wasn't addressed
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-02-02 12:27:11,I don't think this was answered
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-01 13:53:44,"You're right that the sentence is not great. But as I said, I just put something (bad) down until content gets time to look at it.

I like your suggestion though :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-01 13:51:51,"Removed it and it was working just fine ^^

Thanks for pointing that out!"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-01 13:51:51,"I mean, `Ci.nsICookiePermission.ACCESS_SESSION` and `Ci.nsIHttpsOnlyModePermission.LOAD_INSECURE_ALLOW_SESSION` are both custom flags anyway, so I think it makes sense to have that be explicit in the html :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-02-01 13:51:51,"Um, this primarily a leftover from when HTTPS-Only was part of the permissions UI in the doorhanger,. That code didn't differentiate between different expiries (and as far as I remember it would've been a lot of work to add that).

I mean the same is true here, everything just checks for capability. But this code here is a lot simpler than the one for managing permissions, so we could open a bug to remove `LOAD_INSECURE_ALLOW_SESSION` and change the code where it's used to recognize expiry as well."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,I guess improving this strings also helps resolve some of the potential confusion around http vs. https origins :)
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,"Hmmm I forgot that we had this functionality. I don't really understand how that makes sense for HTTPS-only mode, is there any point in adding both http and https origins here?

Trying to image the difference, is the point of it that https://example.com may load mixed content and only http://example.com may load as top-level insecure? If that's the case then it's a bit weird having another permission on top of mixed content and may lead to conflict if we decide to always block/upgrade all mixed content.

Would be great if you could explain this to me some more :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,Please move this to head.js and delete https://searchfox.org/mozilla-central/rev/69babd862de70cabfa1d0a369d38e4881bd41e4d/browser/components/preferences/tests/browser_cookies_exceptions.js#541
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,"That's pretty extreme for a new test, can you elaborate on this in a comment and/or split the test up?

Edit: Oh I realize that this was copied from browser_cookies_exceptions.js. The tests do look pretty different though, so maybe we can remove this line for now and see how try likes that?

browser_cookies_exceptions.js should have had a comment :("
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,"Having two buttons seems a little complicated when `gPermissionManager.addPermission` could just check `this._type` and change to `Ci.nsIHttpsOnlyModePermission.LOAD_INSECURE_ALLOW_SESSION` based on that, no?

I guess it also makes it a little more explicit that there's a difference in behavior here, so I don't really mind either way, just wanted to say that I might have done this differently :)"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,"It doesn't really matter for this bug (and maybe I just need to be reminded of this), but I'd be interested in why you needed to have a separate capability for session expiry instead of just setting the expiry and `ALLOW_ACTION`."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,I don't think this label is included in your dialog
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,This should be permissions-exceptions-https-only-desc
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,nit: feels like the indent is off here
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-qlxs3e2gjycjgcffqf6k,2021-01-26 10:44:20,This looks great but there's enough nits and questions here that I'll want to take another quick look anyway :)
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-52tll3zmlcopd5aoarnv,2021-01-21 06:50:00,"""which websites are allowed to load HTTP or HTTP resources"": this seems a bit off? In the first part ""HTTP"" is the object loaded by a website.

Maybe: 

> You can specify which websites can be accessed using HTTP or are allowed to load HTTP resources when HTTPS-Only Mode is enabled."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-20 16:16:59,"Automated hooks are nice but happily we can still make our own decisions if called for - having skimmed the patch, I think Johann is probably a better reviewer here."
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-01-20 15:12:32,"Ah, I need a preferences reviewer. Sorry!"
102401,https://phabricator.services.mozilla.com/D102401,Bug 1662710 - Added UI to manage HTTPS-Only Mode exceptions from about:preferences.,PHID-USER-asgyxtv3cyxddvwqjw63,2021-01-20 15:11:22,"Hi,
this patch extends the permissions dialog so that HTTPS-Only exceptions can get managed from a button on `about:preferences#privacy`.

Fluent strings are not final yet, they'll probably change."
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-USER-6foj6bsd4snugfckb357,2021-02-23 23:25:31,I added the suggested comment and am ready to land.
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-USER-b567qwxved23xbtlnn6y,2021-01-20 15:38:01,"This looks good to me, as @acreskey mentioned, we should leave a comment above this line to mention the bug number and the reason for using this url. Unfortunately, since this is a hook, it has no unit tests."
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-USER-bnf2m3l7by722is7pmwj,2021-01-19 23:35:46,Please wait for Sparky's thoughts.
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-APPS-PhabricatorHeraldApplication,2021-01-19 23:35:34,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-USER-bnf2m3l7by722is7pmwj,2021-01-19 23:35:34,"I think this is a good change.
Consider adding a comment around the URL to describe the reason for selecting it.
(non-mozilla so it doesn't piggypack on browser connections, controllable by us, and not throwing traffic at an arbitrary site)."
102351,https://phabricator.services.mozilla.com/D102351,Bug 1670247: change VIEW perftest page to our github.io. r=acreskey,PHID-USER-6foj6bsd4snugfckb357,2021-01-19 22:11:49,try: https://treeherder.mozilla.org/jobs?repo=try&revision=02b2fe59e1f229b88ea3d0c3eadb0be271637e43
102300,https://phabricator.services.mozilla.com/D102300,Bug 1687463 - Part 5: Replace mozilla::ArrayEnd with std::end. r=jonco!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-01-21 13:40:02,Update part two to use js_strlen
102300,https://phabricator.services.mozilla.com/D102300,Bug 1687463 - Part 5: Replace mozilla::ArrayEnd with std::end. r=jonco!,PHID-APPS-PhabricatorHeraldApplication,2021-01-19 14:41:02,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 22:11:08,"Still not sure I entirely get this, but I trust smaug's code, so I can work on understanding this without blocking."
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 22:08:15,"I see, thanks!"
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 22:08:15,"I don't mind either way, just wanted to make sure I understood."
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-02-01 22:04:52,So this test is adapted from [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1686696#c2 | this ]]. This will make `window.onmessage` and `culprit` both block main thread.
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-ylrjjugid56tj3jy4vlz,2021-02-01 22:04:52,Yep actually we can use existing file. The reason I use this file in the beginning is because this test is adapted from this [[ https://bugzilla.mozilla.org/show_bug.cgi?id=1686696#c2 | test ]].
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,"Could you explain this message posting part? This triggers 1 millisecond blocks, is that correct? How do these help with the blocking the culprit will already be doing?"
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,Nit for acronym naming per https://google.github.io/styleguide/cppguide.html#General_Naming_Rules
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,"This initially reads like the number of events we expect once the test is done, but if I understand correctly is actually the stopping condition for the test.

To disambiguate this we could add a comment, something like `The number of timeupdate events the test expects to observe without error. The test will stop after this many events.` This helps clarify that this number is a stopping condition, rather than a number we expect to verify after some other stopping condition is reached.

Or we could rename this something like `sNumPeriodicTimeupdatesToEndTestAfter` (which is a bit long, but I'm having trouble thinking of something shorter).

If you keep the current name, I'd suggested renaming it to `sExpectedPeriodicTimeupdateCount`."
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,"Out of interest, is there something special about this new file that makes it better for this test?"
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-yzgkpxbq6src7zt72e2b,2021-02-01 19:08:59,LGTM. A few nits and I want to make sure I understand the blocking logic correctly.
102250,https://phabricator.services.mozilla.com/D102250,Bug 1686696 - part4 : add test.,PHID-USER-cje4weq32o3xyuegalpj,2021-01-19 03:00:05,"The analysis task [source-test-coverity-coverity](https://treeherder.mozilla.org/#/jobs?repo=try&revision=61b7e9c3a4af2b18f0afad21fc306a9f604a10a2&selectedTaskRun=ez3ieVppSnuUNag3wQ9jaA-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
102149,https://phabricator.services.mozilla.com/D102149,Bug 1686936 part 7 - Make GetIndexedPropertiesInRange work with large buffers. r?anba!,PHID-USER-ir4emeapesorzd6nq5ut,2021-01-18 14:37:24,Thanks for the test! I verified it hits this code path and added it.
102149,https://phabricator.services.mozilla.com/D102149,Bug 1686936 part 7 - Make GetIndexedPropertiesInRange work with large buffers. r?anba!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-01-18 12:51:41,"We could test this with something like:

```lang=js
// Length mustn't exceed UINT32_MAX.
var len = 4 * 1024**3 - 1;

var ta = new Int8Array(len);

ta[len - 1] = 1;

// The SliceSparse optimisation is only used for native objects which have the
// ""indexed"" flag set.
var o = {
    length: len,
    100000: 0, // sparse + indexed
    __proto__: ta,
};

// Collect sufficient elements to trigger the SliceSparse optimisation.
var r = Array.prototype.slice.call(o, -2000);

assertEq(r.length, 2000);
assertEq(r[r.length - 1], 1);
```"
102099,https://phabricator.services.mozilla.com/D102099,Bug 1130891 part 5 - Add test for the copy behavior. r?smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-01-18 09:25:39,rs+
102099,https://phabricator.services.mozilla.com/D102099,Bug 1130891 part 5 - Add test for the copy behavior. r?smaug,PHID-USER-g6zdcylnkx6tkkmpjll5,2021-01-17 04:57:48,XHTML test is not added because it's unclear what ruby should look like in XHTML.
101949,https://phabricator.services.mozilla.com/D101949,Bug 1686977 - remove fxa only option from save to pocket button.,PHID-APPS-PhabricatorHeraldApplication,2021-01-15 19:02:46,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
101899,https://phabricator.services.mozilla.com/D101899,Bug 1686692 - Part 25: Remove MGetPropertyPolymorphic. r=jandem!,PHID-USER-cje4weq32o3xyuegalpj,2021-01-15 12:12:56,"Code analysis found 2 defects in the diff 386968:
 - 2 build errors found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/aXHa5mmPRsmULuTS2yIfXw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-w7slfitfn4jk277stkxp.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/386968) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0fb7cb41bf5227b3e062ac978d4a422e1e2ecb1f)."
101849,https://phabricator.services.mozilla.com/D101849,Bug 1683932 - [WIP] Create a wrapper for attachShadow so that custom elements using it immediately handle DOM Fluent methods,PHID-USER-cje4weq32o3xyuegalpj,2021-01-19 04:23:38,"Code analysis found 1 defect in the diff 388063:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/388063) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b2cdb5024e1a844fe1832cf14b5794dece2f8255)."
101849,https://phabricator.services.mozilla.com/D101849,Bug 1683932 - [WIP] Create a wrapper for attachShadow so that custom elements using it immediately handle DOM Fluent methods,PHID-USER-cje4weq32o3xyuegalpj,2021-01-19 01:50:03,"Code analysis found 1 defect in the diff 388031:
 - 1 defect found by eslint (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/388031) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=d86b18a0d40e52814bb177bea17bd2139e7d5aeb)."
101799,https://phabricator.services.mozilla.com/D101799,Bug 1686767 - Unhide urlbar.extension.enabled pref and add experimental APIs to set it. r?adw!,PHID-USER-s4ef4eaetjgrdjzssh5o,2021-01-14 23:43:57,Added missing tests. Try: https://treeherder.mozilla.org/#/jobs?repo=try&revision=ff8d8b04cd58f9ef17ad4b66f82cb9d9a06eaf6c
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-4ytd6b7d62yvifo7nfyh,2022-01-05 17:47:57,">>! In D101748#4371592, @myfreeweb wrote:
> D109492 already fixed the build, so it won't land as-is. I guess I could redo this change, but what is the uptime even used for?

Sorry for the delay, this fell off my radar (yikes, twice for one patch 😔)
I'm just seeing usages for [[ https://searchfox.org/mozilla-central/source/toolkit/components/telemetry/core/TelemetryCommon.cpp#104 | telemetry ]], so we can track performance."
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-v73qjai2ycl53ivpkzaq,2021-12-20 21:04:14,"D109492 already fixed the build, so it won't land as-is. I guess I could redo this change, but what is the uptime even used for?"
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-xsug3d47ikapt73uamb6,2021-12-20 17:22:10,@myfreeweb do you still want to land this patch?
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-12-20 17:20:55,"Makes sense to me, thanks!"
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-xsug3d47ikapt73uamb6,2021-12-20 12:21:47,Seems that it didn't have a reviewer
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-cje4weq32o3xyuegalpj,2021-01-15 10:55:26,"Code analysis found 1 defect in the diff 386915:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p mozglue/misc/Uptime.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/CEnMLGv6TXKMnUHhev1jSw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-rpxckroe2kq3q6bqsngf.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/386915) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=0897b159e6bbd7cdb5f44306d7207ea1a06dcbc9)."
101748,https://phabricator.services.mozilla.com/D101748,Bug 1686713 - Fix mozglue/misc/Uptime build on *BSD,PHID-USER-cje4weq32o3xyuegalpj,2021-01-14 13:10:43,"Code analysis found 1 defect in the diff 386315:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p mozglue/misc/Uptime.cpp` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/YtRUbAvVQRKX8iR5K_fRnA/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-m3qlgja74trvbjobn62j.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/386315) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=430addbd5a8606178f61de0e063f961243748259)."
101698,https://phabricator.services.mozilla.com/D101698,Bug 1686615 - regenerate all .pem.certspec files into their .pems r=#intermittent-reviewers,PHID-APPS-PhabricatorHeraldApplication,2021-01-14 16:11:36,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
101698,https://phabricator.services.mozilla.com/D101698,Bug 1686615 - regenerate all .pem.certspec files into their .pems r=#intermittent-reviewers,PHID-USER-yswzq6r5w6zw63iufpwl,2021-01-14 16:11:36,"This looks right, but I'd like Dana to confirm as well.

Do we have a clean try run for this stack?"
101598,https://phabricator.services.mozilla.com/D101598,Bug 1685303: part 10) Annotate `nsFrameSelection::HandleClick` with `MOZ_CAN_RUN_SCRIPT`. r=smaug,PHID-USER-eltrc7x5oplwzfguutrb,2021-01-14 10:17:22,"Yes, simpler. Will change it."
101598,https://phabricator.services.mozilla.com/D101598,Bug 1685303: part 10) Annotate `nsFrameSelection::HandleClick` with `MOZ_CAN_RUN_SCRIPT`. r=smaug,PHID-USER-eltrc7x5oplwzfguutrb,2021-01-14 10:17:22,"It's the reason, why `MOZ_KnownLive` is there. Otherwise, it's unclear."
101598,https://phabricator.services.mozilla.com/D101598,Bug 1685303: part 10) Annotate `nsFrameSelection::HandleClick` with `MOZ_CAN_RUN_SCRIPT`. r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-01-13 21:22:52,"Just make this a strong variable, and then no need for pinnerContent."
101598,https://phabricator.services.mozilla.com/D101598,Bug 1685303: part 10) Annotate `nsFrameSelection::HandleClick` with `MOZ_CAN_RUN_SCRIPT`. r=smaug,PHID-USER-7hxjutcooeszod3rg3dr,2021-01-13 21:22:52,Not sure the comment is particularly useful.
101547,https://phabricator.services.mozilla.com/D101547,Bug 1679730 - Part 6: Enable composition mochitests for SmtpService.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-01-13 12:37:35,"This landed (with the comments fixed) as https://hg.mozilla.org/comm-central/rev/02186a1c318638bd1a713f989d183b2152cbc632
I don't know why the bot didn't close this, but maybe it's releated that moz-phab couldn't apply these two changesets for some reason, so I grabbed them from try instead."
101547,https://phabricator.services.mozilla.com/D101547,Bug 1679730 - Part 6: Enable composition mochitests for SmtpService.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-01-13 09:14:09,"To make it clear, maybe add a comment 
// ""S: "" to denote data from the Server.


Similarly for client below"
101547,https://phabricator.services.mozilla.com/D101547,Bug 1679730 - Part 6: Enable composition mochitests for SmtpService.jsm. r=mkmelin,PHID-USER-c5gx2n5wnlaytpohtj4m,2021-01-13 09:14:09,Yes this is a fairly nice solution! Do note it in the documentation though.
101547,https://phabricator.services.mozilla.com/D101547,Bug 1679730 - Part 6: Enable composition mochitests for SmtpService.jsm. r=mkmelin,PHID-USER-dw5lykey6useghnnszst,2021-01-13 06:19:12,Try: https://treeherder.mozilla.org/jobs?repo=try-comm-central&revision=e7cf314b58703dd30477ca64ae3b73
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-13 10:56:49,Thanks!
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-erxup3oqd7if4an5l7ut,2021-01-12 14:36:13,">>! In D101447#3291814, @Gijs wrote:
>> filtering should just clear the current selection, it seems the most common behavior around.
> 
> where did you see this? I don't have a strong opinion about clearing entirely vs. removing from selection when searching.

First of all it would be consistent with what we do in the bookmarks and history views, that were originally derived from Windows explorer behaviors.
In current Windows explorer the search view is usually grouped, so a completely different view for which the original selection doesn't make sense. 
In Chrome I can't check because once I select all in the bookmarks view the search field goes away, it looks like for them it doesn't make sense to select all and then search, so I assume is again considered separate workflows.
In MacOS finder it's the same, even if I search, select all, refine the search, the selection is canceled."
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-12 14:28:30,">>! In D101447#3291718, @mak wrote:
> To clarify, I selected everything in a full list... then I start a search, it looks like I'm starting a new workflow, unrelated to the previous select all, as such I'd consider retaining the full selection a bug.

That would solve the issue, yeah. Out of curiosity, you said:

> filtering should just clear the current selection, it seems the most common behavior around.

where did you see this? I don't have a strong opinion about clearing entirely vs. removing from selection when searching."
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-erxup3oqd7if4an5l7ut,2021-01-12 14:07:50,"To clarify, I selected everything in a full list... then I start a search, it looks like I'm starting a new workflow, unrelated to the previous select all, as such I'd consider retaining the full selection a bug."
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-erxup3oqd7if4an5l7ut,2021-01-12 13:47:39,"Hm, I suppose filtering should just clear the current selection, it seems the most common behavior around. wdyt?"
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-7kwqcpqrdv7xuk47hcvc,2021-01-12 13:29:42,"This will fix the order of operations in the bug report, but not the reverse, I think (filtering after selecting) - that would need another ""select all"" operation like in the test. I think as a user I would expect that any hidden items are not part of the selection even without re-executing the ""select all"" operation."
101447,https://phabricator.services.mozilla.com/D101447,Bug 1684524 - Selecting all downloads after a search should not select excluded downloads. r=Gijs,PHID-USER-cje4weq32o3xyuegalpj,2021-01-12 10:35:53,"The analysis task [source-test-mozlint-license](https://treeherder.mozilla.org/#/jobs?repo=try&revision=186bba19ac44798edee83272e6cb85c4a4d66964&selectedTaskRun=Ntd_NNj1SmKwcyarx3wo0g-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
101396,https://phabricator.services.mozilla.com/D101396,Bug 1686052 - Part 9: Remove no longer needed locale maximization when removing likely subtags. r=jwalden!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-06-04 17:29:18,Rebase and apply review comments
101396,https://phabricator.services.mozilla.com/D101396,Bug 1686052 - Part 9: Remove no longer needed locale maximization when removing likely subtags. r=jwalden!,PHID-APPS-PhabricatorHeraldApplication,2021-02-09 03:43:53,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
101346,https://phabricator.services.mozilla.com/D101346,Bug 1686890 - Add tests. r?iain!,PHID-USER-km7hincdysgecqq3q4aq,2021-01-11 18:05:08,`lenght` -> `length`?
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-06-14 14:09:21,"Code analysis found 1 defect in the diff 450630:
 - 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/450630) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=602f2458c959f448425d78127e26db5513e51a81)."
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-06-11 22:27:37,"Code analysis found 3 defects in the diff 450359:
 - 2 build errors and 1 defect found by clang-tidy

You can run this analysis locally with:
 - `./mach static-analysis check --outgoing` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/e1fjFFayRPGjtC7A6f-Fpg/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-b7oaa3auob3uzfqtmzk3.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/450359) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=b6615caa6955405d315bf0e4f25a7a95c8de2477)."
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-01-12 02:00:53,"Yeah, that's better solution."
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-pet3y5enxcdor4sofm4g,2021-01-11 12:54:47,"Additional signature sounds good for now, but ultimately I wonder we could use `Result<>` in binding so that it can be removed from the parameter list altogether."
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-01-11 09:38:09,"Typically, `ErrorResult` is last argumrnt and this new argumrnt is optional. So, maybe it's hidden from developers who use this method. But indeed, this is not usually set to non-default value. On the other hand, I don't like this irregular order. How about to add new overloads which have additional argument befor `ErrorResult`, instead?"
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-fvn6k7ttmglwtkmvc7ur,2021-01-11 09:38:09,The last changeset indicates that this is tested.
101246,https://phabricator.services.mozilla.com/D101246,Bug 1677253 - Part 2: Detect direction change in SelectionChangeEventDispatcher r=masayuki,PHID-USER-cje4weq32o3xyuegalpj,2021-01-09 01:34:20,"Code analysis found 1 defect in the diff 384506:
 - 1 defect found by clang-format

You can run this analysis locally with:
 - `./mach clang-format -s -p dom/base/Selection.h` (C/C++)

For your convenience, [here is a patch](https://firefox-ci-tc.services.mozilla.com/api/queue/v1/task/WGu5_RPmSj-baW9Q4MmGTw/runs/0/artifacts/public/patch/source-test-clang-format-PHID-DIFF-u3azultsnlhp64wypbzm.diff) that fixes all the clang-format defects (use it in your repository with `hg import` or `git apply -p0`).

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/384506) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=20cfa536b23869bdff253173fbf24936a2f7ebd4)."
101196,https://phabricator.services.mozilla.com/D101196,Increase stack size on win32 debug,PHID-APPS-PhabricatorHeraldApplication,2021-01-08 17:08:52,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
101196,https://phabricator.services.mozilla.com/D101196,Increase stack size on win32 debug,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-01-08 17:08:52,Makes sense to me
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-ux2opawd2pljply62dgl,2021-02-01 11:53:09,">>! In D101146#3357770, @janv wrote:
> The title needs to be adjusted: Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit.

Right, I updated the title."
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-02-01 11:49:41,The title needs to be adjusted: Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit.
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-ux2opawd2pljply62dgl,2021-01-29 15:13:05,It's using a private typedef of `QuotaManager`.
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-ux2opawd2pljply62dgl,2021-01-29 15:13:05,"It might be avoided, but currently it's accessing private members of `GroupInfo`, which `QuotaManager` is a friend of. I think it's better to keep it like that for now."
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-ux2opawd2pljply62dgl,2021-01-29 09:27:53,"Not sure why I made them member functions, I'll check that again."
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-ux2opawd2pljply62dgl,2021-01-29 09:27:53,">>! In D101146#3351908, @janv wrote:
> The title needs to be adjusted (the methods have been renamed).
> 
>>Sort them by the LRU timestamp
> Well, it's not ""LRU timestamp"", 

Yeah, thinking about this again, this phrase doesn't make sense at all... 

> it's rather the access time which is sometimes called just ""timestamp"" in other places of the code (which may be confusing).
> I think I made a mistake long time ago when I created ""OriginInfoLRUComparator"" function, it should be ""OriginInfoAccessTimeComparator"".
> 
> Other than that, thanks for a nice refactoring/optimization!"
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-01-29 08:54:17,"As I mentioned, it seems these don't have to be member methods."
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-01-29 08:54:17,"This doesn't have to be a QM member method. The name of this method is correct, I mean the ""LRU"" part."
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-01-29 08:54:17,This doesn't have to be a QM member method.
101146,https://phabricator.services.mozilla.com/D101146,Bug 1685677 - Harmonize LockedGetOriginInfosExceedingGroupLimit and LockedGetOriginInfosExceedingGlobalLimit. r=#dom-workers-and-storage,PHID-USER-w3xgxc7csmj4jxo3ac5c,2021-01-29 08:54:17,"The title needs to be adjusted (the methods have been renamed).

>Sort them by the LRU timestamp
Well, it's not ""LRU timestamp"", it's rather the access time which is sometimes called just ""timestamp"" in other places of the code (which may be confusing).
I think I made a mistake long time ago when I created ""OriginInfoLRUComparator"" function, it should be ""OriginInfoAccessTimeComparator"".

Other than that, thanks for a nice refactoring/optimization!"
101096,https://phabricator.services.mozilla.com/D101096,"Bug 259640, add some reftests that verify that scrollbar marks are drawn, r=tnikkel",PHID-USER-zbycu7sc7ae6x64yn5sk,2021-02-03 17:55:20,I ended up removing one of the tick marks from the reftest and modifying the test a bit as it was failing too often. The current version seems to be more reliable.
101096,https://phabricator.services.mozilla.com/D101096,"Bug 259640, add some reftests that verify that scrollbar marks are drawn, r=tnikkel",PHID-USER-uolr7ryycb5yqn6q4r4x,2021-01-11 21:39:13,Thanks!
101096,https://phabricator.services.mozilla.com/D101096,"Bug 259640, add some reftests that verify that scrollbar marks are drawn, r=tnikkel",PHID-USER-uolr7ryycb5yqn6q4r4x,2021-01-08 00:43:08,"Thanks!

Hmm, could you create a equality test (maybe with fuzzy) by using an iframe and then placing some coloured divs in the parent document over top the scroll bar for the ticks? That seems like it would work even though it's not a top level content document, or is it more complicated then that? It doesn't have to be perfect, just something that checks that we get approximately an expected rendering."
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-15 08:47:32,backout
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-14 17:42:35,rebase
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-14 08:22:25,rebase
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-12 09:36:40,rebase
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 22:22:11,address review comments
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 16:42:01,sure
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 16:42:01,"From what I can read at https://developer.mozilla.org/en-US/docs/Archive/Mozilla/XUL/menupopup I think only `menuitem` is relevant.  

A `menupopup` can also contain submenus (using a `menu` element), but inside of this submenu, we should again have a `menupopup` & `menuitem` elements."
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 16:42:01,I think this is tested in the next changeset in test_sendkeys_menupopup.py L94-97
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 16:42:01,Thanks for the review!
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-jp26w7fkaeadar63vok2,2021-01-08 14:49:06,What elements beside `menuitem` would we have to handle here?
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-jp26w7fkaeadar63vok2,2021-01-08 14:49:06,Might also be good to have a test for that.
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-jp26w7fkaeadar63vok2,2021-01-08 14:49:06,"{nav,  icon=info-circle, name=nitpick:} move it up before the if condition, so the returned element can directly be re-used."
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 12:08:57,testing-flag: a dedicated test is added in the next changeset
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-08 12:01:52,Address review comments
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-jp26w7fkaeadar63vok2,2021-01-07 20:17:21,"Yes, we should try to keep the webdriver specific handling. As suggested on the bug we should special case the context menu like we do here for body and html."
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-cje4weq32o3xyuegalpj,2021-01-07 18:38:26,"Code analysis found 1 defect in the diff 383856:
 - 1 defect found by py-black (Mozlint)

You can run this analysis locally with:
 - `./mach lint --warnings --outgoing`

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__).

You can view these defects on [the code-review frontend](https://code-review.moz.tools/#/diff/383856) and on [Treeherder](https://treeherder.mozilla.org/#/jobs?repo=try&revision=467a262ec2de0df319ce15762655211b6f8ca186)."
101046,https://phabricator.services.mozilla.com/D101046,Bug 1685291 - [marionette] Special case menupopup elements when checking keyboard interactability,PHID-USER-6oeredp5pcvqrg736rdc,2021-01-07 18:30:32,"@whimboo See https://bugzilla.mozilla.org/show_bug.cgi?id=1685291#c14 and https://bugzilla.mozilla.org/show_bug.cgi?id=1685291#c15 for more context.
This patch brings the actor implementation inline with the framescript implementation, which means we will use legacySendKeysToElement for chrome context calls to sendKeysToElement. 

But maybe we want to avoid using this legacy implementation and instead try to make webdriverSendKeysToElement working for all contexts?

Other potential solution: 
This bug is really an edge case linked to context menu elements. sendKeys usually works for chrome contexts, when used on regular elements. But calling `focus` on the context menu doesn't make it the ""activeElement"" of its corresponding document. Which makes the current implementation of `isKeyboardInteractable` fail:
```lang=javascript
interaction.isKeyboardInteractable = function(el) {
  const win = getWindow(el);

  // body and document element are always keyboard-interactable
  if (el.localName === ""body"" || el === win.document.documentElement) {
    return true;
  }

  el.focus();
  return el === win.document.activeElement;
};
```

I think it makes sense that the context menu doesn't steal the focus. But we could modify this method to handle context menu elements in a special way."
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-2gujohlr3u3puvz4jmvz,2021-01-18 17:00:32,"#check-in_needed handled, landing queued."
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-01-18 16:18:32,Try: https://treeherder.mozilla.org/jobs?repo=try&revision=422571790cd16cf25e3ca5ccd12180f51b33bc57
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-di72flp7skudvz2tfaw6,2021-01-11 14:59:43,">>! In D100996#3287231, @anba wrote:
>>>! In D100996#3282446, @yulia wrote:
>> I've set this to testing approved, but I was unable to find the tests in test262, and the merge is dependent on that into ecma262. Should we create a patch based off of your non262 tests?
> 
> I guess I could point bakkot to our tests, so there's at least a starting point for him. Our tests themselves aren't in any way test262-compatible, they would need to be split up into +29 files: Each entry of the `invalidTestCases` needs to go into a separate file, times two to cover sync and async contexts, and times two to cover the case when the tokens are split across lines. That means 7 * 2 * 2 = 28 files. And then at least another file to cover all positive cases, although I'm not too sure everyone will agree with a single file for all entries from `validTestCases` and `validTestCasesAsync`.

Ok, if that fails I might break this up into test262 tests later on. Thanks for the work!"
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-jnkwwpwrtjrvq34xsacb,2021-01-11 10:40:34,">>! In D100996#3282446, @yulia wrote:
> I've set this to testing approved, but I was unable to find the tests in test262, and the merge is dependent on that into ecma262. Should we create a patch based off of your non262 tests?

I guess I could point bakkot to our tests, so there's at least a starting point for him. Our tests themselves aren't in any way test262-compatible, they would need to be split up into +29 files: Each entry of the `invalidTestCases` needs to go into a separate file, times two to cover sync and async contexts, and times two to cover the case when the tokens are split across lines. That means 7 * 2 * 2 = 28 files. And then at least another file to cover all positive cases, although I'm not too sure everyone will agree with a single file for all entries from `validTestCases` and `validTestCasesAsync`."
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-di72flp7skudvz2tfaw6,2021-01-08 13:22:14,"I've set this to testing approved, but I was unable to find the tests in test262, and the merge is dependent on that into ecma262. Should we create a patch based off of your non262 tests?"
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-USER-di72flp7skudvz2tfaw6,2021-01-08 13:19:31,"Thanks, I agree with going with the second option, better error messages are great."
100996,https://phabricator.services.mozilla.com/D100996,Bug 1685482 - Part 3: Allow 'async' as an identifier in for-await-of loops. r=yulia!,PHID-APPS-PhabricatorHeraldApplication,2021-01-08 13:17:31,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
100946,https://phabricator.services.mozilla.com/D100946,Bug 1664533 - Remove startup crash file off main thread r?kmag,PHID-APPS-PhabricatorHeraldApplication,2021-01-08 20:33:50,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
100946,https://phabricator.services.mozilla.com/D100946,Bug 1664533 - Remove startup crash file off main thread r?kmag,PHID-USER-dy4zkt27g2wyaqmdj4yb,2021-01-08 20:33:50,"Nit: This part should probably also happen in the background thread, since nsIFile mutations have always been a bit... indefinite about when they do IO, and there's always some odd charset conversion and string manipulation involved.

The `NS_GetSpecialDirectory` part could also theoretically happen off-thread, but that's a bit less straightforward of a change."
100796,https://phabricator.services.mozilla.com/D100796,Bug 1683613 - For `non-unified` build have a task that runs checks when merging to mozilla-central,PHID-APPS-PhabricatorHeraldApplication,2021-01-05 19:40:15,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
100796,https://phabricator.services.mozilla.com/D100796,Bug 1683613 - For `non-unified` build have a task that runs checks when merging to mozilla-central,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-01-05 19:40:15,"My bad on shuffling the reviewers there - I'd recommend getting an r+ from glandium before landing this.
However, it looks good to me though 👍"
100796,https://phabricator.services.mozilla.com/D100796,Bug 1683613 - For `non-unified` build have a task that runs checks when merging to mozilla-central,PHID-USER-f4ru6vjyhiosmt2qmdi2,2021-01-05 19:36:21,And a test run: https://treeherder.mozilla.org/jobs?repo=try&revision=d78e7da7c57fc98824d516567d374540865b2e3e&selectedTaskRun=SMkg3JOgRXuZZ-c1laW7TQ.0
100796,https://phabricator.services.mozilla.com/D100796,Bug 1683613 - For `non-unified` build have a task that runs checks when merging to mozilla-central,PHID-USER-4ytd6b7d62yvifo7nfyh,2021-01-05 19:05:20,"Nit: for ""non-unified build on C/C++ files."", yeah?"
100796,https://phabricator.services.mozilla.com/D100796,Bug 1683613 - For `non-unified` build have a task that runs checks when merging to mozilla-central,PHID-USER-cje4weq32o3xyuegalpj,2021-01-05 16:26:29,"The analysis task [source-test-node-devtools-tests](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=D_bwyyrVTwe5DbZB53YkFw-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-clang-format](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=ICsyopVkQZiDvjCkT9Z5ww-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-file-perm](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=LaZHZwtbToyGW_DQlgZpQQ-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-clippy](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=LdR2pZLOTjGHE7mgSkuBGg-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-mingw-cap](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=NXKBuG2xTRmjLiD-4OXtTA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-test-manifest](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=P0qYQVSyTVeBeaaAUNAXYA-0) failed, but we could not detect any issue.
Please check this task manually.

The analysis task [source-test-mozlint-codespell](https://treeherder.mozilla.org/#/jobs?repo=try&revision=cedf560e933b717fb0ed29f107dd5f78dd975e6b&selectedTaskRun=RSfS0SDQR0GJ7w0YNzzxJw-0) failed, but we could not detect any issue.
Please check this task manually.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
100746,https://phabricator.services.mozilla.com/D100746,Bug 1678449 - Part 4: Use span in CompilationStencil.scopeData. r?tcampbell!,PHID-USER-ovlr37yfp3loy53g6wgo,2021-01-06 02:44:48,"thanks!
I'll rebase this patch onto bug 1655052 patches."
100746,https://phabricator.services.mozilla.com/D100746,Bug 1678449 - Part 4: Use span in CompilationStencil.scopeData. r?tcampbell!,PHID-USER-m7as7lsok35qgsp2cq5b,2021-01-06 02:33:33,"In Bug 1655052, I remove `AbstractScopePtrIter` which gets us closer to hopefully retiring most of `AbstractScopePtr` and hopefully removing this need to access `input.enclosingScope` here."
100596,https://phabricator.services.mozilla.com/D100596,Bug 1684645 - Fix the regex for sphinx-copybutton.r=sylvestre,PHID-APPS-PhabricatorHeraldApplication,2021-01-02 15:32:26,"This revision requires a [[https://firefox-source-docs.mozilla.org/testing/testing-policy/ | Testing Policy]] Project Tag to be set before landing. Please apply one of `testing-approved`, `testing-exception-unchanged`, `testing-exception-ui`, `testing-exception-elsewhere`, `testing-exception-other`."
100596,https://phabricator.services.mozilla.com/D100596,Bug 1684645 - Fix the regex for sphinx-copybutton.r=sylvestre,PHID-USER-xsug3d47ikapt73uamb6,2021-01-02 15:32:26,"{meme, src=baby}"
100596,https://phabricator.services.mozilla.com/D100596,Bug 1684645 - Fix the regex for sphinx-copybutton.r=sylvestre,PHID-USER-cje4weq32o3xyuegalpj,2021-01-02 15:13:36,"You have touched the documentation in diff 382183, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e4566408-4d0a-11eb-a811-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
100596,https://phabricator.services.mozilla.com/D100596,Bug 1684645 - Fix the regex for sphinx-copybutton.r=sylvestre,PHID-USER-xsug3d47ikapt73uamb6,2021-01-02 12:58:26,It would be nice to add a comment explaining the various prompts we are catching here
100596,https://phabricator.services.mozilla.com/D100596,Bug 1684645 - Fix the regex for sphinx-copybutton.r=sylvestre,PHID-USER-cje4weq32o3xyuegalpj,2021-01-02 12:31:16,"You have touched the documentation in diff 382179, you can find it rendered [here](http://gecko-docs.mozilla.org-l1.s3-website.us-west-2.amazonaws.com/main/e32aef64-4cf5-11eb-b2f7-0242ac110004/index.html) for a week.

If you see a problem in this automated review, [please report it here](https://bugzilla.mozilla.org/enter_bug.cgi?product=Firefox+Build+System&component=Source+Code+Analysis&short_desc=[Automated+review]+UPDATE&comment=**Phabricator+URL:**+https://phabricator.services.mozilla.com/...&format=__default__)."
100576,https://phabricator.services.mozilla.com/D100576,Bug 1421752 - crashtest for GetRotationOfChar with shadow dom,PHID-USER-zp4gy3jjzfehipsktf6x,2021-01-01 16:18:45,"This doesn't crash anymore because `createShadowRoot()` no longer exists, so I don't think this test-case is particularly useful."
